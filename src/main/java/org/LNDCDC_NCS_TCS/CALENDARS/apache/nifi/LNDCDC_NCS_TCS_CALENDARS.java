/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package org.LNDCDC_NCS_TCS.CALENDARS.apache.nifi;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class LNDCDC_NCS_TCS_CALENDARS extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 5158392341446886795L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"LNDCDC_NCS_TCS_CALENDARS\",\"namespace\":\"org.LNDCDC_NCS_TCS.CALENDARS.apache.nifi\",\"fields\":[{\"name\":\"CAL_WEEK_END_DT\",\"type\":[\"null\",\"string\"]},{\"name\":\"CAL_CALT_TYPE\",\"type\":[\"null\",\"string\"]},{\"name\":\"CAL_CTY_YEAR\",\"type\":[\"null\",\"long\"]},{\"name\":\"CAL_MONTH_END_DT\",\"type\":[\"null\",\"string\"]},{\"name\":\"CAL_MONTH_START_DT\",\"type\":[\"null\",\"string\"]},{\"name\":\"CAL_QTR_NUM\",\"type\":[\"null\",\"long\"]},{\"name\":\"CAL_QTR_START_DT\",\"type\":[\"null\",\"string\"]},{\"name\":\"CAL_QTR_END_DT\",\"type\":[\"null\",\"string\"]},{\"name\":\"CAL_MONTH_NUM\",\"type\":[\"null\",\"double\"]},{\"name\":\"CAL_WEEK_NUM\",\"type\":[\"null\",\"double\"]},{\"name\":\"CAL_WEEK_START_DT\",\"type\":[\"null\",\"string\"]},{\"name\":\"CAL_BILL_MONTH\",\"type\":[\"null\",\"double\"]},{\"name\":\"CAL_BILL_YEAR\",\"type\":[\"null\",\"long\"]},{\"name\":\"CAL_ID\",\"type\":[\"null\",\"long\"]},{\"name\":\"CDC_KEY\",\"type\":[\"null\",\"double\"]},{\"name\":\"SRC_KEY_VAL\",\"type\":\"string\"},{\"name\":\"SRC_CDC_OPER_NM\",\"type\":\"string\"},{\"name\":\"SRC_COMMIT_DT_UTC\",\"type\":\"string\"},{\"name\":\"TRG_CRT_DT_PART_UTC\",\"type\":\"string\"},{\"name\":\"SRC_SCHEMA_NM\",\"type\":\"string\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<LNDCDC_NCS_TCS_CALENDARS> ENCODER =
      new BinaryMessageEncoder<LNDCDC_NCS_TCS_CALENDARS>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<LNDCDC_NCS_TCS_CALENDARS> DECODER =
      new BinaryMessageDecoder<LNDCDC_NCS_TCS_CALENDARS>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<LNDCDC_NCS_TCS_CALENDARS> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<LNDCDC_NCS_TCS_CALENDARS> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<LNDCDC_NCS_TCS_CALENDARS> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<LNDCDC_NCS_TCS_CALENDARS>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this LNDCDC_NCS_TCS_CALENDARS to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a LNDCDC_NCS_TCS_CALENDARS from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a LNDCDC_NCS_TCS_CALENDARS instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static LNDCDC_NCS_TCS_CALENDARS fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

   private java.lang.CharSequence CAL_WEEK_END_DT;
   private java.lang.CharSequence CAL_CALT_TYPE;
   private java.lang.Long CAL_CTY_YEAR;
   private java.lang.CharSequence CAL_MONTH_END_DT;
   private java.lang.CharSequence CAL_MONTH_START_DT;
   private java.lang.Long CAL_QTR_NUM;
   private java.lang.CharSequence CAL_QTR_START_DT;
   private java.lang.CharSequence CAL_QTR_END_DT;
   private java.lang.Double CAL_MONTH_NUM;
   private java.lang.Double CAL_WEEK_NUM;
   private java.lang.CharSequence CAL_WEEK_START_DT;
   private java.lang.Double CAL_BILL_MONTH;
   private java.lang.Long CAL_BILL_YEAR;
   private java.lang.Long CAL_ID;
   private java.lang.Double CDC_KEY;
   private java.lang.CharSequence SRC_KEY_VAL;
   private java.lang.CharSequence SRC_CDC_OPER_NM;
   private java.lang.CharSequence SRC_COMMIT_DT_UTC;
   private java.lang.CharSequence TRG_CRT_DT_PART_UTC;
   private java.lang.CharSequence SRC_SCHEMA_NM;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public LNDCDC_NCS_TCS_CALENDARS() {}

  /**
   * All-args constructor.
   * @param CAL_WEEK_END_DT The new value for CAL_WEEK_END_DT
   * @param CAL_CALT_TYPE The new value for CAL_CALT_TYPE
   * @param CAL_CTY_YEAR The new value for CAL_CTY_YEAR
   * @param CAL_MONTH_END_DT The new value for CAL_MONTH_END_DT
   * @param CAL_MONTH_START_DT The new value for CAL_MONTH_START_DT
   * @param CAL_QTR_NUM The new value for CAL_QTR_NUM
   * @param CAL_QTR_START_DT The new value for CAL_QTR_START_DT
   * @param CAL_QTR_END_DT The new value for CAL_QTR_END_DT
   * @param CAL_MONTH_NUM The new value for CAL_MONTH_NUM
   * @param CAL_WEEK_NUM The new value for CAL_WEEK_NUM
   * @param CAL_WEEK_START_DT The new value for CAL_WEEK_START_DT
   * @param CAL_BILL_MONTH The new value for CAL_BILL_MONTH
   * @param CAL_BILL_YEAR The new value for CAL_BILL_YEAR
   * @param CAL_ID The new value for CAL_ID
   * @param CDC_KEY The new value for CDC_KEY
   * @param SRC_KEY_VAL The new value for SRC_KEY_VAL
   * @param SRC_CDC_OPER_NM The new value for SRC_CDC_OPER_NM
   * @param SRC_COMMIT_DT_UTC The new value for SRC_COMMIT_DT_UTC
   * @param TRG_CRT_DT_PART_UTC The new value for TRG_CRT_DT_PART_UTC
   * @param SRC_SCHEMA_NM The new value for SRC_SCHEMA_NM
   */
  public LNDCDC_NCS_TCS_CALENDARS(java.lang.CharSequence CAL_WEEK_END_DT, java.lang.CharSequence CAL_CALT_TYPE, java.lang.Long CAL_CTY_YEAR, java.lang.CharSequence CAL_MONTH_END_DT, java.lang.CharSequence CAL_MONTH_START_DT, java.lang.Long CAL_QTR_NUM, java.lang.CharSequence CAL_QTR_START_DT, java.lang.CharSequence CAL_QTR_END_DT, java.lang.Double CAL_MONTH_NUM, java.lang.Double CAL_WEEK_NUM, java.lang.CharSequence CAL_WEEK_START_DT, java.lang.Double CAL_BILL_MONTH, java.lang.Long CAL_BILL_YEAR, java.lang.Long CAL_ID, java.lang.Double CDC_KEY, java.lang.CharSequence SRC_KEY_VAL, java.lang.CharSequence SRC_CDC_OPER_NM, java.lang.CharSequence SRC_COMMIT_DT_UTC, java.lang.CharSequence TRG_CRT_DT_PART_UTC, java.lang.CharSequence SRC_SCHEMA_NM) {
    this.CAL_WEEK_END_DT = CAL_WEEK_END_DT;
    this.CAL_CALT_TYPE = CAL_CALT_TYPE;
    this.CAL_CTY_YEAR = CAL_CTY_YEAR;
    this.CAL_MONTH_END_DT = CAL_MONTH_END_DT;
    this.CAL_MONTH_START_DT = CAL_MONTH_START_DT;
    this.CAL_QTR_NUM = CAL_QTR_NUM;
    this.CAL_QTR_START_DT = CAL_QTR_START_DT;
    this.CAL_QTR_END_DT = CAL_QTR_END_DT;
    this.CAL_MONTH_NUM = CAL_MONTH_NUM;
    this.CAL_WEEK_NUM = CAL_WEEK_NUM;
    this.CAL_WEEK_START_DT = CAL_WEEK_START_DT;
    this.CAL_BILL_MONTH = CAL_BILL_MONTH;
    this.CAL_BILL_YEAR = CAL_BILL_YEAR;
    this.CAL_ID = CAL_ID;
    this.CDC_KEY = CDC_KEY;
    this.SRC_KEY_VAL = SRC_KEY_VAL;
    this.SRC_CDC_OPER_NM = SRC_CDC_OPER_NM;
    this.SRC_COMMIT_DT_UTC = SRC_COMMIT_DT_UTC;
    this.TRG_CRT_DT_PART_UTC = TRG_CRT_DT_PART_UTC;
    this.SRC_SCHEMA_NM = SRC_SCHEMA_NM;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return CAL_WEEK_END_DT;
    case 1: return CAL_CALT_TYPE;
    case 2: return CAL_CTY_YEAR;
    case 3: return CAL_MONTH_END_DT;
    case 4: return CAL_MONTH_START_DT;
    case 5: return CAL_QTR_NUM;
    case 6: return CAL_QTR_START_DT;
    case 7: return CAL_QTR_END_DT;
    case 8: return CAL_MONTH_NUM;
    case 9: return CAL_WEEK_NUM;
    case 10: return CAL_WEEK_START_DT;
    case 11: return CAL_BILL_MONTH;
    case 12: return CAL_BILL_YEAR;
    case 13: return CAL_ID;
    case 14: return CDC_KEY;
    case 15: return SRC_KEY_VAL;
    case 16: return SRC_CDC_OPER_NM;
    case 17: return SRC_COMMIT_DT_UTC;
    case 18: return TRG_CRT_DT_PART_UTC;
    case 19: return SRC_SCHEMA_NM;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: CAL_WEEK_END_DT = (java.lang.CharSequence)value$; break;
    case 1: CAL_CALT_TYPE = (java.lang.CharSequence)value$; break;
    case 2: CAL_CTY_YEAR = (java.lang.Long)value$; break;
    case 3: CAL_MONTH_END_DT = (java.lang.CharSequence)value$; break;
    case 4: CAL_MONTH_START_DT = (java.lang.CharSequence)value$; break;
    case 5: CAL_QTR_NUM = (java.lang.Long)value$; break;
    case 6: CAL_QTR_START_DT = (java.lang.CharSequence)value$; break;
    case 7: CAL_QTR_END_DT = (java.lang.CharSequence)value$; break;
    case 8: CAL_MONTH_NUM = (java.lang.Double)value$; break;
    case 9: CAL_WEEK_NUM = (java.lang.Double)value$; break;
    case 10: CAL_WEEK_START_DT = (java.lang.CharSequence)value$; break;
    case 11: CAL_BILL_MONTH = (java.lang.Double)value$; break;
    case 12: CAL_BILL_YEAR = (java.lang.Long)value$; break;
    case 13: CAL_ID = (java.lang.Long)value$; break;
    case 14: CDC_KEY = (java.lang.Double)value$; break;
    case 15: SRC_KEY_VAL = (java.lang.CharSequence)value$; break;
    case 16: SRC_CDC_OPER_NM = (java.lang.CharSequence)value$; break;
    case 17: SRC_COMMIT_DT_UTC = (java.lang.CharSequence)value$; break;
    case 18: TRG_CRT_DT_PART_UTC = (java.lang.CharSequence)value$; break;
    case 19: SRC_SCHEMA_NM = (java.lang.CharSequence)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'CAL_WEEK_END_DT' field.
   * @return The value of the 'CAL_WEEK_END_DT' field.
   */
  public java.lang.CharSequence getCALWEEKENDDT() {
    return CAL_WEEK_END_DT;
  }


  /**
   * Sets the value of the 'CAL_WEEK_END_DT' field.
   * @param value the value to set.
   */
  public void setCALWEEKENDDT(java.lang.CharSequence value) {
    this.CAL_WEEK_END_DT = value;
  }

  /**
   * Gets the value of the 'CAL_CALT_TYPE' field.
   * @return The value of the 'CAL_CALT_TYPE' field.
   */
  public java.lang.CharSequence getCALCALTTYPE() {
    return CAL_CALT_TYPE;
  }


  /**
   * Sets the value of the 'CAL_CALT_TYPE' field.
   * @param value the value to set.
   */
  public void setCALCALTTYPE(java.lang.CharSequence value) {
    this.CAL_CALT_TYPE = value;
  }

  /**
   * Gets the value of the 'CAL_CTY_YEAR' field.
   * @return The value of the 'CAL_CTY_YEAR' field.
   */
  public java.lang.Long getCALCTYYEAR() {
    return CAL_CTY_YEAR;
  }


  /**
   * Sets the value of the 'CAL_CTY_YEAR' field.
   * @param value the value to set.
   */
  public void setCALCTYYEAR(java.lang.Long value) {
    this.CAL_CTY_YEAR = value;
  }

  /**
   * Gets the value of the 'CAL_MONTH_END_DT' field.
   * @return The value of the 'CAL_MONTH_END_DT' field.
   */
  public java.lang.CharSequence getCALMONTHENDDT() {
    return CAL_MONTH_END_DT;
  }


  /**
   * Sets the value of the 'CAL_MONTH_END_DT' field.
   * @param value the value to set.
   */
  public void setCALMONTHENDDT(java.lang.CharSequence value) {
    this.CAL_MONTH_END_DT = value;
  }

  /**
   * Gets the value of the 'CAL_MONTH_START_DT' field.
   * @return The value of the 'CAL_MONTH_START_DT' field.
   */
  public java.lang.CharSequence getCALMONTHSTARTDT() {
    return CAL_MONTH_START_DT;
  }


  /**
   * Sets the value of the 'CAL_MONTH_START_DT' field.
   * @param value the value to set.
   */
  public void setCALMONTHSTARTDT(java.lang.CharSequence value) {
    this.CAL_MONTH_START_DT = value;
  }

  /**
   * Gets the value of the 'CAL_QTR_NUM' field.
   * @return The value of the 'CAL_QTR_NUM' field.
   */
  public java.lang.Long getCALQTRNUM() {
    return CAL_QTR_NUM;
  }


  /**
   * Sets the value of the 'CAL_QTR_NUM' field.
   * @param value the value to set.
   */
  public void setCALQTRNUM(java.lang.Long value) {
    this.CAL_QTR_NUM = value;
  }

  /**
   * Gets the value of the 'CAL_QTR_START_DT' field.
   * @return The value of the 'CAL_QTR_START_DT' field.
   */
  public java.lang.CharSequence getCALQTRSTARTDT() {
    return CAL_QTR_START_DT;
  }


  /**
   * Sets the value of the 'CAL_QTR_START_DT' field.
   * @param value the value to set.
   */
  public void setCALQTRSTARTDT(java.lang.CharSequence value) {
    this.CAL_QTR_START_DT = value;
  }

  /**
   * Gets the value of the 'CAL_QTR_END_DT' field.
   * @return The value of the 'CAL_QTR_END_DT' field.
   */
  public java.lang.CharSequence getCALQTRENDDT() {
    return CAL_QTR_END_DT;
  }


  /**
   * Sets the value of the 'CAL_QTR_END_DT' field.
   * @param value the value to set.
   */
  public void setCALQTRENDDT(java.lang.CharSequence value) {
    this.CAL_QTR_END_DT = value;
  }

  /**
   * Gets the value of the 'CAL_MONTH_NUM' field.
   * @return The value of the 'CAL_MONTH_NUM' field.
   */
  public java.lang.Double getCALMONTHNUM() {
    return CAL_MONTH_NUM;
  }


  /**
   * Sets the value of the 'CAL_MONTH_NUM' field.
   * @param value the value to set.
   */
  public void setCALMONTHNUM(java.lang.Double value) {
    this.CAL_MONTH_NUM = value;
  }

  /**
   * Gets the value of the 'CAL_WEEK_NUM' field.
   * @return The value of the 'CAL_WEEK_NUM' field.
   */
  public java.lang.Double getCALWEEKNUM() {
    return CAL_WEEK_NUM;
  }


  /**
   * Sets the value of the 'CAL_WEEK_NUM' field.
   * @param value the value to set.
   */
  public void setCALWEEKNUM(java.lang.Double value) {
    this.CAL_WEEK_NUM = value;
  }

  /**
   * Gets the value of the 'CAL_WEEK_START_DT' field.
   * @return The value of the 'CAL_WEEK_START_DT' field.
   */
  public java.lang.CharSequence getCALWEEKSTARTDT() {
    return CAL_WEEK_START_DT;
  }


  /**
   * Sets the value of the 'CAL_WEEK_START_DT' field.
   * @param value the value to set.
   */
  public void setCALWEEKSTARTDT(java.lang.CharSequence value) {
    this.CAL_WEEK_START_DT = value;
  }

  /**
   * Gets the value of the 'CAL_BILL_MONTH' field.
   * @return The value of the 'CAL_BILL_MONTH' field.
   */
  public java.lang.Double getCALBILLMONTH() {
    return CAL_BILL_MONTH;
  }


  /**
   * Sets the value of the 'CAL_BILL_MONTH' field.
   * @param value the value to set.
   */
  public void setCALBILLMONTH(java.lang.Double value) {
    this.CAL_BILL_MONTH = value;
  }

  /**
   * Gets the value of the 'CAL_BILL_YEAR' field.
   * @return The value of the 'CAL_BILL_YEAR' field.
   */
  public java.lang.Long getCALBILLYEAR() {
    return CAL_BILL_YEAR;
  }


  /**
   * Sets the value of the 'CAL_BILL_YEAR' field.
   * @param value the value to set.
   */
  public void setCALBILLYEAR(java.lang.Long value) {
    this.CAL_BILL_YEAR = value;
  }

  /**
   * Gets the value of the 'CAL_ID' field.
   * @return The value of the 'CAL_ID' field.
   */
  public java.lang.Long getCALID() {
    return CAL_ID;
  }


  /**
   * Sets the value of the 'CAL_ID' field.
   * @param value the value to set.
   */
  public void setCALID(java.lang.Long value) {
    this.CAL_ID = value;
  }

  /**
   * Gets the value of the 'CDC_KEY' field.
   * @return The value of the 'CDC_KEY' field.
   */
  public java.lang.Double getCDCKEY() {
    return CDC_KEY;
  }


  /**
   * Sets the value of the 'CDC_KEY' field.
   * @param value the value to set.
   */
  public void setCDCKEY(java.lang.Double value) {
    this.CDC_KEY = value;
  }

  /**
   * Gets the value of the 'SRC_KEY_VAL' field.
   * @return The value of the 'SRC_KEY_VAL' field.
   */
  public java.lang.CharSequence getSRCKEYVAL() {
    return SRC_KEY_VAL;
  }


  /**
   * Sets the value of the 'SRC_KEY_VAL' field.
   * @param value the value to set.
   */
  public void setSRCKEYVAL(java.lang.CharSequence value) {
    this.SRC_KEY_VAL = value;
  }

  /**
   * Gets the value of the 'SRC_CDC_OPER_NM' field.
   * @return The value of the 'SRC_CDC_OPER_NM' field.
   */
  public java.lang.CharSequence getSRCCDCOPERNM() {
    return SRC_CDC_OPER_NM;
  }


  /**
   * Sets the value of the 'SRC_CDC_OPER_NM' field.
   * @param value the value to set.
   */
  public void setSRCCDCOPERNM(java.lang.CharSequence value) {
    this.SRC_CDC_OPER_NM = value;
  }

  /**
   * Gets the value of the 'SRC_COMMIT_DT_UTC' field.
   * @return The value of the 'SRC_COMMIT_DT_UTC' field.
   */
  public java.lang.CharSequence getSRCCOMMITDTUTC() {
    return SRC_COMMIT_DT_UTC;
  }


  /**
   * Sets the value of the 'SRC_COMMIT_DT_UTC' field.
   * @param value the value to set.
   */
  public void setSRCCOMMITDTUTC(java.lang.CharSequence value) {
    this.SRC_COMMIT_DT_UTC = value;
  }

  /**
   * Gets the value of the 'TRG_CRT_DT_PART_UTC' field.
   * @return The value of the 'TRG_CRT_DT_PART_UTC' field.
   */
  public java.lang.CharSequence getTRGCRTDTPARTUTC() {
    return TRG_CRT_DT_PART_UTC;
  }


  /**
   * Sets the value of the 'TRG_CRT_DT_PART_UTC' field.
   * @param value the value to set.
   */
  public void setTRGCRTDTPARTUTC(java.lang.CharSequence value) {
    this.TRG_CRT_DT_PART_UTC = value;
  }

  /**
   * Gets the value of the 'SRC_SCHEMA_NM' field.
   * @return The value of the 'SRC_SCHEMA_NM' field.
   */
  public java.lang.CharSequence getSRCSCHEMANM() {
    return SRC_SCHEMA_NM;
  }


  /**
   * Sets the value of the 'SRC_SCHEMA_NM' field.
   * @param value the value to set.
   */
  public void setSRCSCHEMANM(java.lang.CharSequence value) {
    this.SRC_SCHEMA_NM = value;
  }

  /**
   * Creates a new LNDCDC_NCS_TCS_CALENDARS RecordBuilder.
   * @return A new LNDCDC_NCS_TCS_CALENDARS RecordBuilder
   */
  public static org.LNDCDC_NCS_TCS.CALENDARS.apache.nifi.LNDCDC_NCS_TCS_CALENDARS.Builder newBuilder() {
    return new org.LNDCDC_NCS_TCS.CALENDARS.apache.nifi.LNDCDC_NCS_TCS_CALENDARS.Builder();
  }

  /**
   * Creates a new LNDCDC_NCS_TCS_CALENDARS RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new LNDCDC_NCS_TCS_CALENDARS RecordBuilder
   */
  public static org.LNDCDC_NCS_TCS.CALENDARS.apache.nifi.LNDCDC_NCS_TCS_CALENDARS.Builder newBuilder(org.LNDCDC_NCS_TCS.CALENDARS.apache.nifi.LNDCDC_NCS_TCS_CALENDARS.Builder other) {
    if (other == null) {
      return new org.LNDCDC_NCS_TCS.CALENDARS.apache.nifi.LNDCDC_NCS_TCS_CALENDARS.Builder();
    } else {
      return new org.LNDCDC_NCS_TCS.CALENDARS.apache.nifi.LNDCDC_NCS_TCS_CALENDARS.Builder(other);
    }
  }

  /**
   * Creates a new LNDCDC_NCS_TCS_CALENDARS RecordBuilder by copying an existing LNDCDC_NCS_TCS_CALENDARS instance.
   * @param other The existing instance to copy.
   * @return A new LNDCDC_NCS_TCS_CALENDARS RecordBuilder
   */
  public static org.LNDCDC_NCS_TCS.CALENDARS.apache.nifi.LNDCDC_NCS_TCS_CALENDARS.Builder newBuilder(org.LNDCDC_NCS_TCS.CALENDARS.apache.nifi.LNDCDC_NCS_TCS_CALENDARS other) {
    if (other == null) {
      return new org.LNDCDC_NCS_TCS.CALENDARS.apache.nifi.LNDCDC_NCS_TCS_CALENDARS.Builder();
    } else {
      return new org.LNDCDC_NCS_TCS.CALENDARS.apache.nifi.LNDCDC_NCS_TCS_CALENDARS.Builder(other);
    }
  }

  /**
   * RecordBuilder for LNDCDC_NCS_TCS_CALENDARS instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<LNDCDC_NCS_TCS_CALENDARS>
    implements org.apache.avro.data.RecordBuilder<LNDCDC_NCS_TCS_CALENDARS> {

    private java.lang.CharSequence CAL_WEEK_END_DT;
    private java.lang.CharSequence CAL_CALT_TYPE;
    private java.lang.Long CAL_CTY_YEAR;
    private java.lang.CharSequence CAL_MONTH_END_DT;
    private java.lang.CharSequence CAL_MONTH_START_DT;
    private java.lang.Long CAL_QTR_NUM;
    private java.lang.CharSequence CAL_QTR_START_DT;
    private java.lang.CharSequence CAL_QTR_END_DT;
    private java.lang.Double CAL_MONTH_NUM;
    private java.lang.Double CAL_WEEK_NUM;
    private java.lang.CharSequence CAL_WEEK_START_DT;
    private java.lang.Double CAL_BILL_MONTH;
    private java.lang.Long CAL_BILL_YEAR;
    private java.lang.Long CAL_ID;
    private java.lang.Double CDC_KEY;
    private java.lang.CharSequence SRC_KEY_VAL;
    private java.lang.CharSequence SRC_CDC_OPER_NM;
    private java.lang.CharSequence SRC_COMMIT_DT_UTC;
    private java.lang.CharSequence TRG_CRT_DT_PART_UTC;
    private java.lang.CharSequence SRC_SCHEMA_NM;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(org.LNDCDC_NCS_TCS.CALENDARS.apache.nifi.LNDCDC_NCS_TCS_CALENDARS.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.CAL_WEEK_END_DT)) {
        this.CAL_WEEK_END_DT = data().deepCopy(fields()[0].schema(), other.CAL_WEEK_END_DT);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.CAL_CALT_TYPE)) {
        this.CAL_CALT_TYPE = data().deepCopy(fields()[1].schema(), other.CAL_CALT_TYPE);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.CAL_CTY_YEAR)) {
        this.CAL_CTY_YEAR = data().deepCopy(fields()[2].schema(), other.CAL_CTY_YEAR);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.CAL_MONTH_END_DT)) {
        this.CAL_MONTH_END_DT = data().deepCopy(fields()[3].schema(), other.CAL_MONTH_END_DT);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.CAL_MONTH_START_DT)) {
        this.CAL_MONTH_START_DT = data().deepCopy(fields()[4].schema(), other.CAL_MONTH_START_DT);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.CAL_QTR_NUM)) {
        this.CAL_QTR_NUM = data().deepCopy(fields()[5].schema(), other.CAL_QTR_NUM);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.CAL_QTR_START_DT)) {
        this.CAL_QTR_START_DT = data().deepCopy(fields()[6].schema(), other.CAL_QTR_START_DT);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.CAL_QTR_END_DT)) {
        this.CAL_QTR_END_DT = data().deepCopy(fields()[7].schema(), other.CAL_QTR_END_DT);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.CAL_MONTH_NUM)) {
        this.CAL_MONTH_NUM = data().deepCopy(fields()[8].schema(), other.CAL_MONTH_NUM);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
      if (isValidValue(fields()[9], other.CAL_WEEK_NUM)) {
        this.CAL_WEEK_NUM = data().deepCopy(fields()[9].schema(), other.CAL_WEEK_NUM);
        fieldSetFlags()[9] = other.fieldSetFlags()[9];
      }
      if (isValidValue(fields()[10], other.CAL_WEEK_START_DT)) {
        this.CAL_WEEK_START_DT = data().deepCopy(fields()[10].schema(), other.CAL_WEEK_START_DT);
        fieldSetFlags()[10] = other.fieldSetFlags()[10];
      }
      if (isValidValue(fields()[11], other.CAL_BILL_MONTH)) {
        this.CAL_BILL_MONTH = data().deepCopy(fields()[11].schema(), other.CAL_BILL_MONTH);
        fieldSetFlags()[11] = other.fieldSetFlags()[11];
      }
      if (isValidValue(fields()[12], other.CAL_BILL_YEAR)) {
        this.CAL_BILL_YEAR = data().deepCopy(fields()[12].schema(), other.CAL_BILL_YEAR);
        fieldSetFlags()[12] = other.fieldSetFlags()[12];
      }
      if (isValidValue(fields()[13], other.CAL_ID)) {
        this.CAL_ID = data().deepCopy(fields()[13].schema(), other.CAL_ID);
        fieldSetFlags()[13] = other.fieldSetFlags()[13];
      }
      if (isValidValue(fields()[14], other.CDC_KEY)) {
        this.CDC_KEY = data().deepCopy(fields()[14].schema(), other.CDC_KEY);
        fieldSetFlags()[14] = other.fieldSetFlags()[14];
      }
      if (isValidValue(fields()[15], other.SRC_KEY_VAL)) {
        this.SRC_KEY_VAL = data().deepCopy(fields()[15].schema(), other.SRC_KEY_VAL);
        fieldSetFlags()[15] = other.fieldSetFlags()[15];
      }
      if (isValidValue(fields()[16], other.SRC_CDC_OPER_NM)) {
        this.SRC_CDC_OPER_NM = data().deepCopy(fields()[16].schema(), other.SRC_CDC_OPER_NM);
        fieldSetFlags()[16] = other.fieldSetFlags()[16];
      }
      if (isValidValue(fields()[17], other.SRC_COMMIT_DT_UTC)) {
        this.SRC_COMMIT_DT_UTC = data().deepCopy(fields()[17].schema(), other.SRC_COMMIT_DT_UTC);
        fieldSetFlags()[17] = other.fieldSetFlags()[17];
      }
      if (isValidValue(fields()[18], other.TRG_CRT_DT_PART_UTC)) {
        this.TRG_CRT_DT_PART_UTC = data().deepCopy(fields()[18].schema(), other.TRG_CRT_DT_PART_UTC);
        fieldSetFlags()[18] = other.fieldSetFlags()[18];
      }
      if (isValidValue(fields()[19], other.SRC_SCHEMA_NM)) {
        this.SRC_SCHEMA_NM = data().deepCopy(fields()[19].schema(), other.SRC_SCHEMA_NM);
        fieldSetFlags()[19] = other.fieldSetFlags()[19];
      }
    }

    /**
     * Creates a Builder by copying an existing LNDCDC_NCS_TCS_CALENDARS instance
     * @param other The existing instance to copy.
     */
    private Builder(org.LNDCDC_NCS_TCS.CALENDARS.apache.nifi.LNDCDC_NCS_TCS_CALENDARS other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.CAL_WEEK_END_DT)) {
        this.CAL_WEEK_END_DT = data().deepCopy(fields()[0].schema(), other.CAL_WEEK_END_DT);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.CAL_CALT_TYPE)) {
        this.CAL_CALT_TYPE = data().deepCopy(fields()[1].schema(), other.CAL_CALT_TYPE);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.CAL_CTY_YEAR)) {
        this.CAL_CTY_YEAR = data().deepCopy(fields()[2].schema(), other.CAL_CTY_YEAR);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.CAL_MONTH_END_DT)) {
        this.CAL_MONTH_END_DT = data().deepCopy(fields()[3].schema(), other.CAL_MONTH_END_DT);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.CAL_MONTH_START_DT)) {
        this.CAL_MONTH_START_DT = data().deepCopy(fields()[4].schema(), other.CAL_MONTH_START_DT);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.CAL_QTR_NUM)) {
        this.CAL_QTR_NUM = data().deepCopy(fields()[5].schema(), other.CAL_QTR_NUM);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.CAL_QTR_START_DT)) {
        this.CAL_QTR_START_DT = data().deepCopy(fields()[6].schema(), other.CAL_QTR_START_DT);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.CAL_QTR_END_DT)) {
        this.CAL_QTR_END_DT = data().deepCopy(fields()[7].schema(), other.CAL_QTR_END_DT);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.CAL_MONTH_NUM)) {
        this.CAL_MONTH_NUM = data().deepCopy(fields()[8].schema(), other.CAL_MONTH_NUM);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.CAL_WEEK_NUM)) {
        this.CAL_WEEK_NUM = data().deepCopy(fields()[9].schema(), other.CAL_WEEK_NUM);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.CAL_WEEK_START_DT)) {
        this.CAL_WEEK_START_DT = data().deepCopy(fields()[10].schema(), other.CAL_WEEK_START_DT);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.CAL_BILL_MONTH)) {
        this.CAL_BILL_MONTH = data().deepCopy(fields()[11].schema(), other.CAL_BILL_MONTH);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.CAL_BILL_YEAR)) {
        this.CAL_BILL_YEAR = data().deepCopy(fields()[12].schema(), other.CAL_BILL_YEAR);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.CAL_ID)) {
        this.CAL_ID = data().deepCopy(fields()[13].schema(), other.CAL_ID);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.CDC_KEY)) {
        this.CDC_KEY = data().deepCopy(fields()[14].schema(), other.CDC_KEY);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.SRC_KEY_VAL)) {
        this.SRC_KEY_VAL = data().deepCopy(fields()[15].schema(), other.SRC_KEY_VAL);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.SRC_CDC_OPER_NM)) {
        this.SRC_CDC_OPER_NM = data().deepCopy(fields()[16].schema(), other.SRC_CDC_OPER_NM);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.SRC_COMMIT_DT_UTC)) {
        this.SRC_COMMIT_DT_UTC = data().deepCopy(fields()[17].schema(), other.SRC_COMMIT_DT_UTC);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.TRG_CRT_DT_PART_UTC)) {
        this.TRG_CRT_DT_PART_UTC = data().deepCopy(fields()[18].schema(), other.TRG_CRT_DT_PART_UTC);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.SRC_SCHEMA_NM)) {
        this.SRC_SCHEMA_NM = data().deepCopy(fields()[19].schema(), other.SRC_SCHEMA_NM);
        fieldSetFlags()[19] = true;
      }
    }

    /**
      * Gets the value of the 'CAL_WEEK_END_DT' field.
      * @return The value.
      */
    public java.lang.CharSequence getCALWEEKENDDT() {
      return CAL_WEEK_END_DT;
    }


    /**
      * Sets the value of the 'CAL_WEEK_END_DT' field.
      * @param value The value of 'CAL_WEEK_END_DT'.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.CALENDARS.apache.nifi.LNDCDC_NCS_TCS_CALENDARS.Builder setCALWEEKENDDT(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.CAL_WEEK_END_DT = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'CAL_WEEK_END_DT' field has been set.
      * @return True if the 'CAL_WEEK_END_DT' field has been set, false otherwise.
      */
    public boolean hasCALWEEKENDDT() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'CAL_WEEK_END_DT' field.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.CALENDARS.apache.nifi.LNDCDC_NCS_TCS_CALENDARS.Builder clearCALWEEKENDDT() {
      CAL_WEEK_END_DT = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'CAL_CALT_TYPE' field.
      * @return The value.
      */
    public java.lang.CharSequence getCALCALTTYPE() {
      return CAL_CALT_TYPE;
    }


    /**
      * Sets the value of the 'CAL_CALT_TYPE' field.
      * @param value The value of 'CAL_CALT_TYPE'.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.CALENDARS.apache.nifi.LNDCDC_NCS_TCS_CALENDARS.Builder setCALCALTTYPE(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.CAL_CALT_TYPE = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'CAL_CALT_TYPE' field has been set.
      * @return True if the 'CAL_CALT_TYPE' field has been set, false otherwise.
      */
    public boolean hasCALCALTTYPE() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'CAL_CALT_TYPE' field.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.CALENDARS.apache.nifi.LNDCDC_NCS_TCS_CALENDARS.Builder clearCALCALTTYPE() {
      CAL_CALT_TYPE = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'CAL_CTY_YEAR' field.
      * @return The value.
      */
    public java.lang.Long getCALCTYYEAR() {
      return CAL_CTY_YEAR;
    }


    /**
      * Sets the value of the 'CAL_CTY_YEAR' field.
      * @param value The value of 'CAL_CTY_YEAR'.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.CALENDARS.apache.nifi.LNDCDC_NCS_TCS_CALENDARS.Builder setCALCTYYEAR(java.lang.Long value) {
      validate(fields()[2], value);
      this.CAL_CTY_YEAR = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'CAL_CTY_YEAR' field has been set.
      * @return True if the 'CAL_CTY_YEAR' field has been set, false otherwise.
      */
    public boolean hasCALCTYYEAR() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'CAL_CTY_YEAR' field.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.CALENDARS.apache.nifi.LNDCDC_NCS_TCS_CALENDARS.Builder clearCALCTYYEAR() {
      CAL_CTY_YEAR = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'CAL_MONTH_END_DT' field.
      * @return The value.
      */
    public java.lang.CharSequence getCALMONTHENDDT() {
      return CAL_MONTH_END_DT;
    }


    /**
      * Sets the value of the 'CAL_MONTH_END_DT' field.
      * @param value The value of 'CAL_MONTH_END_DT'.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.CALENDARS.apache.nifi.LNDCDC_NCS_TCS_CALENDARS.Builder setCALMONTHENDDT(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.CAL_MONTH_END_DT = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'CAL_MONTH_END_DT' field has been set.
      * @return True if the 'CAL_MONTH_END_DT' field has been set, false otherwise.
      */
    public boolean hasCALMONTHENDDT() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'CAL_MONTH_END_DT' field.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.CALENDARS.apache.nifi.LNDCDC_NCS_TCS_CALENDARS.Builder clearCALMONTHENDDT() {
      CAL_MONTH_END_DT = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'CAL_MONTH_START_DT' field.
      * @return The value.
      */
    public java.lang.CharSequence getCALMONTHSTARTDT() {
      return CAL_MONTH_START_DT;
    }


    /**
      * Sets the value of the 'CAL_MONTH_START_DT' field.
      * @param value The value of 'CAL_MONTH_START_DT'.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.CALENDARS.apache.nifi.LNDCDC_NCS_TCS_CALENDARS.Builder setCALMONTHSTARTDT(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.CAL_MONTH_START_DT = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'CAL_MONTH_START_DT' field has been set.
      * @return True if the 'CAL_MONTH_START_DT' field has been set, false otherwise.
      */
    public boolean hasCALMONTHSTARTDT() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'CAL_MONTH_START_DT' field.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.CALENDARS.apache.nifi.LNDCDC_NCS_TCS_CALENDARS.Builder clearCALMONTHSTARTDT() {
      CAL_MONTH_START_DT = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'CAL_QTR_NUM' field.
      * @return The value.
      */
    public java.lang.Long getCALQTRNUM() {
      return CAL_QTR_NUM;
    }


    /**
      * Sets the value of the 'CAL_QTR_NUM' field.
      * @param value The value of 'CAL_QTR_NUM'.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.CALENDARS.apache.nifi.LNDCDC_NCS_TCS_CALENDARS.Builder setCALQTRNUM(java.lang.Long value) {
      validate(fields()[5], value);
      this.CAL_QTR_NUM = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'CAL_QTR_NUM' field has been set.
      * @return True if the 'CAL_QTR_NUM' field has been set, false otherwise.
      */
    public boolean hasCALQTRNUM() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'CAL_QTR_NUM' field.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.CALENDARS.apache.nifi.LNDCDC_NCS_TCS_CALENDARS.Builder clearCALQTRNUM() {
      CAL_QTR_NUM = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'CAL_QTR_START_DT' field.
      * @return The value.
      */
    public java.lang.CharSequence getCALQTRSTARTDT() {
      return CAL_QTR_START_DT;
    }


    /**
      * Sets the value of the 'CAL_QTR_START_DT' field.
      * @param value The value of 'CAL_QTR_START_DT'.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.CALENDARS.apache.nifi.LNDCDC_NCS_TCS_CALENDARS.Builder setCALQTRSTARTDT(java.lang.CharSequence value) {
      validate(fields()[6], value);
      this.CAL_QTR_START_DT = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'CAL_QTR_START_DT' field has been set.
      * @return True if the 'CAL_QTR_START_DT' field has been set, false otherwise.
      */
    public boolean hasCALQTRSTARTDT() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'CAL_QTR_START_DT' field.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.CALENDARS.apache.nifi.LNDCDC_NCS_TCS_CALENDARS.Builder clearCALQTRSTARTDT() {
      CAL_QTR_START_DT = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'CAL_QTR_END_DT' field.
      * @return The value.
      */
    public java.lang.CharSequence getCALQTRENDDT() {
      return CAL_QTR_END_DT;
    }


    /**
      * Sets the value of the 'CAL_QTR_END_DT' field.
      * @param value The value of 'CAL_QTR_END_DT'.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.CALENDARS.apache.nifi.LNDCDC_NCS_TCS_CALENDARS.Builder setCALQTRENDDT(java.lang.CharSequence value) {
      validate(fields()[7], value);
      this.CAL_QTR_END_DT = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'CAL_QTR_END_DT' field has been set.
      * @return True if the 'CAL_QTR_END_DT' field has been set, false otherwise.
      */
    public boolean hasCALQTRENDDT() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'CAL_QTR_END_DT' field.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.CALENDARS.apache.nifi.LNDCDC_NCS_TCS_CALENDARS.Builder clearCALQTRENDDT() {
      CAL_QTR_END_DT = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'CAL_MONTH_NUM' field.
      * @return The value.
      */
    public java.lang.Double getCALMONTHNUM() {
      return CAL_MONTH_NUM;
    }


    /**
      * Sets the value of the 'CAL_MONTH_NUM' field.
      * @param value The value of 'CAL_MONTH_NUM'.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.CALENDARS.apache.nifi.LNDCDC_NCS_TCS_CALENDARS.Builder setCALMONTHNUM(java.lang.Double value) {
      validate(fields()[8], value);
      this.CAL_MONTH_NUM = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'CAL_MONTH_NUM' field has been set.
      * @return True if the 'CAL_MONTH_NUM' field has been set, false otherwise.
      */
    public boolean hasCALMONTHNUM() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'CAL_MONTH_NUM' field.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.CALENDARS.apache.nifi.LNDCDC_NCS_TCS_CALENDARS.Builder clearCALMONTHNUM() {
      CAL_MONTH_NUM = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'CAL_WEEK_NUM' field.
      * @return The value.
      */
    public java.lang.Double getCALWEEKNUM() {
      return CAL_WEEK_NUM;
    }


    /**
      * Sets the value of the 'CAL_WEEK_NUM' field.
      * @param value The value of 'CAL_WEEK_NUM'.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.CALENDARS.apache.nifi.LNDCDC_NCS_TCS_CALENDARS.Builder setCALWEEKNUM(java.lang.Double value) {
      validate(fields()[9], value);
      this.CAL_WEEK_NUM = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'CAL_WEEK_NUM' field has been set.
      * @return True if the 'CAL_WEEK_NUM' field has been set, false otherwise.
      */
    public boolean hasCALWEEKNUM() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'CAL_WEEK_NUM' field.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.CALENDARS.apache.nifi.LNDCDC_NCS_TCS_CALENDARS.Builder clearCALWEEKNUM() {
      CAL_WEEK_NUM = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'CAL_WEEK_START_DT' field.
      * @return The value.
      */
    public java.lang.CharSequence getCALWEEKSTARTDT() {
      return CAL_WEEK_START_DT;
    }


    /**
      * Sets the value of the 'CAL_WEEK_START_DT' field.
      * @param value The value of 'CAL_WEEK_START_DT'.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.CALENDARS.apache.nifi.LNDCDC_NCS_TCS_CALENDARS.Builder setCALWEEKSTARTDT(java.lang.CharSequence value) {
      validate(fields()[10], value);
      this.CAL_WEEK_START_DT = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'CAL_WEEK_START_DT' field has been set.
      * @return True if the 'CAL_WEEK_START_DT' field has been set, false otherwise.
      */
    public boolean hasCALWEEKSTARTDT() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'CAL_WEEK_START_DT' field.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.CALENDARS.apache.nifi.LNDCDC_NCS_TCS_CALENDARS.Builder clearCALWEEKSTARTDT() {
      CAL_WEEK_START_DT = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'CAL_BILL_MONTH' field.
      * @return The value.
      */
    public java.lang.Double getCALBILLMONTH() {
      return CAL_BILL_MONTH;
    }


    /**
      * Sets the value of the 'CAL_BILL_MONTH' field.
      * @param value The value of 'CAL_BILL_MONTH'.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.CALENDARS.apache.nifi.LNDCDC_NCS_TCS_CALENDARS.Builder setCALBILLMONTH(java.lang.Double value) {
      validate(fields()[11], value);
      this.CAL_BILL_MONTH = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'CAL_BILL_MONTH' field has been set.
      * @return True if the 'CAL_BILL_MONTH' field has been set, false otherwise.
      */
    public boolean hasCALBILLMONTH() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'CAL_BILL_MONTH' field.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.CALENDARS.apache.nifi.LNDCDC_NCS_TCS_CALENDARS.Builder clearCALBILLMONTH() {
      CAL_BILL_MONTH = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'CAL_BILL_YEAR' field.
      * @return The value.
      */
    public java.lang.Long getCALBILLYEAR() {
      return CAL_BILL_YEAR;
    }


    /**
      * Sets the value of the 'CAL_BILL_YEAR' field.
      * @param value The value of 'CAL_BILL_YEAR'.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.CALENDARS.apache.nifi.LNDCDC_NCS_TCS_CALENDARS.Builder setCALBILLYEAR(java.lang.Long value) {
      validate(fields()[12], value);
      this.CAL_BILL_YEAR = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'CAL_BILL_YEAR' field has been set.
      * @return True if the 'CAL_BILL_YEAR' field has been set, false otherwise.
      */
    public boolean hasCALBILLYEAR() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'CAL_BILL_YEAR' field.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.CALENDARS.apache.nifi.LNDCDC_NCS_TCS_CALENDARS.Builder clearCALBILLYEAR() {
      CAL_BILL_YEAR = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'CAL_ID' field.
      * @return The value.
      */
    public java.lang.Long getCALID() {
      return CAL_ID;
    }


    /**
      * Sets the value of the 'CAL_ID' field.
      * @param value The value of 'CAL_ID'.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.CALENDARS.apache.nifi.LNDCDC_NCS_TCS_CALENDARS.Builder setCALID(java.lang.Long value) {
      validate(fields()[13], value);
      this.CAL_ID = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'CAL_ID' field has been set.
      * @return True if the 'CAL_ID' field has been set, false otherwise.
      */
    public boolean hasCALID() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'CAL_ID' field.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.CALENDARS.apache.nifi.LNDCDC_NCS_TCS_CALENDARS.Builder clearCALID() {
      CAL_ID = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    /**
      * Gets the value of the 'CDC_KEY' field.
      * @return The value.
      */
    public java.lang.Double getCDCKEY() {
      return CDC_KEY;
    }


    /**
      * Sets the value of the 'CDC_KEY' field.
      * @param value The value of 'CDC_KEY'.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.CALENDARS.apache.nifi.LNDCDC_NCS_TCS_CALENDARS.Builder setCDCKEY(java.lang.Double value) {
      validate(fields()[14], value);
      this.CDC_KEY = value;
      fieldSetFlags()[14] = true;
      return this;
    }

    /**
      * Checks whether the 'CDC_KEY' field has been set.
      * @return True if the 'CDC_KEY' field has been set, false otherwise.
      */
    public boolean hasCDCKEY() {
      return fieldSetFlags()[14];
    }


    /**
      * Clears the value of the 'CDC_KEY' field.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.CALENDARS.apache.nifi.LNDCDC_NCS_TCS_CALENDARS.Builder clearCDCKEY() {
      CDC_KEY = null;
      fieldSetFlags()[14] = false;
      return this;
    }

    /**
      * Gets the value of the 'SRC_KEY_VAL' field.
      * @return The value.
      */
    public java.lang.CharSequence getSRCKEYVAL() {
      return SRC_KEY_VAL;
    }


    /**
      * Sets the value of the 'SRC_KEY_VAL' field.
      * @param value The value of 'SRC_KEY_VAL'.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.CALENDARS.apache.nifi.LNDCDC_NCS_TCS_CALENDARS.Builder setSRCKEYVAL(java.lang.CharSequence value) {
      validate(fields()[15], value);
      this.SRC_KEY_VAL = value;
      fieldSetFlags()[15] = true;
      return this;
    }

    /**
      * Checks whether the 'SRC_KEY_VAL' field has been set.
      * @return True if the 'SRC_KEY_VAL' field has been set, false otherwise.
      */
    public boolean hasSRCKEYVAL() {
      return fieldSetFlags()[15];
    }


    /**
      * Clears the value of the 'SRC_KEY_VAL' field.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.CALENDARS.apache.nifi.LNDCDC_NCS_TCS_CALENDARS.Builder clearSRCKEYVAL() {
      SRC_KEY_VAL = null;
      fieldSetFlags()[15] = false;
      return this;
    }

    /**
      * Gets the value of the 'SRC_CDC_OPER_NM' field.
      * @return The value.
      */
    public java.lang.CharSequence getSRCCDCOPERNM() {
      return SRC_CDC_OPER_NM;
    }


    /**
      * Sets the value of the 'SRC_CDC_OPER_NM' field.
      * @param value The value of 'SRC_CDC_OPER_NM'.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.CALENDARS.apache.nifi.LNDCDC_NCS_TCS_CALENDARS.Builder setSRCCDCOPERNM(java.lang.CharSequence value) {
      validate(fields()[16], value);
      this.SRC_CDC_OPER_NM = value;
      fieldSetFlags()[16] = true;
      return this;
    }

    /**
      * Checks whether the 'SRC_CDC_OPER_NM' field has been set.
      * @return True if the 'SRC_CDC_OPER_NM' field has been set, false otherwise.
      */
    public boolean hasSRCCDCOPERNM() {
      return fieldSetFlags()[16];
    }


    /**
      * Clears the value of the 'SRC_CDC_OPER_NM' field.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.CALENDARS.apache.nifi.LNDCDC_NCS_TCS_CALENDARS.Builder clearSRCCDCOPERNM() {
      SRC_CDC_OPER_NM = null;
      fieldSetFlags()[16] = false;
      return this;
    }

    /**
      * Gets the value of the 'SRC_COMMIT_DT_UTC' field.
      * @return The value.
      */
    public java.lang.CharSequence getSRCCOMMITDTUTC() {
      return SRC_COMMIT_DT_UTC;
    }


    /**
      * Sets the value of the 'SRC_COMMIT_DT_UTC' field.
      * @param value The value of 'SRC_COMMIT_DT_UTC'.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.CALENDARS.apache.nifi.LNDCDC_NCS_TCS_CALENDARS.Builder setSRCCOMMITDTUTC(java.lang.CharSequence value) {
      validate(fields()[17], value);
      this.SRC_COMMIT_DT_UTC = value;
      fieldSetFlags()[17] = true;
      return this;
    }

    /**
      * Checks whether the 'SRC_COMMIT_DT_UTC' field has been set.
      * @return True if the 'SRC_COMMIT_DT_UTC' field has been set, false otherwise.
      */
    public boolean hasSRCCOMMITDTUTC() {
      return fieldSetFlags()[17];
    }


    /**
      * Clears the value of the 'SRC_COMMIT_DT_UTC' field.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.CALENDARS.apache.nifi.LNDCDC_NCS_TCS_CALENDARS.Builder clearSRCCOMMITDTUTC() {
      SRC_COMMIT_DT_UTC = null;
      fieldSetFlags()[17] = false;
      return this;
    }

    /**
      * Gets the value of the 'TRG_CRT_DT_PART_UTC' field.
      * @return The value.
      */
    public java.lang.CharSequence getTRGCRTDTPARTUTC() {
      return TRG_CRT_DT_PART_UTC;
    }


    /**
      * Sets the value of the 'TRG_CRT_DT_PART_UTC' field.
      * @param value The value of 'TRG_CRT_DT_PART_UTC'.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.CALENDARS.apache.nifi.LNDCDC_NCS_TCS_CALENDARS.Builder setTRGCRTDTPARTUTC(java.lang.CharSequence value) {
      validate(fields()[18], value);
      this.TRG_CRT_DT_PART_UTC = value;
      fieldSetFlags()[18] = true;
      return this;
    }

    /**
      * Checks whether the 'TRG_CRT_DT_PART_UTC' field has been set.
      * @return True if the 'TRG_CRT_DT_PART_UTC' field has been set, false otherwise.
      */
    public boolean hasTRGCRTDTPARTUTC() {
      return fieldSetFlags()[18];
    }


    /**
      * Clears the value of the 'TRG_CRT_DT_PART_UTC' field.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.CALENDARS.apache.nifi.LNDCDC_NCS_TCS_CALENDARS.Builder clearTRGCRTDTPARTUTC() {
      TRG_CRT_DT_PART_UTC = null;
      fieldSetFlags()[18] = false;
      return this;
    }

    /**
      * Gets the value of the 'SRC_SCHEMA_NM' field.
      * @return The value.
      */
    public java.lang.CharSequence getSRCSCHEMANM() {
      return SRC_SCHEMA_NM;
    }


    /**
      * Sets the value of the 'SRC_SCHEMA_NM' field.
      * @param value The value of 'SRC_SCHEMA_NM'.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.CALENDARS.apache.nifi.LNDCDC_NCS_TCS_CALENDARS.Builder setSRCSCHEMANM(java.lang.CharSequence value) {
      validate(fields()[19], value);
      this.SRC_SCHEMA_NM = value;
      fieldSetFlags()[19] = true;
      return this;
    }

    /**
      * Checks whether the 'SRC_SCHEMA_NM' field has been set.
      * @return True if the 'SRC_SCHEMA_NM' field has been set, false otherwise.
      */
    public boolean hasSRCSCHEMANM() {
      return fieldSetFlags()[19];
    }


    /**
      * Clears the value of the 'SRC_SCHEMA_NM' field.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.CALENDARS.apache.nifi.LNDCDC_NCS_TCS_CALENDARS.Builder clearSRCSCHEMANM() {
      SRC_SCHEMA_NM = null;
      fieldSetFlags()[19] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public LNDCDC_NCS_TCS_CALENDARS build() {
      try {
        LNDCDC_NCS_TCS_CALENDARS record = new LNDCDC_NCS_TCS_CALENDARS();
        record.CAL_WEEK_END_DT = fieldSetFlags()[0] ? this.CAL_WEEK_END_DT : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.CAL_CALT_TYPE = fieldSetFlags()[1] ? this.CAL_CALT_TYPE : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.CAL_CTY_YEAR = fieldSetFlags()[2] ? this.CAL_CTY_YEAR : (java.lang.Long) defaultValue(fields()[2]);
        record.CAL_MONTH_END_DT = fieldSetFlags()[3] ? this.CAL_MONTH_END_DT : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.CAL_MONTH_START_DT = fieldSetFlags()[4] ? this.CAL_MONTH_START_DT : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.CAL_QTR_NUM = fieldSetFlags()[5] ? this.CAL_QTR_NUM : (java.lang.Long) defaultValue(fields()[5]);
        record.CAL_QTR_START_DT = fieldSetFlags()[6] ? this.CAL_QTR_START_DT : (java.lang.CharSequence) defaultValue(fields()[6]);
        record.CAL_QTR_END_DT = fieldSetFlags()[7] ? this.CAL_QTR_END_DT : (java.lang.CharSequence) defaultValue(fields()[7]);
        record.CAL_MONTH_NUM = fieldSetFlags()[8] ? this.CAL_MONTH_NUM : (java.lang.Double) defaultValue(fields()[8]);
        record.CAL_WEEK_NUM = fieldSetFlags()[9] ? this.CAL_WEEK_NUM : (java.lang.Double) defaultValue(fields()[9]);
        record.CAL_WEEK_START_DT = fieldSetFlags()[10] ? this.CAL_WEEK_START_DT : (java.lang.CharSequence) defaultValue(fields()[10]);
        record.CAL_BILL_MONTH = fieldSetFlags()[11] ? this.CAL_BILL_MONTH : (java.lang.Double) defaultValue(fields()[11]);
        record.CAL_BILL_YEAR = fieldSetFlags()[12] ? this.CAL_BILL_YEAR : (java.lang.Long) defaultValue(fields()[12]);
        record.CAL_ID = fieldSetFlags()[13] ? this.CAL_ID : (java.lang.Long) defaultValue(fields()[13]);
        record.CDC_KEY = fieldSetFlags()[14] ? this.CDC_KEY : (java.lang.Double) defaultValue(fields()[14]);
        record.SRC_KEY_VAL = fieldSetFlags()[15] ? this.SRC_KEY_VAL : (java.lang.CharSequence) defaultValue(fields()[15]);
        record.SRC_CDC_OPER_NM = fieldSetFlags()[16] ? this.SRC_CDC_OPER_NM : (java.lang.CharSequence) defaultValue(fields()[16]);
        record.SRC_COMMIT_DT_UTC = fieldSetFlags()[17] ? this.SRC_COMMIT_DT_UTC : (java.lang.CharSequence) defaultValue(fields()[17]);
        record.TRG_CRT_DT_PART_UTC = fieldSetFlags()[18] ? this.TRG_CRT_DT_PART_UTC : (java.lang.CharSequence) defaultValue(fields()[18]);
        record.SRC_SCHEMA_NM = fieldSetFlags()[19] ? this.SRC_SCHEMA_NM : (java.lang.CharSequence) defaultValue(fields()[19]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<LNDCDC_NCS_TCS_CALENDARS>
    WRITER$ = (org.apache.avro.io.DatumWriter<LNDCDC_NCS_TCS_CALENDARS>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<LNDCDC_NCS_TCS_CALENDARS>
    READER$ = (org.apache.avro.io.DatumReader<LNDCDC_NCS_TCS_CALENDARS>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    if (this.CAL_WEEK_END_DT == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.CAL_WEEK_END_DT);
    }

    if (this.CAL_CALT_TYPE == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.CAL_CALT_TYPE);
    }

    if (this.CAL_CTY_YEAR == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeLong(this.CAL_CTY_YEAR);
    }

    if (this.CAL_MONTH_END_DT == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.CAL_MONTH_END_DT);
    }

    if (this.CAL_MONTH_START_DT == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.CAL_MONTH_START_DT);
    }

    if (this.CAL_QTR_NUM == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeLong(this.CAL_QTR_NUM);
    }

    if (this.CAL_QTR_START_DT == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.CAL_QTR_START_DT);
    }

    if (this.CAL_QTR_END_DT == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.CAL_QTR_END_DT);
    }

    if (this.CAL_MONTH_NUM == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeDouble(this.CAL_MONTH_NUM);
    }

    if (this.CAL_WEEK_NUM == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeDouble(this.CAL_WEEK_NUM);
    }

    if (this.CAL_WEEK_START_DT == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.CAL_WEEK_START_DT);
    }

    if (this.CAL_BILL_MONTH == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeDouble(this.CAL_BILL_MONTH);
    }

    if (this.CAL_BILL_YEAR == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeLong(this.CAL_BILL_YEAR);
    }

    if (this.CAL_ID == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeLong(this.CAL_ID);
    }

    if (this.CDC_KEY == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeDouble(this.CDC_KEY);
    }

    out.writeString(this.SRC_KEY_VAL);

    out.writeString(this.SRC_CDC_OPER_NM);

    out.writeString(this.SRC_COMMIT_DT_UTC);

    out.writeString(this.TRG_CRT_DT_PART_UTC);

    out.writeString(this.SRC_SCHEMA_NM);

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      if (in.readIndex() != 1) {
        in.readNull();
        this.CAL_WEEK_END_DT = null;
      } else {
        this.CAL_WEEK_END_DT = in.readString(this.CAL_WEEK_END_DT instanceof Utf8 ? (Utf8)this.CAL_WEEK_END_DT : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.CAL_CALT_TYPE = null;
      } else {
        this.CAL_CALT_TYPE = in.readString(this.CAL_CALT_TYPE instanceof Utf8 ? (Utf8)this.CAL_CALT_TYPE : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.CAL_CTY_YEAR = null;
      } else {
        this.CAL_CTY_YEAR = in.readLong();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.CAL_MONTH_END_DT = null;
      } else {
        this.CAL_MONTH_END_DT = in.readString(this.CAL_MONTH_END_DT instanceof Utf8 ? (Utf8)this.CAL_MONTH_END_DT : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.CAL_MONTH_START_DT = null;
      } else {
        this.CAL_MONTH_START_DT = in.readString(this.CAL_MONTH_START_DT instanceof Utf8 ? (Utf8)this.CAL_MONTH_START_DT : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.CAL_QTR_NUM = null;
      } else {
        this.CAL_QTR_NUM = in.readLong();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.CAL_QTR_START_DT = null;
      } else {
        this.CAL_QTR_START_DT = in.readString(this.CAL_QTR_START_DT instanceof Utf8 ? (Utf8)this.CAL_QTR_START_DT : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.CAL_QTR_END_DT = null;
      } else {
        this.CAL_QTR_END_DT = in.readString(this.CAL_QTR_END_DT instanceof Utf8 ? (Utf8)this.CAL_QTR_END_DT : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.CAL_MONTH_NUM = null;
      } else {
        this.CAL_MONTH_NUM = in.readDouble();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.CAL_WEEK_NUM = null;
      } else {
        this.CAL_WEEK_NUM = in.readDouble();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.CAL_WEEK_START_DT = null;
      } else {
        this.CAL_WEEK_START_DT = in.readString(this.CAL_WEEK_START_DT instanceof Utf8 ? (Utf8)this.CAL_WEEK_START_DT : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.CAL_BILL_MONTH = null;
      } else {
        this.CAL_BILL_MONTH = in.readDouble();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.CAL_BILL_YEAR = null;
      } else {
        this.CAL_BILL_YEAR = in.readLong();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.CAL_ID = null;
      } else {
        this.CAL_ID = in.readLong();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.CDC_KEY = null;
      } else {
        this.CDC_KEY = in.readDouble();
      }

      this.SRC_KEY_VAL = in.readString(this.SRC_KEY_VAL instanceof Utf8 ? (Utf8)this.SRC_KEY_VAL : null);

      this.SRC_CDC_OPER_NM = in.readString(this.SRC_CDC_OPER_NM instanceof Utf8 ? (Utf8)this.SRC_CDC_OPER_NM : null);

      this.SRC_COMMIT_DT_UTC = in.readString(this.SRC_COMMIT_DT_UTC instanceof Utf8 ? (Utf8)this.SRC_COMMIT_DT_UTC : null);

      this.TRG_CRT_DT_PART_UTC = in.readString(this.TRG_CRT_DT_PART_UTC instanceof Utf8 ? (Utf8)this.TRG_CRT_DT_PART_UTC : null);

      this.SRC_SCHEMA_NM = in.readString(this.SRC_SCHEMA_NM instanceof Utf8 ? (Utf8)this.SRC_SCHEMA_NM : null);

    } else {
      for (int i = 0; i < 20; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          if (in.readIndex() != 1) {
            in.readNull();
            this.CAL_WEEK_END_DT = null;
          } else {
            this.CAL_WEEK_END_DT = in.readString(this.CAL_WEEK_END_DT instanceof Utf8 ? (Utf8)this.CAL_WEEK_END_DT : null);
          }
          break;

        case 1:
          if (in.readIndex() != 1) {
            in.readNull();
            this.CAL_CALT_TYPE = null;
          } else {
            this.CAL_CALT_TYPE = in.readString(this.CAL_CALT_TYPE instanceof Utf8 ? (Utf8)this.CAL_CALT_TYPE : null);
          }
          break;

        case 2:
          if (in.readIndex() != 1) {
            in.readNull();
            this.CAL_CTY_YEAR = null;
          } else {
            this.CAL_CTY_YEAR = in.readLong();
          }
          break;

        case 3:
          if (in.readIndex() != 1) {
            in.readNull();
            this.CAL_MONTH_END_DT = null;
          } else {
            this.CAL_MONTH_END_DT = in.readString(this.CAL_MONTH_END_DT instanceof Utf8 ? (Utf8)this.CAL_MONTH_END_DT : null);
          }
          break;

        case 4:
          if (in.readIndex() != 1) {
            in.readNull();
            this.CAL_MONTH_START_DT = null;
          } else {
            this.CAL_MONTH_START_DT = in.readString(this.CAL_MONTH_START_DT instanceof Utf8 ? (Utf8)this.CAL_MONTH_START_DT : null);
          }
          break;

        case 5:
          if (in.readIndex() != 1) {
            in.readNull();
            this.CAL_QTR_NUM = null;
          } else {
            this.CAL_QTR_NUM = in.readLong();
          }
          break;

        case 6:
          if (in.readIndex() != 1) {
            in.readNull();
            this.CAL_QTR_START_DT = null;
          } else {
            this.CAL_QTR_START_DT = in.readString(this.CAL_QTR_START_DT instanceof Utf8 ? (Utf8)this.CAL_QTR_START_DT : null);
          }
          break;

        case 7:
          if (in.readIndex() != 1) {
            in.readNull();
            this.CAL_QTR_END_DT = null;
          } else {
            this.CAL_QTR_END_DT = in.readString(this.CAL_QTR_END_DT instanceof Utf8 ? (Utf8)this.CAL_QTR_END_DT : null);
          }
          break;

        case 8:
          if (in.readIndex() != 1) {
            in.readNull();
            this.CAL_MONTH_NUM = null;
          } else {
            this.CAL_MONTH_NUM = in.readDouble();
          }
          break;

        case 9:
          if (in.readIndex() != 1) {
            in.readNull();
            this.CAL_WEEK_NUM = null;
          } else {
            this.CAL_WEEK_NUM = in.readDouble();
          }
          break;

        case 10:
          if (in.readIndex() != 1) {
            in.readNull();
            this.CAL_WEEK_START_DT = null;
          } else {
            this.CAL_WEEK_START_DT = in.readString(this.CAL_WEEK_START_DT instanceof Utf8 ? (Utf8)this.CAL_WEEK_START_DT : null);
          }
          break;

        case 11:
          if (in.readIndex() != 1) {
            in.readNull();
            this.CAL_BILL_MONTH = null;
          } else {
            this.CAL_BILL_MONTH = in.readDouble();
          }
          break;

        case 12:
          if (in.readIndex() != 1) {
            in.readNull();
            this.CAL_BILL_YEAR = null;
          } else {
            this.CAL_BILL_YEAR = in.readLong();
          }
          break;

        case 13:
          if (in.readIndex() != 1) {
            in.readNull();
            this.CAL_ID = null;
          } else {
            this.CAL_ID = in.readLong();
          }
          break;

        case 14:
          if (in.readIndex() != 1) {
            in.readNull();
            this.CDC_KEY = null;
          } else {
            this.CDC_KEY = in.readDouble();
          }
          break;

        case 15:
          this.SRC_KEY_VAL = in.readString(this.SRC_KEY_VAL instanceof Utf8 ? (Utf8)this.SRC_KEY_VAL : null);
          break;

        case 16:
          this.SRC_CDC_OPER_NM = in.readString(this.SRC_CDC_OPER_NM instanceof Utf8 ? (Utf8)this.SRC_CDC_OPER_NM : null);
          break;

        case 17:
          this.SRC_COMMIT_DT_UTC = in.readString(this.SRC_COMMIT_DT_UTC instanceof Utf8 ? (Utf8)this.SRC_COMMIT_DT_UTC : null);
          break;

        case 18:
          this.TRG_CRT_DT_PART_UTC = in.readString(this.TRG_CRT_DT_PART_UTC instanceof Utf8 ? (Utf8)this.TRG_CRT_DT_PART_UTC : null);
          break;

        case 19:
          this.SRC_SCHEMA_NM = in.readString(this.SRC_SCHEMA_NM instanceof Utf8 ? (Utf8)this.SRC_SCHEMA_NM : null);
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










