/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package org.LNDCDC_NCS_TCS.LOGS.apache.nifi;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class LNDCDC_NCS_TCS_LOGS extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 2340018035928777000L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"LNDCDC_NCS_TCS_LOGS\",\"namespace\":\"org.LNDCDC_NCS_TCS.LOGS.apache.nifi\",\"fields\":[{\"name\":\"LOG_DATE\",\"type\":[\"null\",\"string\"]},{\"name\":\"LOG_NUMBER\",\"type\":[\"null\",\"long\"]},{\"name\":\"LOG_NETWORK\",\"type\":[\"null\",\"string\"]},{\"name\":\"LOG_PRE_LOG_DATE\",\"type\":[\"null\",\"string\"]},{\"name\":\"LOG_PRE_LOG_TIME\",\"type\":[\"null\",\"long\"]},{\"name\":\"LOG_FINAL_LOG_DATE\",\"type\":[\"null\",\"string\"]},{\"name\":\"LOG_INVOICE_DATE\",\"type\":[\"null\",\"string\"]},{\"name\":\"LOG_MASTER_LOG_DATE\",\"type\":[\"null\",\"string\"]},{\"name\":\"LOG_FINAL_LOG_TIME\",\"type\":[\"null\",\"long\"]},{\"name\":\"LOG_PROMO_SLOT_DATE\",\"type\":[\"null\",\"string\"]},{\"name\":\"LOG_TRAFFIC_SLOT_DATE\",\"type\":[\"null\",\"string\"]},{\"name\":\"LOG_EPI_ACTUALIZED_DATE\",\"type\":[\"null\",\"string\"]},{\"name\":\"LOG_TAPE_REVIEW_DATE\",\"type\":[\"null\",\"string\"]},{\"name\":\"LOG_FINANCE_CLOSE_DATE\",\"type\":[\"null\",\"string\"]},{\"name\":\"LOG_PROMO_FINAL_LOG_DATE\",\"type\":[\"null\",\"string\"]},{\"name\":\"LOG_PROMO_FINAL_LOG_TIME\",\"type\":[\"null\",\"long\"]},{\"name\":\"LOG_DOA_RELEASE_DT\",\"type\":[\"null\",\"string\"]},{\"name\":\"LOG_DOA_REVISION\",\"type\":[\"null\",\"long\"]},{\"name\":\"LOG_GC_RELEASE_DT\",\"type\":[\"null\",\"string\"]},{\"name\":\"LOG_GC_REVISION\",\"type\":[\"null\",\"long\"]},{\"name\":\"LOG_TRAFFIC_LOCK_DATE\",\"type\":[\"null\",\"string\"]},{\"name\":\"LOG_GRIPIT_IMPORT_DATE\",\"type\":[\"null\",\"string\"]},{\"name\":\"LOG_GRIPIT_IMPORT_TIME\",\"type\":[\"null\",\"double\"]},{\"name\":\"LOG_GRIPIT_IMPORT_USER\",\"type\":[\"null\",\"string\"]},{\"name\":\"PLAYLIST_FILE_NUMBER\",\"type\":[\"null\",\"double\"]},{\"name\":\"LOG_READY_FOR_PROMO_IND\",\"type\":[\"null\",\"string\"]},{\"name\":\"LOG_DOA_UNLOCK_DATE\",\"type\":[\"null\",\"string\"]},{\"name\":\"LOG_DOA_LOCK_DATE\",\"type\":[\"null\",\"string\"]},{\"name\":\"DOA_LOCK_USER\",\"type\":[\"null\",\"string\"]},{\"name\":\"LOG_DOA_OPEN_DATE\",\"type\":[\"null\",\"string\"]},{\"name\":\"CDC_KEY\",\"type\":[\"null\",\"double\"]},{\"name\":\"LOG_AUDIO_PROMO_FINAL_LOG_DATE\",\"type\":[\"null\",\"string\"]},{\"name\":\"SRC_KEY_VAL\",\"type\":\"string\"},{\"name\":\"SRC_CDC_OPER_NM\",\"type\":\"string\"},{\"name\":\"SRC_COMMIT_DT_UTC\",\"type\":\"string\"},{\"name\":\"TRG_CRT_DT_PART_UTC\",\"type\":\"string\"},{\"name\":\"SRC_SCHEMA_NM\",\"type\":\"string\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<LNDCDC_NCS_TCS_LOGS> ENCODER =
      new BinaryMessageEncoder<LNDCDC_NCS_TCS_LOGS>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<LNDCDC_NCS_TCS_LOGS> DECODER =
      new BinaryMessageDecoder<LNDCDC_NCS_TCS_LOGS>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<LNDCDC_NCS_TCS_LOGS> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<LNDCDC_NCS_TCS_LOGS> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<LNDCDC_NCS_TCS_LOGS> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<LNDCDC_NCS_TCS_LOGS>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this LNDCDC_NCS_TCS_LOGS to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a LNDCDC_NCS_TCS_LOGS from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a LNDCDC_NCS_TCS_LOGS instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static LNDCDC_NCS_TCS_LOGS fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

   private java.lang.CharSequence LOG_DATE;
   private java.lang.Long LOG_NUMBER;
   private java.lang.CharSequence LOG_NETWORK;
   private java.lang.CharSequence LOG_PRE_LOG_DATE;
   private java.lang.Long LOG_PRE_LOG_TIME;
   private java.lang.CharSequence LOG_FINAL_LOG_DATE;
   private java.lang.CharSequence LOG_INVOICE_DATE;
   private java.lang.CharSequence LOG_MASTER_LOG_DATE;
   private java.lang.Long LOG_FINAL_LOG_TIME;
   private java.lang.CharSequence LOG_PROMO_SLOT_DATE;
   private java.lang.CharSequence LOG_TRAFFIC_SLOT_DATE;
   private java.lang.CharSequence LOG_EPI_ACTUALIZED_DATE;
   private java.lang.CharSequence LOG_TAPE_REVIEW_DATE;
   private java.lang.CharSequence LOG_FINANCE_CLOSE_DATE;
   private java.lang.CharSequence LOG_PROMO_FINAL_LOG_DATE;
   private java.lang.Long LOG_PROMO_FINAL_LOG_TIME;
   private java.lang.CharSequence LOG_DOA_RELEASE_DT;
   private java.lang.Long LOG_DOA_REVISION;
   private java.lang.CharSequence LOG_GC_RELEASE_DT;
   private java.lang.Long LOG_GC_REVISION;
   private java.lang.CharSequence LOG_TRAFFIC_LOCK_DATE;
   private java.lang.CharSequence LOG_GRIPIT_IMPORT_DATE;
   private java.lang.Double LOG_GRIPIT_IMPORT_TIME;
   private java.lang.CharSequence LOG_GRIPIT_IMPORT_USER;
   private java.lang.Double PLAYLIST_FILE_NUMBER;
   private java.lang.CharSequence LOG_READY_FOR_PROMO_IND;
   private java.lang.CharSequence LOG_DOA_UNLOCK_DATE;
   private java.lang.CharSequence LOG_DOA_LOCK_DATE;
   private java.lang.CharSequence DOA_LOCK_USER;
   private java.lang.CharSequence LOG_DOA_OPEN_DATE;
   private java.lang.Double CDC_KEY;
   private java.lang.CharSequence LOG_AUDIO_PROMO_FINAL_LOG_DATE;
   private java.lang.CharSequence SRC_KEY_VAL;
   private java.lang.CharSequence SRC_CDC_OPER_NM;
   private java.lang.CharSequence SRC_COMMIT_DT_UTC;
   private java.lang.CharSequence TRG_CRT_DT_PART_UTC;
   private java.lang.CharSequence SRC_SCHEMA_NM;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public LNDCDC_NCS_TCS_LOGS() {}

  /**
   * All-args constructor.
   * @param LOG_DATE The new value for LOG_DATE
   * @param LOG_NUMBER The new value for LOG_NUMBER
   * @param LOG_NETWORK The new value for LOG_NETWORK
   * @param LOG_PRE_LOG_DATE The new value for LOG_PRE_LOG_DATE
   * @param LOG_PRE_LOG_TIME The new value for LOG_PRE_LOG_TIME
   * @param LOG_FINAL_LOG_DATE The new value for LOG_FINAL_LOG_DATE
   * @param LOG_INVOICE_DATE The new value for LOG_INVOICE_DATE
   * @param LOG_MASTER_LOG_DATE The new value for LOG_MASTER_LOG_DATE
   * @param LOG_FINAL_LOG_TIME The new value for LOG_FINAL_LOG_TIME
   * @param LOG_PROMO_SLOT_DATE The new value for LOG_PROMO_SLOT_DATE
   * @param LOG_TRAFFIC_SLOT_DATE The new value for LOG_TRAFFIC_SLOT_DATE
   * @param LOG_EPI_ACTUALIZED_DATE The new value for LOG_EPI_ACTUALIZED_DATE
   * @param LOG_TAPE_REVIEW_DATE The new value for LOG_TAPE_REVIEW_DATE
   * @param LOG_FINANCE_CLOSE_DATE The new value for LOG_FINANCE_CLOSE_DATE
   * @param LOG_PROMO_FINAL_LOG_DATE The new value for LOG_PROMO_FINAL_LOG_DATE
   * @param LOG_PROMO_FINAL_LOG_TIME The new value for LOG_PROMO_FINAL_LOG_TIME
   * @param LOG_DOA_RELEASE_DT The new value for LOG_DOA_RELEASE_DT
   * @param LOG_DOA_REVISION The new value for LOG_DOA_REVISION
   * @param LOG_GC_RELEASE_DT The new value for LOG_GC_RELEASE_DT
   * @param LOG_GC_REVISION The new value for LOG_GC_REVISION
   * @param LOG_TRAFFIC_LOCK_DATE The new value for LOG_TRAFFIC_LOCK_DATE
   * @param LOG_GRIPIT_IMPORT_DATE The new value for LOG_GRIPIT_IMPORT_DATE
   * @param LOG_GRIPIT_IMPORT_TIME The new value for LOG_GRIPIT_IMPORT_TIME
   * @param LOG_GRIPIT_IMPORT_USER The new value for LOG_GRIPIT_IMPORT_USER
   * @param PLAYLIST_FILE_NUMBER The new value for PLAYLIST_FILE_NUMBER
   * @param LOG_READY_FOR_PROMO_IND The new value for LOG_READY_FOR_PROMO_IND
   * @param LOG_DOA_UNLOCK_DATE The new value for LOG_DOA_UNLOCK_DATE
   * @param LOG_DOA_LOCK_DATE The new value for LOG_DOA_LOCK_DATE
   * @param DOA_LOCK_USER The new value for DOA_LOCK_USER
   * @param LOG_DOA_OPEN_DATE The new value for LOG_DOA_OPEN_DATE
   * @param CDC_KEY The new value for CDC_KEY
   * @param LOG_AUDIO_PROMO_FINAL_LOG_DATE The new value for LOG_AUDIO_PROMO_FINAL_LOG_DATE
   * @param SRC_KEY_VAL The new value for SRC_KEY_VAL
   * @param SRC_CDC_OPER_NM The new value for SRC_CDC_OPER_NM
   * @param SRC_COMMIT_DT_UTC The new value for SRC_COMMIT_DT_UTC
   * @param TRG_CRT_DT_PART_UTC The new value for TRG_CRT_DT_PART_UTC
   * @param SRC_SCHEMA_NM The new value for SRC_SCHEMA_NM
   */
  public LNDCDC_NCS_TCS_LOGS(java.lang.CharSequence LOG_DATE, java.lang.Long LOG_NUMBER, java.lang.CharSequence LOG_NETWORK, java.lang.CharSequence LOG_PRE_LOG_DATE, java.lang.Long LOG_PRE_LOG_TIME, java.lang.CharSequence LOG_FINAL_LOG_DATE, java.lang.CharSequence LOG_INVOICE_DATE, java.lang.CharSequence LOG_MASTER_LOG_DATE, java.lang.Long LOG_FINAL_LOG_TIME, java.lang.CharSequence LOG_PROMO_SLOT_DATE, java.lang.CharSequence LOG_TRAFFIC_SLOT_DATE, java.lang.CharSequence LOG_EPI_ACTUALIZED_DATE, java.lang.CharSequence LOG_TAPE_REVIEW_DATE, java.lang.CharSequence LOG_FINANCE_CLOSE_DATE, java.lang.CharSequence LOG_PROMO_FINAL_LOG_DATE, java.lang.Long LOG_PROMO_FINAL_LOG_TIME, java.lang.CharSequence LOG_DOA_RELEASE_DT, java.lang.Long LOG_DOA_REVISION, java.lang.CharSequence LOG_GC_RELEASE_DT, java.lang.Long LOG_GC_REVISION, java.lang.CharSequence LOG_TRAFFIC_LOCK_DATE, java.lang.CharSequence LOG_GRIPIT_IMPORT_DATE, java.lang.Double LOG_GRIPIT_IMPORT_TIME, java.lang.CharSequence LOG_GRIPIT_IMPORT_USER, java.lang.Double PLAYLIST_FILE_NUMBER, java.lang.CharSequence LOG_READY_FOR_PROMO_IND, java.lang.CharSequence LOG_DOA_UNLOCK_DATE, java.lang.CharSequence LOG_DOA_LOCK_DATE, java.lang.CharSequence DOA_LOCK_USER, java.lang.CharSequence LOG_DOA_OPEN_DATE, java.lang.Double CDC_KEY, java.lang.CharSequence LOG_AUDIO_PROMO_FINAL_LOG_DATE, java.lang.CharSequence SRC_KEY_VAL, java.lang.CharSequence SRC_CDC_OPER_NM, java.lang.CharSequence SRC_COMMIT_DT_UTC, java.lang.CharSequence TRG_CRT_DT_PART_UTC, java.lang.CharSequence SRC_SCHEMA_NM) {
    this.LOG_DATE = LOG_DATE;
    this.LOG_NUMBER = LOG_NUMBER;
    this.LOG_NETWORK = LOG_NETWORK;
    this.LOG_PRE_LOG_DATE = LOG_PRE_LOG_DATE;
    this.LOG_PRE_LOG_TIME = LOG_PRE_LOG_TIME;
    this.LOG_FINAL_LOG_DATE = LOG_FINAL_LOG_DATE;
    this.LOG_INVOICE_DATE = LOG_INVOICE_DATE;
    this.LOG_MASTER_LOG_DATE = LOG_MASTER_LOG_DATE;
    this.LOG_FINAL_LOG_TIME = LOG_FINAL_LOG_TIME;
    this.LOG_PROMO_SLOT_DATE = LOG_PROMO_SLOT_DATE;
    this.LOG_TRAFFIC_SLOT_DATE = LOG_TRAFFIC_SLOT_DATE;
    this.LOG_EPI_ACTUALIZED_DATE = LOG_EPI_ACTUALIZED_DATE;
    this.LOG_TAPE_REVIEW_DATE = LOG_TAPE_REVIEW_DATE;
    this.LOG_FINANCE_CLOSE_DATE = LOG_FINANCE_CLOSE_DATE;
    this.LOG_PROMO_FINAL_LOG_DATE = LOG_PROMO_FINAL_LOG_DATE;
    this.LOG_PROMO_FINAL_LOG_TIME = LOG_PROMO_FINAL_LOG_TIME;
    this.LOG_DOA_RELEASE_DT = LOG_DOA_RELEASE_DT;
    this.LOG_DOA_REVISION = LOG_DOA_REVISION;
    this.LOG_GC_RELEASE_DT = LOG_GC_RELEASE_DT;
    this.LOG_GC_REVISION = LOG_GC_REVISION;
    this.LOG_TRAFFIC_LOCK_DATE = LOG_TRAFFIC_LOCK_DATE;
    this.LOG_GRIPIT_IMPORT_DATE = LOG_GRIPIT_IMPORT_DATE;
    this.LOG_GRIPIT_IMPORT_TIME = LOG_GRIPIT_IMPORT_TIME;
    this.LOG_GRIPIT_IMPORT_USER = LOG_GRIPIT_IMPORT_USER;
    this.PLAYLIST_FILE_NUMBER = PLAYLIST_FILE_NUMBER;
    this.LOG_READY_FOR_PROMO_IND = LOG_READY_FOR_PROMO_IND;
    this.LOG_DOA_UNLOCK_DATE = LOG_DOA_UNLOCK_DATE;
    this.LOG_DOA_LOCK_DATE = LOG_DOA_LOCK_DATE;
    this.DOA_LOCK_USER = DOA_LOCK_USER;
    this.LOG_DOA_OPEN_DATE = LOG_DOA_OPEN_DATE;
    this.CDC_KEY = CDC_KEY;
    this.LOG_AUDIO_PROMO_FINAL_LOG_DATE = LOG_AUDIO_PROMO_FINAL_LOG_DATE;
    this.SRC_KEY_VAL = SRC_KEY_VAL;
    this.SRC_CDC_OPER_NM = SRC_CDC_OPER_NM;
    this.SRC_COMMIT_DT_UTC = SRC_COMMIT_DT_UTC;
    this.TRG_CRT_DT_PART_UTC = TRG_CRT_DT_PART_UTC;
    this.SRC_SCHEMA_NM = SRC_SCHEMA_NM;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return LOG_DATE;
    case 1: return LOG_NUMBER;
    case 2: return LOG_NETWORK;
    case 3: return LOG_PRE_LOG_DATE;
    case 4: return LOG_PRE_LOG_TIME;
    case 5: return LOG_FINAL_LOG_DATE;
    case 6: return LOG_INVOICE_DATE;
    case 7: return LOG_MASTER_LOG_DATE;
    case 8: return LOG_FINAL_LOG_TIME;
    case 9: return LOG_PROMO_SLOT_DATE;
    case 10: return LOG_TRAFFIC_SLOT_DATE;
    case 11: return LOG_EPI_ACTUALIZED_DATE;
    case 12: return LOG_TAPE_REVIEW_DATE;
    case 13: return LOG_FINANCE_CLOSE_DATE;
    case 14: return LOG_PROMO_FINAL_LOG_DATE;
    case 15: return LOG_PROMO_FINAL_LOG_TIME;
    case 16: return LOG_DOA_RELEASE_DT;
    case 17: return LOG_DOA_REVISION;
    case 18: return LOG_GC_RELEASE_DT;
    case 19: return LOG_GC_REVISION;
    case 20: return LOG_TRAFFIC_LOCK_DATE;
    case 21: return LOG_GRIPIT_IMPORT_DATE;
    case 22: return LOG_GRIPIT_IMPORT_TIME;
    case 23: return LOG_GRIPIT_IMPORT_USER;
    case 24: return PLAYLIST_FILE_NUMBER;
    case 25: return LOG_READY_FOR_PROMO_IND;
    case 26: return LOG_DOA_UNLOCK_DATE;
    case 27: return LOG_DOA_LOCK_DATE;
    case 28: return DOA_LOCK_USER;
    case 29: return LOG_DOA_OPEN_DATE;
    case 30: return CDC_KEY;
    case 31: return LOG_AUDIO_PROMO_FINAL_LOG_DATE;
    case 32: return SRC_KEY_VAL;
    case 33: return SRC_CDC_OPER_NM;
    case 34: return SRC_COMMIT_DT_UTC;
    case 35: return TRG_CRT_DT_PART_UTC;
    case 36: return SRC_SCHEMA_NM;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: LOG_DATE = (java.lang.CharSequence)value$; break;
    case 1: LOG_NUMBER = (java.lang.Long)value$; break;
    case 2: LOG_NETWORK = (java.lang.CharSequence)value$; break;
    case 3: LOG_PRE_LOG_DATE = (java.lang.CharSequence)value$; break;
    case 4: LOG_PRE_LOG_TIME = (java.lang.Long)value$; break;
    case 5: LOG_FINAL_LOG_DATE = (java.lang.CharSequence)value$; break;
    case 6: LOG_INVOICE_DATE = (java.lang.CharSequence)value$; break;
    case 7: LOG_MASTER_LOG_DATE = (java.lang.CharSequence)value$; break;
    case 8: LOG_FINAL_LOG_TIME = (java.lang.Long)value$; break;
    case 9: LOG_PROMO_SLOT_DATE = (java.lang.CharSequence)value$; break;
    case 10: LOG_TRAFFIC_SLOT_DATE = (java.lang.CharSequence)value$; break;
    case 11: LOG_EPI_ACTUALIZED_DATE = (java.lang.CharSequence)value$; break;
    case 12: LOG_TAPE_REVIEW_DATE = (java.lang.CharSequence)value$; break;
    case 13: LOG_FINANCE_CLOSE_DATE = (java.lang.CharSequence)value$; break;
    case 14: LOG_PROMO_FINAL_LOG_DATE = (java.lang.CharSequence)value$; break;
    case 15: LOG_PROMO_FINAL_LOG_TIME = (java.lang.Long)value$; break;
    case 16: LOG_DOA_RELEASE_DT = (java.lang.CharSequence)value$; break;
    case 17: LOG_DOA_REVISION = (java.lang.Long)value$; break;
    case 18: LOG_GC_RELEASE_DT = (java.lang.CharSequence)value$; break;
    case 19: LOG_GC_REVISION = (java.lang.Long)value$; break;
    case 20: LOG_TRAFFIC_LOCK_DATE = (java.lang.CharSequence)value$; break;
    case 21: LOG_GRIPIT_IMPORT_DATE = (java.lang.CharSequence)value$; break;
    case 22: LOG_GRIPIT_IMPORT_TIME = (java.lang.Double)value$; break;
    case 23: LOG_GRIPIT_IMPORT_USER = (java.lang.CharSequence)value$; break;
    case 24: PLAYLIST_FILE_NUMBER = (java.lang.Double)value$; break;
    case 25: LOG_READY_FOR_PROMO_IND = (java.lang.CharSequence)value$; break;
    case 26: LOG_DOA_UNLOCK_DATE = (java.lang.CharSequence)value$; break;
    case 27: LOG_DOA_LOCK_DATE = (java.lang.CharSequence)value$; break;
    case 28: DOA_LOCK_USER = (java.lang.CharSequence)value$; break;
    case 29: LOG_DOA_OPEN_DATE = (java.lang.CharSequence)value$; break;
    case 30: CDC_KEY = (java.lang.Double)value$; break;
    case 31: LOG_AUDIO_PROMO_FINAL_LOG_DATE = (java.lang.CharSequence)value$; break;
    case 32: SRC_KEY_VAL = (java.lang.CharSequence)value$; break;
    case 33: SRC_CDC_OPER_NM = (java.lang.CharSequence)value$; break;
    case 34: SRC_COMMIT_DT_UTC = (java.lang.CharSequence)value$; break;
    case 35: TRG_CRT_DT_PART_UTC = (java.lang.CharSequence)value$; break;
    case 36: SRC_SCHEMA_NM = (java.lang.CharSequence)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'LOG_DATE' field.
   * @return The value of the 'LOG_DATE' field.
   */
  public java.lang.CharSequence getLOGDATE() {
    return LOG_DATE;
  }


  /**
   * Sets the value of the 'LOG_DATE' field.
   * @param value the value to set.
   */
  public void setLOGDATE(java.lang.CharSequence value) {
    this.LOG_DATE = value;
  }

  /**
   * Gets the value of the 'LOG_NUMBER' field.
   * @return The value of the 'LOG_NUMBER' field.
   */
  public java.lang.Long getLOGNUMBER() {
    return LOG_NUMBER;
  }


  /**
   * Sets the value of the 'LOG_NUMBER' field.
   * @param value the value to set.
   */
  public void setLOGNUMBER(java.lang.Long value) {
    this.LOG_NUMBER = value;
  }

  /**
   * Gets the value of the 'LOG_NETWORK' field.
   * @return The value of the 'LOG_NETWORK' field.
   */
  public java.lang.CharSequence getLOGNETWORK() {
    return LOG_NETWORK;
  }


  /**
   * Sets the value of the 'LOG_NETWORK' field.
   * @param value the value to set.
   */
  public void setLOGNETWORK(java.lang.CharSequence value) {
    this.LOG_NETWORK = value;
  }

  /**
   * Gets the value of the 'LOG_PRE_LOG_DATE' field.
   * @return The value of the 'LOG_PRE_LOG_DATE' field.
   */
  public java.lang.CharSequence getLOGPRELOGDATE() {
    return LOG_PRE_LOG_DATE;
  }


  /**
   * Sets the value of the 'LOG_PRE_LOG_DATE' field.
   * @param value the value to set.
   */
  public void setLOGPRELOGDATE(java.lang.CharSequence value) {
    this.LOG_PRE_LOG_DATE = value;
  }

  /**
   * Gets the value of the 'LOG_PRE_LOG_TIME' field.
   * @return The value of the 'LOG_PRE_LOG_TIME' field.
   */
  public java.lang.Long getLOGPRELOGTIME() {
    return LOG_PRE_LOG_TIME;
  }


  /**
   * Sets the value of the 'LOG_PRE_LOG_TIME' field.
   * @param value the value to set.
   */
  public void setLOGPRELOGTIME(java.lang.Long value) {
    this.LOG_PRE_LOG_TIME = value;
  }

  /**
   * Gets the value of the 'LOG_FINAL_LOG_DATE' field.
   * @return The value of the 'LOG_FINAL_LOG_DATE' field.
   */
  public java.lang.CharSequence getLOGFINALLOGDATE() {
    return LOG_FINAL_LOG_DATE;
  }


  /**
   * Sets the value of the 'LOG_FINAL_LOG_DATE' field.
   * @param value the value to set.
   */
  public void setLOGFINALLOGDATE(java.lang.CharSequence value) {
    this.LOG_FINAL_LOG_DATE = value;
  }

  /**
   * Gets the value of the 'LOG_INVOICE_DATE' field.
   * @return The value of the 'LOG_INVOICE_DATE' field.
   */
  public java.lang.CharSequence getLOGINVOICEDATE() {
    return LOG_INVOICE_DATE;
  }


  /**
   * Sets the value of the 'LOG_INVOICE_DATE' field.
   * @param value the value to set.
   */
  public void setLOGINVOICEDATE(java.lang.CharSequence value) {
    this.LOG_INVOICE_DATE = value;
  }

  /**
   * Gets the value of the 'LOG_MASTER_LOG_DATE' field.
   * @return The value of the 'LOG_MASTER_LOG_DATE' field.
   */
  public java.lang.CharSequence getLOGMASTERLOGDATE() {
    return LOG_MASTER_LOG_DATE;
  }


  /**
   * Sets the value of the 'LOG_MASTER_LOG_DATE' field.
   * @param value the value to set.
   */
  public void setLOGMASTERLOGDATE(java.lang.CharSequence value) {
    this.LOG_MASTER_LOG_DATE = value;
  }

  /**
   * Gets the value of the 'LOG_FINAL_LOG_TIME' field.
   * @return The value of the 'LOG_FINAL_LOG_TIME' field.
   */
  public java.lang.Long getLOGFINALLOGTIME() {
    return LOG_FINAL_LOG_TIME;
  }


  /**
   * Sets the value of the 'LOG_FINAL_LOG_TIME' field.
   * @param value the value to set.
   */
  public void setLOGFINALLOGTIME(java.lang.Long value) {
    this.LOG_FINAL_LOG_TIME = value;
  }

  /**
   * Gets the value of the 'LOG_PROMO_SLOT_DATE' field.
   * @return The value of the 'LOG_PROMO_SLOT_DATE' field.
   */
  public java.lang.CharSequence getLOGPROMOSLOTDATE() {
    return LOG_PROMO_SLOT_DATE;
  }


  /**
   * Sets the value of the 'LOG_PROMO_SLOT_DATE' field.
   * @param value the value to set.
   */
  public void setLOGPROMOSLOTDATE(java.lang.CharSequence value) {
    this.LOG_PROMO_SLOT_DATE = value;
  }

  /**
   * Gets the value of the 'LOG_TRAFFIC_SLOT_DATE' field.
   * @return The value of the 'LOG_TRAFFIC_SLOT_DATE' field.
   */
  public java.lang.CharSequence getLOGTRAFFICSLOTDATE() {
    return LOG_TRAFFIC_SLOT_DATE;
  }


  /**
   * Sets the value of the 'LOG_TRAFFIC_SLOT_DATE' field.
   * @param value the value to set.
   */
  public void setLOGTRAFFICSLOTDATE(java.lang.CharSequence value) {
    this.LOG_TRAFFIC_SLOT_DATE = value;
  }

  /**
   * Gets the value of the 'LOG_EPI_ACTUALIZED_DATE' field.
   * @return The value of the 'LOG_EPI_ACTUALIZED_DATE' field.
   */
  public java.lang.CharSequence getLOGEPIACTUALIZEDDATE() {
    return LOG_EPI_ACTUALIZED_DATE;
  }


  /**
   * Sets the value of the 'LOG_EPI_ACTUALIZED_DATE' field.
   * @param value the value to set.
   */
  public void setLOGEPIACTUALIZEDDATE(java.lang.CharSequence value) {
    this.LOG_EPI_ACTUALIZED_DATE = value;
  }

  /**
   * Gets the value of the 'LOG_TAPE_REVIEW_DATE' field.
   * @return The value of the 'LOG_TAPE_REVIEW_DATE' field.
   */
  public java.lang.CharSequence getLOGTAPEREVIEWDATE() {
    return LOG_TAPE_REVIEW_DATE;
  }


  /**
   * Sets the value of the 'LOG_TAPE_REVIEW_DATE' field.
   * @param value the value to set.
   */
  public void setLOGTAPEREVIEWDATE(java.lang.CharSequence value) {
    this.LOG_TAPE_REVIEW_DATE = value;
  }

  /**
   * Gets the value of the 'LOG_FINANCE_CLOSE_DATE' field.
   * @return The value of the 'LOG_FINANCE_CLOSE_DATE' field.
   */
  public java.lang.CharSequence getLOGFINANCECLOSEDATE() {
    return LOG_FINANCE_CLOSE_DATE;
  }


  /**
   * Sets the value of the 'LOG_FINANCE_CLOSE_DATE' field.
   * @param value the value to set.
   */
  public void setLOGFINANCECLOSEDATE(java.lang.CharSequence value) {
    this.LOG_FINANCE_CLOSE_DATE = value;
  }

  /**
   * Gets the value of the 'LOG_PROMO_FINAL_LOG_DATE' field.
   * @return The value of the 'LOG_PROMO_FINAL_LOG_DATE' field.
   */
  public java.lang.CharSequence getLOGPROMOFINALLOGDATE() {
    return LOG_PROMO_FINAL_LOG_DATE;
  }


  /**
   * Sets the value of the 'LOG_PROMO_FINAL_LOG_DATE' field.
   * @param value the value to set.
   */
  public void setLOGPROMOFINALLOGDATE(java.lang.CharSequence value) {
    this.LOG_PROMO_FINAL_LOG_DATE = value;
  }

  /**
   * Gets the value of the 'LOG_PROMO_FINAL_LOG_TIME' field.
   * @return The value of the 'LOG_PROMO_FINAL_LOG_TIME' field.
   */
  public java.lang.Long getLOGPROMOFINALLOGTIME() {
    return LOG_PROMO_FINAL_LOG_TIME;
  }


  /**
   * Sets the value of the 'LOG_PROMO_FINAL_LOG_TIME' field.
   * @param value the value to set.
   */
  public void setLOGPROMOFINALLOGTIME(java.lang.Long value) {
    this.LOG_PROMO_FINAL_LOG_TIME = value;
  }

  /**
   * Gets the value of the 'LOG_DOA_RELEASE_DT' field.
   * @return The value of the 'LOG_DOA_RELEASE_DT' field.
   */
  public java.lang.CharSequence getLOGDOARELEASEDT() {
    return LOG_DOA_RELEASE_DT;
  }


  /**
   * Sets the value of the 'LOG_DOA_RELEASE_DT' field.
   * @param value the value to set.
   */
  public void setLOGDOARELEASEDT(java.lang.CharSequence value) {
    this.LOG_DOA_RELEASE_DT = value;
  }

  /**
   * Gets the value of the 'LOG_DOA_REVISION' field.
   * @return The value of the 'LOG_DOA_REVISION' field.
   */
  public java.lang.Long getLOGDOAREVISION() {
    return LOG_DOA_REVISION;
  }


  /**
   * Sets the value of the 'LOG_DOA_REVISION' field.
   * @param value the value to set.
   */
  public void setLOGDOAREVISION(java.lang.Long value) {
    this.LOG_DOA_REVISION = value;
  }

  /**
   * Gets the value of the 'LOG_GC_RELEASE_DT' field.
   * @return The value of the 'LOG_GC_RELEASE_DT' field.
   */
  public java.lang.CharSequence getLOGGCRELEASEDT() {
    return LOG_GC_RELEASE_DT;
  }


  /**
   * Sets the value of the 'LOG_GC_RELEASE_DT' field.
   * @param value the value to set.
   */
  public void setLOGGCRELEASEDT(java.lang.CharSequence value) {
    this.LOG_GC_RELEASE_DT = value;
  }

  /**
   * Gets the value of the 'LOG_GC_REVISION' field.
   * @return The value of the 'LOG_GC_REVISION' field.
   */
  public java.lang.Long getLOGGCREVISION() {
    return LOG_GC_REVISION;
  }


  /**
   * Sets the value of the 'LOG_GC_REVISION' field.
   * @param value the value to set.
   */
  public void setLOGGCREVISION(java.lang.Long value) {
    this.LOG_GC_REVISION = value;
  }

  /**
   * Gets the value of the 'LOG_TRAFFIC_LOCK_DATE' field.
   * @return The value of the 'LOG_TRAFFIC_LOCK_DATE' field.
   */
  public java.lang.CharSequence getLOGTRAFFICLOCKDATE() {
    return LOG_TRAFFIC_LOCK_DATE;
  }


  /**
   * Sets the value of the 'LOG_TRAFFIC_LOCK_DATE' field.
   * @param value the value to set.
   */
  public void setLOGTRAFFICLOCKDATE(java.lang.CharSequence value) {
    this.LOG_TRAFFIC_LOCK_DATE = value;
  }

  /**
   * Gets the value of the 'LOG_GRIPIT_IMPORT_DATE' field.
   * @return The value of the 'LOG_GRIPIT_IMPORT_DATE' field.
   */
  public java.lang.CharSequence getLOGGRIPITIMPORTDATE() {
    return LOG_GRIPIT_IMPORT_DATE;
  }


  /**
   * Sets the value of the 'LOG_GRIPIT_IMPORT_DATE' field.
   * @param value the value to set.
   */
  public void setLOGGRIPITIMPORTDATE(java.lang.CharSequence value) {
    this.LOG_GRIPIT_IMPORT_DATE = value;
  }

  /**
   * Gets the value of the 'LOG_GRIPIT_IMPORT_TIME' field.
   * @return The value of the 'LOG_GRIPIT_IMPORT_TIME' field.
   */
  public java.lang.Double getLOGGRIPITIMPORTTIME() {
    return LOG_GRIPIT_IMPORT_TIME;
  }


  /**
   * Sets the value of the 'LOG_GRIPIT_IMPORT_TIME' field.
   * @param value the value to set.
   */
  public void setLOGGRIPITIMPORTTIME(java.lang.Double value) {
    this.LOG_GRIPIT_IMPORT_TIME = value;
  }

  /**
   * Gets the value of the 'LOG_GRIPIT_IMPORT_USER' field.
   * @return The value of the 'LOG_GRIPIT_IMPORT_USER' field.
   */
  public java.lang.CharSequence getLOGGRIPITIMPORTUSER() {
    return LOG_GRIPIT_IMPORT_USER;
  }


  /**
   * Sets the value of the 'LOG_GRIPIT_IMPORT_USER' field.
   * @param value the value to set.
   */
  public void setLOGGRIPITIMPORTUSER(java.lang.CharSequence value) {
    this.LOG_GRIPIT_IMPORT_USER = value;
  }

  /**
   * Gets the value of the 'PLAYLIST_FILE_NUMBER' field.
   * @return The value of the 'PLAYLIST_FILE_NUMBER' field.
   */
  public java.lang.Double getPLAYLISTFILENUMBER() {
    return PLAYLIST_FILE_NUMBER;
  }


  /**
   * Sets the value of the 'PLAYLIST_FILE_NUMBER' field.
   * @param value the value to set.
   */
  public void setPLAYLISTFILENUMBER(java.lang.Double value) {
    this.PLAYLIST_FILE_NUMBER = value;
  }

  /**
   * Gets the value of the 'LOG_READY_FOR_PROMO_IND' field.
   * @return The value of the 'LOG_READY_FOR_PROMO_IND' field.
   */
  public java.lang.CharSequence getLOGREADYFORPROMOIND() {
    return LOG_READY_FOR_PROMO_IND;
  }


  /**
   * Sets the value of the 'LOG_READY_FOR_PROMO_IND' field.
   * @param value the value to set.
   */
  public void setLOGREADYFORPROMOIND(java.lang.CharSequence value) {
    this.LOG_READY_FOR_PROMO_IND = value;
  }

  /**
   * Gets the value of the 'LOG_DOA_UNLOCK_DATE' field.
   * @return The value of the 'LOG_DOA_UNLOCK_DATE' field.
   */
  public java.lang.CharSequence getLOGDOAUNLOCKDATE() {
    return LOG_DOA_UNLOCK_DATE;
  }


  /**
   * Sets the value of the 'LOG_DOA_UNLOCK_DATE' field.
   * @param value the value to set.
   */
  public void setLOGDOAUNLOCKDATE(java.lang.CharSequence value) {
    this.LOG_DOA_UNLOCK_DATE = value;
  }

  /**
   * Gets the value of the 'LOG_DOA_LOCK_DATE' field.
   * @return The value of the 'LOG_DOA_LOCK_DATE' field.
   */
  public java.lang.CharSequence getLOGDOALOCKDATE() {
    return LOG_DOA_LOCK_DATE;
  }


  /**
   * Sets the value of the 'LOG_DOA_LOCK_DATE' field.
   * @param value the value to set.
   */
  public void setLOGDOALOCKDATE(java.lang.CharSequence value) {
    this.LOG_DOA_LOCK_DATE = value;
  }

  /**
   * Gets the value of the 'DOA_LOCK_USER' field.
   * @return The value of the 'DOA_LOCK_USER' field.
   */
  public java.lang.CharSequence getDOALOCKUSER() {
    return DOA_LOCK_USER;
  }


  /**
   * Sets the value of the 'DOA_LOCK_USER' field.
   * @param value the value to set.
   */
  public void setDOALOCKUSER(java.lang.CharSequence value) {
    this.DOA_LOCK_USER = value;
  }

  /**
   * Gets the value of the 'LOG_DOA_OPEN_DATE' field.
   * @return The value of the 'LOG_DOA_OPEN_DATE' field.
   */
  public java.lang.CharSequence getLOGDOAOPENDATE() {
    return LOG_DOA_OPEN_DATE;
  }


  /**
   * Sets the value of the 'LOG_DOA_OPEN_DATE' field.
   * @param value the value to set.
   */
  public void setLOGDOAOPENDATE(java.lang.CharSequence value) {
    this.LOG_DOA_OPEN_DATE = value;
  }

  /**
   * Gets the value of the 'CDC_KEY' field.
   * @return The value of the 'CDC_KEY' field.
   */
  public java.lang.Double getCDCKEY() {
    return CDC_KEY;
  }


  /**
   * Sets the value of the 'CDC_KEY' field.
   * @param value the value to set.
   */
  public void setCDCKEY(java.lang.Double value) {
    this.CDC_KEY = value;
  }

  /**
   * Gets the value of the 'LOG_AUDIO_PROMO_FINAL_LOG_DATE' field.
   * @return The value of the 'LOG_AUDIO_PROMO_FINAL_LOG_DATE' field.
   */
  public java.lang.CharSequence getLOGAUDIOPROMOFINALLOGDATE() {
    return LOG_AUDIO_PROMO_FINAL_LOG_DATE;
  }


  /**
   * Sets the value of the 'LOG_AUDIO_PROMO_FINAL_LOG_DATE' field.
   * @param value the value to set.
   */
  public void setLOGAUDIOPROMOFINALLOGDATE(java.lang.CharSequence value) {
    this.LOG_AUDIO_PROMO_FINAL_LOG_DATE = value;
  }

  /**
   * Gets the value of the 'SRC_KEY_VAL' field.
   * @return The value of the 'SRC_KEY_VAL' field.
   */
  public java.lang.CharSequence getSRCKEYVAL() {
    return SRC_KEY_VAL;
  }


  /**
   * Sets the value of the 'SRC_KEY_VAL' field.
   * @param value the value to set.
   */
  public void setSRCKEYVAL(java.lang.CharSequence value) {
    this.SRC_KEY_VAL = value;
  }

  /**
   * Gets the value of the 'SRC_CDC_OPER_NM' field.
   * @return The value of the 'SRC_CDC_OPER_NM' field.
   */
  public java.lang.CharSequence getSRCCDCOPERNM() {
    return SRC_CDC_OPER_NM;
  }


  /**
   * Sets the value of the 'SRC_CDC_OPER_NM' field.
   * @param value the value to set.
   */
  public void setSRCCDCOPERNM(java.lang.CharSequence value) {
    this.SRC_CDC_OPER_NM = value;
  }

  /**
   * Gets the value of the 'SRC_COMMIT_DT_UTC' field.
   * @return The value of the 'SRC_COMMIT_DT_UTC' field.
   */
  public java.lang.CharSequence getSRCCOMMITDTUTC() {
    return SRC_COMMIT_DT_UTC;
  }


  /**
   * Sets the value of the 'SRC_COMMIT_DT_UTC' field.
   * @param value the value to set.
   */
  public void setSRCCOMMITDTUTC(java.lang.CharSequence value) {
    this.SRC_COMMIT_DT_UTC = value;
  }

  /**
   * Gets the value of the 'TRG_CRT_DT_PART_UTC' field.
   * @return The value of the 'TRG_CRT_DT_PART_UTC' field.
   */
  public java.lang.CharSequence getTRGCRTDTPARTUTC() {
    return TRG_CRT_DT_PART_UTC;
  }


  /**
   * Sets the value of the 'TRG_CRT_DT_PART_UTC' field.
   * @param value the value to set.
   */
  public void setTRGCRTDTPARTUTC(java.lang.CharSequence value) {
    this.TRG_CRT_DT_PART_UTC = value;
  }

  /**
   * Gets the value of the 'SRC_SCHEMA_NM' field.
   * @return The value of the 'SRC_SCHEMA_NM' field.
   */
  public java.lang.CharSequence getSRCSCHEMANM() {
    return SRC_SCHEMA_NM;
  }


  /**
   * Sets the value of the 'SRC_SCHEMA_NM' field.
   * @param value the value to set.
   */
  public void setSRCSCHEMANM(java.lang.CharSequence value) {
    this.SRC_SCHEMA_NM = value;
  }

  /**
   * Creates a new LNDCDC_NCS_TCS_LOGS RecordBuilder.
   * @return A new LNDCDC_NCS_TCS_LOGS RecordBuilder
   */
  public static org.LNDCDC_NCS_TCS.LOGS.apache.nifi.LNDCDC_NCS_TCS_LOGS.Builder newBuilder() {
    return new org.LNDCDC_NCS_TCS.LOGS.apache.nifi.LNDCDC_NCS_TCS_LOGS.Builder();
  }

  /**
   * Creates a new LNDCDC_NCS_TCS_LOGS RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new LNDCDC_NCS_TCS_LOGS RecordBuilder
   */
  public static org.LNDCDC_NCS_TCS.LOGS.apache.nifi.LNDCDC_NCS_TCS_LOGS.Builder newBuilder(org.LNDCDC_NCS_TCS.LOGS.apache.nifi.LNDCDC_NCS_TCS_LOGS.Builder other) {
    if (other == null) {
      return new org.LNDCDC_NCS_TCS.LOGS.apache.nifi.LNDCDC_NCS_TCS_LOGS.Builder();
    } else {
      return new org.LNDCDC_NCS_TCS.LOGS.apache.nifi.LNDCDC_NCS_TCS_LOGS.Builder(other);
    }
  }

  /**
   * Creates a new LNDCDC_NCS_TCS_LOGS RecordBuilder by copying an existing LNDCDC_NCS_TCS_LOGS instance.
   * @param other The existing instance to copy.
   * @return A new LNDCDC_NCS_TCS_LOGS RecordBuilder
   */
  public static org.LNDCDC_NCS_TCS.LOGS.apache.nifi.LNDCDC_NCS_TCS_LOGS.Builder newBuilder(org.LNDCDC_NCS_TCS.LOGS.apache.nifi.LNDCDC_NCS_TCS_LOGS other) {
    if (other == null) {
      return new org.LNDCDC_NCS_TCS.LOGS.apache.nifi.LNDCDC_NCS_TCS_LOGS.Builder();
    } else {
      return new org.LNDCDC_NCS_TCS.LOGS.apache.nifi.LNDCDC_NCS_TCS_LOGS.Builder(other);
    }
  }

  /**
   * RecordBuilder for LNDCDC_NCS_TCS_LOGS instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<LNDCDC_NCS_TCS_LOGS>
    implements org.apache.avro.data.RecordBuilder<LNDCDC_NCS_TCS_LOGS> {

    private java.lang.CharSequence LOG_DATE;
    private java.lang.Long LOG_NUMBER;
    private java.lang.CharSequence LOG_NETWORK;
    private java.lang.CharSequence LOG_PRE_LOG_DATE;
    private java.lang.Long LOG_PRE_LOG_TIME;
    private java.lang.CharSequence LOG_FINAL_LOG_DATE;
    private java.lang.CharSequence LOG_INVOICE_DATE;
    private java.lang.CharSequence LOG_MASTER_LOG_DATE;
    private java.lang.Long LOG_FINAL_LOG_TIME;
    private java.lang.CharSequence LOG_PROMO_SLOT_DATE;
    private java.lang.CharSequence LOG_TRAFFIC_SLOT_DATE;
    private java.lang.CharSequence LOG_EPI_ACTUALIZED_DATE;
    private java.lang.CharSequence LOG_TAPE_REVIEW_DATE;
    private java.lang.CharSequence LOG_FINANCE_CLOSE_DATE;
    private java.lang.CharSequence LOG_PROMO_FINAL_LOG_DATE;
    private java.lang.Long LOG_PROMO_FINAL_LOG_TIME;
    private java.lang.CharSequence LOG_DOA_RELEASE_DT;
    private java.lang.Long LOG_DOA_REVISION;
    private java.lang.CharSequence LOG_GC_RELEASE_DT;
    private java.lang.Long LOG_GC_REVISION;
    private java.lang.CharSequence LOG_TRAFFIC_LOCK_DATE;
    private java.lang.CharSequence LOG_GRIPIT_IMPORT_DATE;
    private java.lang.Double LOG_GRIPIT_IMPORT_TIME;
    private java.lang.CharSequence LOG_GRIPIT_IMPORT_USER;
    private java.lang.Double PLAYLIST_FILE_NUMBER;
    private java.lang.CharSequence LOG_READY_FOR_PROMO_IND;
    private java.lang.CharSequence LOG_DOA_UNLOCK_DATE;
    private java.lang.CharSequence LOG_DOA_LOCK_DATE;
    private java.lang.CharSequence DOA_LOCK_USER;
    private java.lang.CharSequence LOG_DOA_OPEN_DATE;
    private java.lang.Double CDC_KEY;
    private java.lang.CharSequence LOG_AUDIO_PROMO_FINAL_LOG_DATE;
    private java.lang.CharSequence SRC_KEY_VAL;
    private java.lang.CharSequence SRC_CDC_OPER_NM;
    private java.lang.CharSequence SRC_COMMIT_DT_UTC;
    private java.lang.CharSequence TRG_CRT_DT_PART_UTC;
    private java.lang.CharSequence SRC_SCHEMA_NM;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(org.LNDCDC_NCS_TCS.LOGS.apache.nifi.LNDCDC_NCS_TCS_LOGS.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.LOG_DATE)) {
        this.LOG_DATE = data().deepCopy(fields()[0].schema(), other.LOG_DATE);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.LOG_NUMBER)) {
        this.LOG_NUMBER = data().deepCopy(fields()[1].schema(), other.LOG_NUMBER);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.LOG_NETWORK)) {
        this.LOG_NETWORK = data().deepCopy(fields()[2].schema(), other.LOG_NETWORK);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.LOG_PRE_LOG_DATE)) {
        this.LOG_PRE_LOG_DATE = data().deepCopy(fields()[3].schema(), other.LOG_PRE_LOG_DATE);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.LOG_PRE_LOG_TIME)) {
        this.LOG_PRE_LOG_TIME = data().deepCopy(fields()[4].schema(), other.LOG_PRE_LOG_TIME);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.LOG_FINAL_LOG_DATE)) {
        this.LOG_FINAL_LOG_DATE = data().deepCopy(fields()[5].schema(), other.LOG_FINAL_LOG_DATE);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.LOG_INVOICE_DATE)) {
        this.LOG_INVOICE_DATE = data().deepCopy(fields()[6].schema(), other.LOG_INVOICE_DATE);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.LOG_MASTER_LOG_DATE)) {
        this.LOG_MASTER_LOG_DATE = data().deepCopy(fields()[7].schema(), other.LOG_MASTER_LOG_DATE);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.LOG_FINAL_LOG_TIME)) {
        this.LOG_FINAL_LOG_TIME = data().deepCopy(fields()[8].schema(), other.LOG_FINAL_LOG_TIME);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
      if (isValidValue(fields()[9], other.LOG_PROMO_SLOT_DATE)) {
        this.LOG_PROMO_SLOT_DATE = data().deepCopy(fields()[9].schema(), other.LOG_PROMO_SLOT_DATE);
        fieldSetFlags()[9] = other.fieldSetFlags()[9];
      }
      if (isValidValue(fields()[10], other.LOG_TRAFFIC_SLOT_DATE)) {
        this.LOG_TRAFFIC_SLOT_DATE = data().deepCopy(fields()[10].schema(), other.LOG_TRAFFIC_SLOT_DATE);
        fieldSetFlags()[10] = other.fieldSetFlags()[10];
      }
      if (isValidValue(fields()[11], other.LOG_EPI_ACTUALIZED_DATE)) {
        this.LOG_EPI_ACTUALIZED_DATE = data().deepCopy(fields()[11].schema(), other.LOG_EPI_ACTUALIZED_DATE);
        fieldSetFlags()[11] = other.fieldSetFlags()[11];
      }
      if (isValidValue(fields()[12], other.LOG_TAPE_REVIEW_DATE)) {
        this.LOG_TAPE_REVIEW_DATE = data().deepCopy(fields()[12].schema(), other.LOG_TAPE_REVIEW_DATE);
        fieldSetFlags()[12] = other.fieldSetFlags()[12];
      }
      if (isValidValue(fields()[13], other.LOG_FINANCE_CLOSE_DATE)) {
        this.LOG_FINANCE_CLOSE_DATE = data().deepCopy(fields()[13].schema(), other.LOG_FINANCE_CLOSE_DATE);
        fieldSetFlags()[13] = other.fieldSetFlags()[13];
      }
      if (isValidValue(fields()[14], other.LOG_PROMO_FINAL_LOG_DATE)) {
        this.LOG_PROMO_FINAL_LOG_DATE = data().deepCopy(fields()[14].schema(), other.LOG_PROMO_FINAL_LOG_DATE);
        fieldSetFlags()[14] = other.fieldSetFlags()[14];
      }
      if (isValidValue(fields()[15], other.LOG_PROMO_FINAL_LOG_TIME)) {
        this.LOG_PROMO_FINAL_LOG_TIME = data().deepCopy(fields()[15].schema(), other.LOG_PROMO_FINAL_LOG_TIME);
        fieldSetFlags()[15] = other.fieldSetFlags()[15];
      }
      if (isValidValue(fields()[16], other.LOG_DOA_RELEASE_DT)) {
        this.LOG_DOA_RELEASE_DT = data().deepCopy(fields()[16].schema(), other.LOG_DOA_RELEASE_DT);
        fieldSetFlags()[16] = other.fieldSetFlags()[16];
      }
      if (isValidValue(fields()[17], other.LOG_DOA_REVISION)) {
        this.LOG_DOA_REVISION = data().deepCopy(fields()[17].schema(), other.LOG_DOA_REVISION);
        fieldSetFlags()[17] = other.fieldSetFlags()[17];
      }
      if (isValidValue(fields()[18], other.LOG_GC_RELEASE_DT)) {
        this.LOG_GC_RELEASE_DT = data().deepCopy(fields()[18].schema(), other.LOG_GC_RELEASE_DT);
        fieldSetFlags()[18] = other.fieldSetFlags()[18];
      }
      if (isValidValue(fields()[19], other.LOG_GC_REVISION)) {
        this.LOG_GC_REVISION = data().deepCopy(fields()[19].schema(), other.LOG_GC_REVISION);
        fieldSetFlags()[19] = other.fieldSetFlags()[19];
      }
      if (isValidValue(fields()[20], other.LOG_TRAFFIC_LOCK_DATE)) {
        this.LOG_TRAFFIC_LOCK_DATE = data().deepCopy(fields()[20].schema(), other.LOG_TRAFFIC_LOCK_DATE);
        fieldSetFlags()[20] = other.fieldSetFlags()[20];
      }
      if (isValidValue(fields()[21], other.LOG_GRIPIT_IMPORT_DATE)) {
        this.LOG_GRIPIT_IMPORT_DATE = data().deepCopy(fields()[21].schema(), other.LOG_GRIPIT_IMPORT_DATE);
        fieldSetFlags()[21] = other.fieldSetFlags()[21];
      }
      if (isValidValue(fields()[22], other.LOG_GRIPIT_IMPORT_TIME)) {
        this.LOG_GRIPIT_IMPORT_TIME = data().deepCopy(fields()[22].schema(), other.LOG_GRIPIT_IMPORT_TIME);
        fieldSetFlags()[22] = other.fieldSetFlags()[22];
      }
      if (isValidValue(fields()[23], other.LOG_GRIPIT_IMPORT_USER)) {
        this.LOG_GRIPIT_IMPORT_USER = data().deepCopy(fields()[23].schema(), other.LOG_GRIPIT_IMPORT_USER);
        fieldSetFlags()[23] = other.fieldSetFlags()[23];
      }
      if (isValidValue(fields()[24], other.PLAYLIST_FILE_NUMBER)) {
        this.PLAYLIST_FILE_NUMBER = data().deepCopy(fields()[24].schema(), other.PLAYLIST_FILE_NUMBER);
        fieldSetFlags()[24] = other.fieldSetFlags()[24];
      }
      if (isValidValue(fields()[25], other.LOG_READY_FOR_PROMO_IND)) {
        this.LOG_READY_FOR_PROMO_IND = data().deepCopy(fields()[25].schema(), other.LOG_READY_FOR_PROMO_IND);
        fieldSetFlags()[25] = other.fieldSetFlags()[25];
      }
      if (isValidValue(fields()[26], other.LOG_DOA_UNLOCK_DATE)) {
        this.LOG_DOA_UNLOCK_DATE = data().deepCopy(fields()[26].schema(), other.LOG_DOA_UNLOCK_DATE);
        fieldSetFlags()[26] = other.fieldSetFlags()[26];
      }
      if (isValidValue(fields()[27], other.LOG_DOA_LOCK_DATE)) {
        this.LOG_DOA_LOCK_DATE = data().deepCopy(fields()[27].schema(), other.LOG_DOA_LOCK_DATE);
        fieldSetFlags()[27] = other.fieldSetFlags()[27];
      }
      if (isValidValue(fields()[28], other.DOA_LOCK_USER)) {
        this.DOA_LOCK_USER = data().deepCopy(fields()[28].schema(), other.DOA_LOCK_USER);
        fieldSetFlags()[28] = other.fieldSetFlags()[28];
      }
      if (isValidValue(fields()[29], other.LOG_DOA_OPEN_DATE)) {
        this.LOG_DOA_OPEN_DATE = data().deepCopy(fields()[29].schema(), other.LOG_DOA_OPEN_DATE);
        fieldSetFlags()[29] = other.fieldSetFlags()[29];
      }
      if (isValidValue(fields()[30], other.CDC_KEY)) {
        this.CDC_KEY = data().deepCopy(fields()[30].schema(), other.CDC_KEY);
        fieldSetFlags()[30] = other.fieldSetFlags()[30];
      }
      if (isValidValue(fields()[31], other.LOG_AUDIO_PROMO_FINAL_LOG_DATE)) {
        this.LOG_AUDIO_PROMO_FINAL_LOG_DATE = data().deepCopy(fields()[31].schema(), other.LOG_AUDIO_PROMO_FINAL_LOG_DATE);
        fieldSetFlags()[31] = other.fieldSetFlags()[31];
      }
      if (isValidValue(fields()[32], other.SRC_KEY_VAL)) {
        this.SRC_KEY_VAL = data().deepCopy(fields()[32].schema(), other.SRC_KEY_VAL);
        fieldSetFlags()[32] = other.fieldSetFlags()[32];
      }
      if (isValidValue(fields()[33], other.SRC_CDC_OPER_NM)) {
        this.SRC_CDC_OPER_NM = data().deepCopy(fields()[33].schema(), other.SRC_CDC_OPER_NM);
        fieldSetFlags()[33] = other.fieldSetFlags()[33];
      }
      if (isValidValue(fields()[34], other.SRC_COMMIT_DT_UTC)) {
        this.SRC_COMMIT_DT_UTC = data().deepCopy(fields()[34].schema(), other.SRC_COMMIT_DT_UTC);
        fieldSetFlags()[34] = other.fieldSetFlags()[34];
      }
      if (isValidValue(fields()[35], other.TRG_CRT_DT_PART_UTC)) {
        this.TRG_CRT_DT_PART_UTC = data().deepCopy(fields()[35].schema(), other.TRG_CRT_DT_PART_UTC);
        fieldSetFlags()[35] = other.fieldSetFlags()[35];
      }
      if (isValidValue(fields()[36], other.SRC_SCHEMA_NM)) {
        this.SRC_SCHEMA_NM = data().deepCopy(fields()[36].schema(), other.SRC_SCHEMA_NM);
        fieldSetFlags()[36] = other.fieldSetFlags()[36];
      }
    }

    /**
     * Creates a Builder by copying an existing LNDCDC_NCS_TCS_LOGS instance
     * @param other The existing instance to copy.
     */
    private Builder(org.LNDCDC_NCS_TCS.LOGS.apache.nifi.LNDCDC_NCS_TCS_LOGS other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.LOG_DATE)) {
        this.LOG_DATE = data().deepCopy(fields()[0].schema(), other.LOG_DATE);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.LOG_NUMBER)) {
        this.LOG_NUMBER = data().deepCopy(fields()[1].schema(), other.LOG_NUMBER);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.LOG_NETWORK)) {
        this.LOG_NETWORK = data().deepCopy(fields()[2].schema(), other.LOG_NETWORK);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.LOG_PRE_LOG_DATE)) {
        this.LOG_PRE_LOG_DATE = data().deepCopy(fields()[3].schema(), other.LOG_PRE_LOG_DATE);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.LOG_PRE_LOG_TIME)) {
        this.LOG_PRE_LOG_TIME = data().deepCopy(fields()[4].schema(), other.LOG_PRE_LOG_TIME);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.LOG_FINAL_LOG_DATE)) {
        this.LOG_FINAL_LOG_DATE = data().deepCopy(fields()[5].schema(), other.LOG_FINAL_LOG_DATE);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.LOG_INVOICE_DATE)) {
        this.LOG_INVOICE_DATE = data().deepCopy(fields()[6].schema(), other.LOG_INVOICE_DATE);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.LOG_MASTER_LOG_DATE)) {
        this.LOG_MASTER_LOG_DATE = data().deepCopy(fields()[7].schema(), other.LOG_MASTER_LOG_DATE);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.LOG_FINAL_LOG_TIME)) {
        this.LOG_FINAL_LOG_TIME = data().deepCopy(fields()[8].schema(), other.LOG_FINAL_LOG_TIME);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.LOG_PROMO_SLOT_DATE)) {
        this.LOG_PROMO_SLOT_DATE = data().deepCopy(fields()[9].schema(), other.LOG_PROMO_SLOT_DATE);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.LOG_TRAFFIC_SLOT_DATE)) {
        this.LOG_TRAFFIC_SLOT_DATE = data().deepCopy(fields()[10].schema(), other.LOG_TRAFFIC_SLOT_DATE);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.LOG_EPI_ACTUALIZED_DATE)) {
        this.LOG_EPI_ACTUALIZED_DATE = data().deepCopy(fields()[11].schema(), other.LOG_EPI_ACTUALIZED_DATE);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.LOG_TAPE_REVIEW_DATE)) {
        this.LOG_TAPE_REVIEW_DATE = data().deepCopy(fields()[12].schema(), other.LOG_TAPE_REVIEW_DATE);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.LOG_FINANCE_CLOSE_DATE)) {
        this.LOG_FINANCE_CLOSE_DATE = data().deepCopy(fields()[13].schema(), other.LOG_FINANCE_CLOSE_DATE);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.LOG_PROMO_FINAL_LOG_DATE)) {
        this.LOG_PROMO_FINAL_LOG_DATE = data().deepCopy(fields()[14].schema(), other.LOG_PROMO_FINAL_LOG_DATE);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.LOG_PROMO_FINAL_LOG_TIME)) {
        this.LOG_PROMO_FINAL_LOG_TIME = data().deepCopy(fields()[15].schema(), other.LOG_PROMO_FINAL_LOG_TIME);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.LOG_DOA_RELEASE_DT)) {
        this.LOG_DOA_RELEASE_DT = data().deepCopy(fields()[16].schema(), other.LOG_DOA_RELEASE_DT);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.LOG_DOA_REVISION)) {
        this.LOG_DOA_REVISION = data().deepCopy(fields()[17].schema(), other.LOG_DOA_REVISION);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.LOG_GC_RELEASE_DT)) {
        this.LOG_GC_RELEASE_DT = data().deepCopy(fields()[18].schema(), other.LOG_GC_RELEASE_DT);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.LOG_GC_REVISION)) {
        this.LOG_GC_REVISION = data().deepCopy(fields()[19].schema(), other.LOG_GC_REVISION);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.LOG_TRAFFIC_LOCK_DATE)) {
        this.LOG_TRAFFIC_LOCK_DATE = data().deepCopy(fields()[20].schema(), other.LOG_TRAFFIC_LOCK_DATE);
        fieldSetFlags()[20] = true;
      }
      if (isValidValue(fields()[21], other.LOG_GRIPIT_IMPORT_DATE)) {
        this.LOG_GRIPIT_IMPORT_DATE = data().deepCopy(fields()[21].schema(), other.LOG_GRIPIT_IMPORT_DATE);
        fieldSetFlags()[21] = true;
      }
      if (isValidValue(fields()[22], other.LOG_GRIPIT_IMPORT_TIME)) {
        this.LOG_GRIPIT_IMPORT_TIME = data().deepCopy(fields()[22].schema(), other.LOG_GRIPIT_IMPORT_TIME);
        fieldSetFlags()[22] = true;
      }
      if (isValidValue(fields()[23], other.LOG_GRIPIT_IMPORT_USER)) {
        this.LOG_GRIPIT_IMPORT_USER = data().deepCopy(fields()[23].schema(), other.LOG_GRIPIT_IMPORT_USER);
        fieldSetFlags()[23] = true;
      }
      if (isValidValue(fields()[24], other.PLAYLIST_FILE_NUMBER)) {
        this.PLAYLIST_FILE_NUMBER = data().deepCopy(fields()[24].schema(), other.PLAYLIST_FILE_NUMBER);
        fieldSetFlags()[24] = true;
      }
      if (isValidValue(fields()[25], other.LOG_READY_FOR_PROMO_IND)) {
        this.LOG_READY_FOR_PROMO_IND = data().deepCopy(fields()[25].schema(), other.LOG_READY_FOR_PROMO_IND);
        fieldSetFlags()[25] = true;
      }
      if (isValidValue(fields()[26], other.LOG_DOA_UNLOCK_DATE)) {
        this.LOG_DOA_UNLOCK_DATE = data().deepCopy(fields()[26].schema(), other.LOG_DOA_UNLOCK_DATE);
        fieldSetFlags()[26] = true;
      }
      if (isValidValue(fields()[27], other.LOG_DOA_LOCK_DATE)) {
        this.LOG_DOA_LOCK_DATE = data().deepCopy(fields()[27].schema(), other.LOG_DOA_LOCK_DATE);
        fieldSetFlags()[27] = true;
      }
      if (isValidValue(fields()[28], other.DOA_LOCK_USER)) {
        this.DOA_LOCK_USER = data().deepCopy(fields()[28].schema(), other.DOA_LOCK_USER);
        fieldSetFlags()[28] = true;
      }
      if (isValidValue(fields()[29], other.LOG_DOA_OPEN_DATE)) {
        this.LOG_DOA_OPEN_DATE = data().deepCopy(fields()[29].schema(), other.LOG_DOA_OPEN_DATE);
        fieldSetFlags()[29] = true;
      }
      if (isValidValue(fields()[30], other.CDC_KEY)) {
        this.CDC_KEY = data().deepCopy(fields()[30].schema(), other.CDC_KEY);
        fieldSetFlags()[30] = true;
      }
      if (isValidValue(fields()[31], other.LOG_AUDIO_PROMO_FINAL_LOG_DATE)) {
        this.LOG_AUDIO_PROMO_FINAL_LOG_DATE = data().deepCopy(fields()[31].schema(), other.LOG_AUDIO_PROMO_FINAL_LOG_DATE);
        fieldSetFlags()[31] = true;
      }
      if (isValidValue(fields()[32], other.SRC_KEY_VAL)) {
        this.SRC_KEY_VAL = data().deepCopy(fields()[32].schema(), other.SRC_KEY_VAL);
        fieldSetFlags()[32] = true;
      }
      if (isValidValue(fields()[33], other.SRC_CDC_OPER_NM)) {
        this.SRC_CDC_OPER_NM = data().deepCopy(fields()[33].schema(), other.SRC_CDC_OPER_NM);
        fieldSetFlags()[33] = true;
      }
      if (isValidValue(fields()[34], other.SRC_COMMIT_DT_UTC)) {
        this.SRC_COMMIT_DT_UTC = data().deepCopy(fields()[34].schema(), other.SRC_COMMIT_DT_UTC);
        fieldSetFlags()[34] = true;
      }
      if (isValidValue(fields()[35], other.TRG_CRT_DT_PART_UTC)) {
        this.TRG_CRT_DT_PART_UTC = data().deepCopy(fields()[35].schema(), other.TRG_CRT_DT_PART_UTC);
        fieldSetFlags()[35] = true;
      }
      if (isValidValue(fields()[36], other.SRC_SCHEMA_NM)) {
        this.SRC_SCHEMA_NM = data().deepCopy(fields()[36].schema(), other.SRC_SCHEMA_NM);
        fieldSetFlags()[36] = true;
      }
    }

    /**
      * Gets the value of the 'LOG_DATE' field.
      * @return The value.
      */
    public java.lang.CharSequence getLOGDATE() {
      return LOG_DATE;
    }


    /**
      * Sets the value of the 'LOG_DATE' field.
      * @param value The value of 'LOG_DATE'.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.LOGS.apache.nifi.LNDCDC_NCS_TCS_LOGS.Builder setLOGDATE(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.LOG_DATE = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'LOG_DATE' field has been set.
      * @return True if the 'LOG_DATE' field has been set, false otherwise.
      */
    public boolean hasLOGDATE() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'LOG_DATE' field.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.LOGS.apache.nifi.LNDCDC_NCS_TCS_LOGS.Builder clearLOGDATE() {
      LOG_DATE = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'LOG_NUMBER' field.
      * @return The value.
      */
    public java.lang.Long getLOGNUMBER() {
      return LOG_NUMBER;
    }


    /**
      * Sets the value of the 'LOG_NUMBER' field.
      * @param value The value of 'LOG_NUMBER'.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.LOGS.apache.nifi.LNDCDC_NCS_TCS_LOGS.Builder setLOGNUMBER(java.lang.Long value) {
      validate(fields()[1], value);
      this.LOG_NUMBER = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'LOG_NUMBER' field has been set.
      * @return True if the 'LOG_NUMBER' field has been set, false otherwise.
      */
    public boolean hasLOGNUMBER() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'LOG_NUMBER' field.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.LOGS.apache.nifi.LNDCDC_NCS_TCS_LOGS.Builder clearLOGNUMBER() {
      LOG_NUMBER = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'LOG_NETWORK' field.
      * @return The value.
      */
    public java.lang.CharSequence getLOGNETWORK() {
      return LOG_NETWORK;
    }


    /**
      * Sets the value of the 'LOG_NETWORK' field.
      * @param value The value of 'LOG_NETWORK'.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.LOGS.apache.nifi.LNDCDC_NCS_TCS_LOGS.Builder setLOGNETWORK(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.LOG_NETWORK = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'LOG_NETWORK' field has been set.
      * @return True if the 'LOG_NETWORK' field has been set, false otherwise.
      */
    public boolean hasLOGNETWORK() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'LOG_NETWORK' field.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.LOGS.apache.nifi.LNDCDC_NCS_TCS_LOGS.Builder clearLOGNETWORK() {
      LOG_NETWORK = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'LOG_PRE_LOG_DATE' field.
      * @return The value.
      */
    public java.lang.CharSequence getLOGPRELOGDATE() {
      return LOG_PRE_LOG_DATE;
    }


    /**
      * Sets the value of the 'LOG_PRE_LOG_DATE' field.
      * @param value The value of 'LOG_PRE_LOG_DATE'.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.LOGS.apache.nifi.LNDCDC_NCS_TCS_LOGS.Builder setLOGPRELOGDATE(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.LOG_PRE_LOG_DATE = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'LOG_PRE_LOG_DATE' field has been set.
      * @return True if the 'LOG_PRE_LOG_DATE' field has been set, false otherwise.
      */
    public boolean hasLOGPRELOGDATE() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'LOG_PRE_LOG_DATE' field.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.LOGS.apache.nifi.LNDCDC_NCS_TCS_LOGS.Builder clearLOGPRELOGDATE() {
      LOG_PRE_LOG_DATE = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'LOG_PRE_LOG_TIME' field.
      * @return The value.
      */
    public java.lang.Long getLOGPRELOGTIME() {
      return LOG_PRE_LOG_TIME;
    }


    /**
      * Sets the value of the 'LOG_PRE_LOG_TIME' field.
      * @param value The value of 'LOG_PRE_LOG_TIME'.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.LOGS.apache.nifi.LNDCDC_NCS_TCS_LOGS.Builder setLOGPRELOGTIME(java.lang.Long value) {
      validate(fields()[4], value);
      this.LOG_PRE_LOG_TIME = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'LOG_PRE_LOG_TIME' field has been set.
      * @return True if the 'LOG_PRE_LOG_TIME' field has been set, false otherwise.
      */
    public boolean hasLOGPRELOGTIME() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'LOG_PRE_LOG_TIME' field.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.LOGS.apache.nifi.LNDCDC_NCS_TCS_LOGS.Builder clearLOGPRELOGTIME() {
      LOG_PRE_LOG_TIME = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'LOG_FINAL_LOG_DATE' field.
      * @return The value.
      */
    public java.lang.CharSequence getLOGFINALLOGDATE() {
      return LOG_FINAL_LOG_DATE;
    }


    /**
      * Sets the value of the 'LOG_FINAL_LOG_DATE' field.
      * @param value The value of 'LOG_FINAL_LOG_DATE'.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.LOGS.apache.nifi.LNDCDC_NCS_TCS_LOGS.Builder setLOGFINALLOGDATE(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.LOG_FINAL_LOG_DATE = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'LOG_FINAL_LOG_DATE' field has been set.
      * @return True if the 'LOG_FINAL_LOG_DATE' field has been set, false otherwise.
      */
    public boolean hasLOGFINALLOGDATE() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'LOG_FINAL_LOG_DATE' field.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.LOGS.apache.nifi.LNDCDC_NCS_TCS_LOGS.Builder clearLOGFINALLOGDATE() {
      LOG_FINAL_LOG_DATE = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'LOG_INVOICE_DATE' field.
      * @return The value.
      */
    public java.lang.CharSequence getLOGINVOICEDATE() {
      return LOG_INVOICE_DATE;
    }


    /**
      * Sets the value of the 'LOG_INVOICE_DATE' field.
      * @param value The value of 'LOG_INVOICE_DATE'.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.LOGS.apache.nifi.LNDCDC_NCS_TCS_LOGS.Builder setLOGINVOICEDATE(java.lang.CharSequence value) {
      validate(fields()[6], value);
      this.LOG_INVOICE_DATE = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'LOG_INVOICE_DATE' field has been set.
      * @return True if the 'LOG_INVOICE_DATE' field has been set, false otherwise.
      */
    public boolean hasLOGINVOICEDATE() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'LOG_INVOICE_DATE' field.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.LOGS.apache.nifi.LNDCDC_NCS_TCS_LOGS.Builder clearLOGINVOICEDATE() {
      LOG_INVOICE_DATE = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'LOG_MASTER_LOG_DATE' field.
      * @return The value.
      */
    public java.lang.CharSequence getLOGMASTERLOGDATE() {
      return LOG_MASTER_LOG_DATE;
    }


    /**
      * Sets the value of the 'LOG_MASTER_LOG_DATE' field.
      * @param value The value of 'LOG_MASTER_LOG_DATE'.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.LOGS.apache.nifi.LNDCDC_NCS_TCS_LOGS.Builder setLOGMASTERLOGDATE(java.lang.CharSequence value) {
      validate(fields()[7], value);
      this.LOG_MASTER_LOG_DATE = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'LOG_MASTER_LOG_DATE' field has been set.
      * @return True if the 'LOG_MASTER_LOG_DATE' field has been set, false otherwise.
      */
    public boolean hasLOGMASTERLOGDATE() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'LOG_MASTER_LOG_DATE' field.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.LOGS.apache.nifi.LNDCDC_NCS_TCS_LOGS.Builder clearLOGMASTERLOGDATE() {
      LOG_MASTER_LOG_DATE = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'LOG_FINAL_LOG_TIME' field.
      * @return The value.
      */
    public java.lang.Long getLOGFINALLOGTIME() {
      return LOG_FINAL_LOG_TIME;
    }


    /**
      * Sets the value of the 'LOG_FINAL_LOG_TIME' field.
      * @param value The value of 'LOG_FINAL_LOG_TIME'.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.LOGS.apache.nifi.LNDCDC_NCS_TCS_LOGS.Builder setLOGFINALLOGTIME(java.lang.Long value) {
      validate(fields()[8], value);
      this.LOG_FINAL_LOG_TIME = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'LOG_FINAL_LOG_TIME' field has been set.
      * @return True if the 'LOG_FINAL_LOG_TIME' field has been set, false otherwise.
      */
    public boolean hasLOGFINALLOGTIME() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'LOG_FINAL_LOG_TIME' field.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.LOGS.apache.nifi.LNDCDC_NCS_TCS_LOGS.Builder clearLOGFINALLOGTIME() {
      LOG_FINAL_LOG_TIME = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'LOG_PROMO_SLOT_DATE' field.
      * @return The value.
      */
    public java.lang.CharSequence getLOGPROMOSLOTDATE() {
      return LOG_PROMO_SLOT_DATE;
    }


    /**
      * Sets the value of the 'LOG_PROMO_SLOT_DATE' field.
      * @param value The value of 'LOG_PROMO_SLOT_DATE'.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.LOGS.apache.nifi.LNDCDC_NCS_TCS_LOGS.Builder setLOGPROMOSLOTDATE(java.lang.CharSequence value) {
      validate(fields()[9], value);
      this.LOG_PROMO_SLOT_DATE = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'LOG_PROMO_SLOT_DATE' field has been set.
      * @return True if the 'LOG_PROMO_SLOT_DATE' field has been set, false otherwise.
      */
    public boolean hasLOGPROMOSLOTDATE() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'LOG_PROMO_SLOT_DATE' field.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.LOGS.apache.nifi.LNDCDC_NCS_TCS_LOGS.Builder clearLOGPROMOSLOTDATE() {
      LOG_PROMO_SLOT_DATE = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'LOG_TRAFFIC_SLOT_DATE' field.
      * @return The value.
      */
    public java.lang.CharSequence getLOGTRAFFICSLOTDATE() {
      return LOG_TRAFFIC_SLOT_DATE;
    }


    /**
      * Sets the value of the 'LOG_TRAFFIC_SLOT_DATE' field.
      * @param value The value of 'LOG_TRAFFIC_SLOT_DATE'.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.LOGS.apache.nifi.LNDCDC_NCS_TCS_LOGS.Builder setLOGTRAFFICSLOTDATE(java.lang.CharSequence value) {
      validate(fields()[10], value);
      this.LOG_TRAFFIC_SLOT_DATE = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'LOG_TRAFFIC_SLOT_DATE' field has been set.
      * @return True if the 'LOG_TRAFFIC_SLOT_DATE' field has been set, false otherwise.
      */
    public boolean hasLOGTRAFFICSLOTDATE() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'LOG_TRAFFIC_SLOT_DATE' field.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.LOGS.apache.nifi.LNDCDC_NCS_TCS_LOGS.Builder clearLOGTRAFFICSLOTDATE() {
      LOG_TRAFFIC_SLOT_DATE = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'LOG_EPI_ACTUALIZED_DATE' field.
      * @return The value.
      */
    public java.lang.CharSequence getLOGEPIACTUALIZEDDATE() {
      return LOG_EPI_ACTUALIZED_DATE;
    }


    /**
      * Sets the value of the 'LOG_EPI_ACTUALIZED_DATE' field.
      * @param value The value of 'LOG_EPI_ACTUALIZED_DATE'.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.LOGS.apache.nifi.LNDCDC_NCS_TCS_LOGS.Builder setLOGEPIACTUALIZEDDATE(java.lang.CharSequence value) {
      validate(fields()[11], value);
      this.LOG_EPI_ACTUALIZED_DATE = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'LOG_EPI_ACTUALIZED_DATE' field has been set.
      * @return True if the 'LOG_EPI_ACTUALIZED_DATE' field has been set, false otherwise.
      */
    public boolean hasLOGEPIACTUALIZEDDATE() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'LOG_EPI_ACTUALIZED_DATE' field.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.LOGS.apache.nifi.LNDCDC_NCS_TCS_LOGS.Builder clearLOGEPIACTUALIZEDDATE() {
      LOG_EPI_ACTUALIZED_DATE = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'LOG_TAPE_REVIEW_DATE' field.
      * @return The value.
      */
    public java.lang.CharSequence getLOGTAPEREVIEWDATE() {
      return LOG_TAPE_REVIEW_DATE;
    }


    /**
      * Sets the value of the 'LOG_TAPE_REVIEW_DATE' field.
      * @param value The value of 'LOG_TAPE_REVIEW_DATE'.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.LOGS.apache.nifi.LNDCDC_NCS_TCS_LOGS.Builder setLOGTAPEREVIEWDATE(java.lang.CharSequence value) {
      validate(fields()[12], value);
      this.LOG_TAPE_REVIEW_DATE = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'LOG_TAPE_REVIEW_DATE' field has been set.
      * @return True if the 'LOG_TAPE_REVIEW_DATE' field has been set, false otherwise.
      */
    public boolean hasLOGTAPEREVIEWDATE() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'LOG_TAPE_REVIEW_DATE' field.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.LOGS.apache.nifi.LNDCDC_NCS_TCS_LOGS.Builder clearLOGTAPEREVIEWDATE() {
      LOG_TAPE_REVIEW_DATE = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'LOG_FINANCE_CLOSE_DATE' field.
      * @return The value.
      */
    public java.lang.CharSequence getLOGFINANCECLOSEDATE() {
      return LOG_FINANCE_CLOSE_DATE;
    }


    /**
      * Sets the value of the 'LOG_FINANCE_CLOSE_DATE' field.
      * @param value The value of 'LOG_FINANCE_CLOSE_DATE'.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.LOGS.apache.nifi.LNDCDC_NCS_TCS_LOGS.Builder setLOGFINANCECLOSEDATE(java.lang.CharSequence value) {
      validate(fields()[13], value);
      this.LOG_FINANCE_CLOSE_DATE = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'LOG_FINANCE_CLOSE_DATE' field has been set.
      * @return True if the 'LOG_FINANCE_CLOSE_DATE' field has been set, false otherwise.
      */
    public boolean hasLOGFINANCECLOSEDATE() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'LOG_FINANCE_CLOSE_DATE' field.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.LOGS.apache.nifi.LNDCDC_NCS_TCS_LOGS.Builder clearLOGFINANCECLOSEDATE() {
      LOG_FINANCE_CLOSE_DATE = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    /**
      * Gets the value of the 'LOG_PROMO_FINAL_LOG_DATE' field.
      * @return The value.
      */
    public java.lang.CharSequence getLOGPROMOFINALLOGDATE() {
      return LOG_PROMO_FINAL_LOG_DATE;
    }


    /**
      * Sets the value of the 'LOG_PROMO_FINAL_LOG_DATE' field.
      * @param value The value of 'LOG_PROMO_FINAL_LOG_DATE'.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.LOGS.apache.nifi.LNDCDC_NCS_TCS_LOGS.Builder setLOGPROMOFINALLOGDATE(java.lang.CharSequence value) {
      validate(fields()[14], value);
      this.LOG_PROMO_FINAL_LOG_DATE = value;
      fieldSetFlags()[14] = true;
      return this;
    }

    /**
      * Checks whether the 'LOG_PROMO_FINAL_LOG_DATE' field has been set.
      * @return True if the 'LOG_PROMO_FINAL_LOG_DATE' field has been set, false otherwise.
      */
    public boolean hasLOGPROMOFINALLOGDATE() {
      return fieldSetFlags()[14];
    }


    /**
      * Clears the value of the 'LOG_PROMO_FINAL_LOG_DATE' field.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.LOGS.apache.nifi.LNDCDC_NCS_TCS_LOGS.Builder clearLOGPROMOFINALLOGDATE() {
      LOG_PROMO_FINAL_LOG_DATE = null;
      fieldSetFlags()[14] = false;
      return this;
    }

    /**
      * Gets the value of the 'LOG_PROMO_FINAL_LOG_TIME' field.
      * @return The value.
      */
    public java.lang.Long getLOGPROMOFINALLOGTIME() {
      return LOG_PROMO_FINAL_LOG_TIME;
    }


    /**
      * Sets the value of the 'LOG_PROMO_FINAL_LOG_TIME' field.
      * @param value The value of 'LOG_PROMO_FINAL_LOG_TIME'.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.LOGS.apache.nifi.LNDCDC_NCS_TCS_LOGS.Builder setLOGPROMOFINALLOGTIME(java.lang.Long value) {
      validate(fields()[15], value);
      this.LOG_PROMO_FINAL_LOG_TIME = value;
      fieldSetFlags()[15] = true;
      return this;
    }

    /**
      * Checks whether the 'LOG_PROMO_FINAL_LOG_TIME' field has been set.
      * @return True if the 'LOG_PROMO_FINAL_LOG_TIME' field has been set, false otherwise.
      */
    public boolean hasLOGPROMOFINALLOGTIME() {
      return fieldSetFlags()[15];
    }


    /**
      * Clears the value of the 'LOG_PROMO_FINAL_LOG_TIME' field.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.LOGS.apache.nifi.LNDCDC_NCS_TCS_LOGS.Builder clearLOGPROMOFINALLOGTIME() {
      LOG_PROMO_FINAL_LOG_TIME = null;
      fieldSetFlags()[15] = false;
      return this;
    }

    /**
      * Gets the value of the 'LOG_DOA_RELEASE_DT' field.
      * @return The value.
      */
    public java.lang.CharSequence getLOGDOARELEASEDT() {
      return LOG_DOA_RELEASE_DT;
    }


    /**
      * Sets the value of the 'LOG_DOA_RELEASE_DT' field.
      * @param value The value of 'LOG_DOA_RELEASE_DT'.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.LOGS.apache.nifi.LNDCDC_NCS_TCS_LOGS.Builder setLOGDOARELEASEDT(java.lang.CharSequence value) {
      validate(fields()[16], value);
      this.LOG_DOA_RELEASE_DT = value;
      fieldSetFlags()[16] = true;
      return this;
    }

    /**
      * Checks whether the 'LOG_DOA_RELEASE_DT' field has been set.
      * @return True if the 'LOG_DOA_RELEASE_DT' field has been set, false otherwise.
      */
    public boolean hasLOGDOARELEASEDT() {
      return fieldSetFlags()[16];
    }


    /**
      * Clears the value of the 'LOG_DOA_RELEASE_DT' field.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.LOGS.apache.nifi.LNDCDC_NCS_TCS_LOGS.Builder clearLOGDOARELEASEDT() {
      LOG_DOA_RELEASE_DT = null;
      fieldSetFlags()[16] = false;
      return this;
    }

    /**
      * Gets the value of the 'LOG_DOA_REVISION' field.
      * @return The value.
      */
    public java.lang.Long getLOGDOAREVISION() {
      return LOG_DOA_REVISION;
    }


    /**
      * Sets the value of the 'LOG_DOA_REVISION' field.
      * @param value The value of 'LOG_DOA_REVISION'.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.LOGS.apache.nifi.LNDCDC_NCS_TCS_LOGS.Builder setLOGDOAREVISION(java.lang.Long value) {
      validate(fields()[17], value);
      this.LOG_DOA_REVISION = value;
      fieldSetFlags()[17] = true;
      return this;
    }

    /**
      * Checks whether the 'LOG_DOA_REVISION' field has been set.
      * @return True if the 'LOG_DOA_REVISION' field has been set, false otherwise.
      */
    public boolean hasLOGDOAREVISION() {
      return fieldSetFlags()[17];
    }


    /**
      * Clears the value of the 'LOG_DOA_REVISION' field.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.LOGS.apache.nifi.LNDCDC_NCS_TCS_LOGS.Builder clearLOGDOAREVISION() {
      LOG_DOA_REVISION = null;
      fieldSetFlags()[17] = false;
      return this;
    }

    /**
      * Gets the value of the 'LOG_GC_RELEASE_DT' field.
      * @return The value.
      */
    public java.lang.CharSequence getLOGGCRELEASEDT() {
      return LOG_GC_RELEASE_DT;
    }


    /**
      * Sets the value of the 'LOG_GC_RELEASE_DT' field.
      * @param value The value of 'LOG_GC_RELEASE_DT'.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.LOGS.apache.nifi.LNDCDC_NCS_TCS_LOGS.Builder setLOGGCRELEASEDT(java.lang.CharSequence value) {
      validate(fields()[18], value);
      this.LOG_GC_RELEASE_DT = value;
      fieldSetFlags()[18] = true;
      return this;
    }

    /**
      * Checks whether the 'LOG_GC_RELEASE_DT' field has been set.
      * @return True if the 'LOG_GC_RELEASE_DT' field has been set, false otherwise.
      */
    public boolean hasLOGGCRELEASEDT() {
      return fieldSetFlags()[18];
    }


    /**
      * Clears the value of the 'LOG_GC_RELEASE_DT' field.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.LOGS.apache.nifi.LNDCDC_NCS_TCS_LOGS.Builder clearLOGGCRELEASEDT() {
      LOG_GC_RELEASE_DT = null;
      fieldSetFlags()[18] = false;
      return this;
    }

    /**
      * Gets the value of the 'LOG_GC_REVISION' field.
      * @return The value.
      */
    public java.lang.Long getLOGGCREVISION() {
      return LOG_GC_REVISION;
    }


    /**
      * Sets the value of the 'LOG_GC_REVISION' field.
      * @param value The value of 'LOG_GC_REVISION'.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.LOGS.apache.nifi.LNDCDC_NCS_TCS_LOGS.Builder setLOGGCREVISION(java.lang.Long value) {
      validate(fields()[19], value);
      this.LOG_GC_REVISION = value;
      fieldSetFlags()[19] = true;
      return this;
    }

    /**
      * Checks whether the 'LOG_GC_REVISION' field has been set.
      * @return True if the 'LOG_GC_REVISION' field has been set, false otherwise.
      */
    public boolean hasLOGGCREVISION() {
      return fieldSetFlags()[19];
    }


    /**
      * Clears the value of the 'LOG_GC_REVISION' field.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.LOGS.apache.nifi.LNDCDC_NCS_TCS_LOGS.Builder clearLOGGCREVISION() {
      LOG_GC_REVISION = null;
      fieldSetFlags()[19] = false;
      return this;
    }

    /**
      * Gets the value of the 'LOG_TRAFFIC_LOCK_DATE' field.
      * @return The value.
      */
    public java.lang.CharSequence getLOGTRAFFICLOCKDATE() {
      return LOG_TRAFFIC_LOCK_DATE;
    }


    /**
      * Sets the value of the 'LOG_TRAFFIC_LOCK_DATE' field.
      * @param value The value of 'LOG_TRAFFIC_LOCK_DATE'.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.LOGS.apache.nifi.LNDCDC_NCS_TCS_LOGS.Builder setLOGTRAFFICLOCKDATE(java.lang.CharSequence value) {
      validate(fields()[20], value);
      this.LOG_TRAFFIC_LOCK_DATE = value;
      fieldSetFlags()[20] = true;
      return this;
    }

    /**
      * Checks whether the 'LOG_TRAFFIC_LOCK_DATE' field has been set.
      * @return True if the 'LOG_TRAFFIC_LOCK_DATE' field has been set, false otherwise.
      */
    public boolean hasLOGTRAFFICLOCKDATE() {
      return fieldSetFlags()[20];
    }


    /**
      * Clears the value of the 'LOG_TRAFFIC_LOCK_DATE' field.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.LOGS.apache.nifi.LNDCDC_NCS_TCS_LOGS.Builder clearLOGTRAFFICLOCKDATE() {
      LOG_TRAFFIC_LOCK_DATE = null;
      fieldSetFlags()[20] = false;
      return this;
    }

    /**
      * Gets the value of the 'LOG_GRIPIT_IMPORT_DATE' field.
      * @return The value.
      */
    public java.lang.CharSequence getLOGGRIPITIMPORTDATE() {
      return LOG_GRIPIT_IMPORT_DATE;
    }


    /**
      * Sets the value of the 'LOG_GRIPIT_IMPORT_DATE' field.
      * @param value The value of 'LOG_GRIPIT_IMPORT_DATE'.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.LOGS.apache.nifi.LNDCDC_NCS_TCS_LOGS.Builder setLOGGRIPITIMPORTDATE(java.lang.CharSequence value) {
      validate(fields()[21], value);
      this.LOG_GRIPIT_IMPORT_DATE = value;
      fieldSetFlags()[21] = true;
      return this;
    }

    /**
      * Checks whether the 'LOG_GRIPIT_IMPORT_DATE' field has been set.
      * @return True if the 'LOG_GRIPIT_IMPORT_DATE' field has been set, false otherwise.
      */
    public boolean hasLOGGRIPITIMPORTDATE() {
      return fieldSetFlags()[21];
    }


    /**
      * Clears the value of the 'LOG_GRIPIT_IMPORT_DATE' field.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.LOGS.apache.nifi.LNDCDC_NCS_TCS_LOGS.Builder clearLOGGRIPITIMPORTDATE() {
      LOG_GRIPIT_IMPORT_DATE = null;
      fieldSetFlags()[21] = false;
      return this;
    }

    /**
      * Gets the value of the 'LOG_GRIPIT_IMPORT_TIME' field.
      * @return The value.
      */
    public java.lang.Double getLOGGRIPITIMPORTTIME() {
      return LOG_GRIPIT_IMPORT_TIME;
    }


    /**
      * Sets the value of the 'LOG_GRIPIT_IMPORT_TIME' field.
      * @param value The value of 'LOG_GRIPIT_IMPORT_TIME'.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.LOGS.apache.nifi.LNDCDC_NCS_TCS_LOGS.Builder setLOGGRIPITIMPORTTIME(java.lang.Double value) {
      validate(fields()[22], value);
      this.LOG_GRIPIT_IMPORT_TIME = value;
      fieldSetFlags()[22] = true;
      return this;
    }

    /**
      * Checks whether the 'LOG_GRIPIT_IMPORT_TIME' field has been set.
      * @return True if the 'LOG_GRIPIT_IMPORT_TIME' field has been set, false otherwise.
      */
    public boolean hasLOGGRIPITIMPORTTIME() {
      return fieldSetFlags()[22];
    }


    /**
      * Clears the value of the 'LOG_GRIPIT_IMPORT_TIME' field.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.LOGS.apache.nifi.LNDCDC_NCS_TCS_LOGS.Builder clearLOGGRIPITIMPORTTIME() {
      LOG_GRIPIT_IMPORT_TIME = null;
      fieldSetFlags()[22] = false;
      return this;
    }

    /**
      * Gets the value of the 'LOG_GRIPIT_IMPORT_USER' field.
      * @return The value.
      */
    public java.lang.CharSequence getLOGGRIPITIMPORTUSER() {
      return LOG_GRIPIT_IMPORT_USER;
    }


    /**
      * Sets the value of the 'LOG_GRIPIT_IMPORT_USER' field.
      * @param value The value of 'LOG_GRIPIT_IMPORT_USER'.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.LOGS.apache.nifi.LNDCDC_NCS_TCS_LOGS.Builder setLOGGRIPITIMPORTUSER(java.lang.CharSequence value) {
      validate(fields()[23], value);
      this.LOG_GRIPIT_IMPORT_USER = value;
      fieldSetFlags()[23] = true;
      return this;
    }

    /**
      * Checks whether the 'LOG_GRIPIT_IMPORT_USER' field has been set.
      * @return True if the 'LOG_GRIPIT_IMPORT_USER' field has been set, false otherwise.
      */
    public boolean hasLOGGRIPITIMPORTUSER() {
      return fieldSetFlags()[23];
    }


    /**
      * Clears the value of the 'LOG_GRIPIT_IMPORT_USER' field.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.LOGS.apache.nifi.LNDCDC_NCS_TCS_LOGS.Builder clearLOGGRIPITIMPORTUSER() {
      LOG_GRIPIT_IMPORT_USER = null;
      fieldSetFlags()[23] = false;
      return this;
    }

    /**
      * Gets the value of the 'PLAYLIST_FILE_NUMBER' field.
      * @return The value.
      */
    public java.lang.Double getPLAYLISTFILENUMBER() {
      return PLAYLIST_FILE_NUMBER;
    }


    /**
      * Sets the value of the 'PLAYLIST_FILE_NUMBER' field.
      * @param value The value of 'PLAYLIST_FILE_NUMBER'.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.LOGS.apache.nifi.LNDCDC_NCS_TCS_LOGS.Builder setPLAYLISTFILENUMBER(java.lang.Double value) {
      validate(fields()[24], value);
      this.PLAYLIST_FILE_NUMBER = value;
      fieldSetFlags()[24] = true;
      return this;
    }

    /**
      * Checks whether the 'PLAYLIST_FILE_NUMBER' field has been set.
      * @return True if the 'PLAYLIST_FILE_NUMBER' field has been set, false otherwise.
      */
    public boolean hasPLAYLISTFILENUMBER() {
      return fieldSetFlags()[24];
    }


    /**
      * Clears the value of the 'PLAYLIST_FILE_NUMBER' field.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.LOGS.apache.nifi.LNDCDC_NCS_TCS_LOGS.Builder clearPLAYLISTFILENUMBER() {
      PLAYLIST_FILE_NUMBER = null;
      fieldSetFlags()[24] = false;
      return this;
    }

    /**
      * Gets the value of the 'LOG_READY_FOR_PROMO_IND' field.
      * @return The value.
      */
    public java.lang.CharSequence getLOGREADYFORPROMOIND() {
      return LOG_READY_FOR_PROMO_IND;
    }


    /**
      * Sets the value of the 'LOG_READY_FOR_PROMO_IND' field.
      * @param value The value of 'LOG_READY_FOR_PROMO_IND'.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.LOGS.apache.nifi.LNDCDC_NCS_TCS_LOGS.Builder setLOGREADYFORPROMOIND(java.lang.CharSequence value) {
      validate(fields()[25], value);
      this.LOG_READY_FOR_PROMO_IND = value;
      fieldSetFlags()[25] = true;
      return this;
    }

    /**
      * Checks whether the 'LOG_READY_FOR_PROMO_IND' field has been set.
      * @return True if the 'LOG_READY_FOR_PROMO_IND' field has been set, false otherwise.
      */
    public boolean hasLOGREADYFORPROMOIND() {
      return fieldSetFlags()[25];
    }


    /**
      * Clears the value of the 'LOG_READY_FOR_PROMO_IND' field.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.LOGS.apache.nifi.LNDCDC_NCS_TCS_LOGS.Builder clearLOGREADYFORPROMOIND() {
      LOG_READY_FOR_PROMO_IND = null;
      fieldSetFlags()[25] = false;
      return this;
    }

    /**
      * Gets the value of the 'LOG_DOA_UNLOCK_DATE' field.
      * @return The value.
      */
    public java.lang.CharSequence getLOGDOAUNLOCKDATE() {
      return LOG_DOA_UNLOCK_DATE;
    }


    /**
      * Sets the value of the 'LOG_DOA_UNLOCK_DATE' field.
      * @param value The value of 'LOG_DOA_UNLOCK_DATE'.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.LOGS.apache.nifi.LNDCDC_NCS_TCS_LOGS.Builder setLOGDOAUNLOCKDATE(java.lang.CharSequence value) {
      validate(fields()[26], value);
      this.LOG_DOA_UNLOCK_DATE = value;
      fieldSetFlags()[26] = true;
      return this;
    }

    /**
      * Checks whether the 'LOG_DOA_UNLOCK_DATE' field has been set.
      * @return True if the 'LOG_DOA_UNLOCK_DATE' field has been set, false otherwise.
      */
    public boolean hasLOGDOAUNLOCKDATE() {
      return fieldSetFlags()[26];
    }


    /**
      * Clears the value of the 'LOG_DOA_UNLOCK_DATE' field.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.LOGS.apache.nifi.LNDCDC_NCS_TCS_LOGS.Builder clearLOGDOAUNLOCKDATE() {
      LOG_DOA_UNLOCK_DATE = null;
      fieldSetFlags()[26] = false;
      return this;
    }

    /**
      * Gets the value of the 'LOG_DOA_LOCK_DATE' field.
      * @return The value.
      */
    public java.lang.CharSequence getLOGDOALOCKDATE() {
      return LOG_DOA_LOCK_DATE;
    }


    /**
      * Sets the value of the 'LOG_DOA_LOCK_DATE' field.
      * @param value The value of 'LOG_DOA_LOCK_DATE'.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.LOGS.apache.nifi.LNDCDC_NCS_TCS_LOGS.Builder setLOGDOALOCKDATE(java.lang.CharSequence value) {
      validate(fields()[27], value);
      this.LOG_DOA_LOCK_DATE = value;
      fieldSetFlags()[27] = true;
      return this;
    }

    /**
      * Checks whether the 'LOG_DOA_LOCK_DATE' field has been set.
      * @return True if the 'LOG_DOA_LOCK_DATE' field has been set, false otherwise.
      */
    public boolean hasLOGDOALOCKDATE() {
      return fieldSetFlags()[27];
    }


    /**
      * Clears the value of the 'LOG_DOA_LOCK_DATE' field.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.LOGS.apache.nifi.LNDCDC_NCS_TCS_LOGS.Builder clearLOGDOALOCKDATE() {
      LOG_DOA_LOCK_DATE = null;
      fieldSetFlags()[27] = false;
      return this;
    }

    /**
      * Gets the value of the 'DOA_LOCK_USER' field.
      * @return The value.
      */
    public java.lang.CharSequence getDOALOCKUSER() {
      return DOA_LOCK_USER;
    }


    /**
      * Sets the value of the 'DOA_LOCK_USER' field.
      * @param value The value of 'DOA_LOCK_USER'.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.LOGS.apache.nifi.LNDCDC_NCS_TCS_LOGS.Builder setDOALOCKUSER(java.lang.CharSequence value) {
      validate(fields()[28], value);
      this.DOA_LOCK_USER = value;
      fieldSetFlags()[28] = true;
      return this;
    }

    /**
      * Checks whether the 'DOA_LOCK_USER' field has been set.
      * @return True if the 'DOA_LOCK_USER' field has been set, false otherwise.
      */
    public boolean hasDOALOCKUSER() {
      return fieldSetFlags()[28];
    }


    /**
      * Clears the value of the 'DOA_LOCK_USER' field.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.LOGS.apache.nifi.LNDCDC_NCS_TCS_LOGS.Builder clearDOALOCKUSER() {
      DOA_LOCK_USER = null;
      fieldSetFlags()[28] = false;
      return this;
    }

    /**
      * Gets the value of the 'LOG_DOA_OPEN_DATE' field.
      * @return The value.
      */
    public java.lang.CharSequence getLOGDOAOPENDATE() {
      return LOG_DOA_OPEN_DATE;
    }


    /**
      * Sets the value of the 'LOG_DOA_OPEN_DATE' field.
      * @param value The value of 'LOG_DOA_OPEN_DATE'.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.LOGS.apache.nifi.LNDCDC_NCS_TCS_LOGS.Builder setLOGDOAOPENDATE(java.lang.CharSequence value) {
      validate(fields()[29], value);
      this.LOG_DOA_OPEN_DATE = value;
      fieldSetFlags()[29] = true;
      return this;
    }

    /**
      * Checks whether the 'LOG_DOA_OPEN_DATE' field has been set.
      * @return True if the 'LOG_DOA_OPEN_DATE' field has been set, false otherwise.
      */
    public boolean hasLOGDOAOPENDATE() {
      return fieldSetFlags()[29];
    }


    /**
      * Clears the value of the 'LOG_DOA_OPEN_DATE' field.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.LOGS.apache.nifi.LNDCDC_NCS_TCS_LOGS.Builder clearLOGDOAOPENDATE() {
      LOG_DOA_OPEN_DATE = null;
      fieldSetFlags()[29] = false;
      return this;
    }

    /**
      * Gets the value of the 'CDC_KEY' field.
      * @return The value.
      */
    public java.lang.Double getCDCKEY() {
      return CDC_KEY;
    }


    /**
      * Sets the value of the 'CDC_KEY' field.
      * @param value The value of 'CDC_KEY'.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.LOGS.apache.nifi.LNDCDC_NCS_TCS_LOGS.Builder setCDCKEY(java.lang.Double value) {
      validate(fields()[30], value);
      this.CDC_KEY = value;
      fieldSetFlags()[30] = true;
      return this;
    }

    /**
      * Checks whether the 'CDC_KEY' field has been set.
      * @return True if the 'CDC_KEY' field has been set, false otherwise.
      */
    public boolean hasCDCKEY() {
      return fieldSetFlags()[30];
    }


    /**
      * Clears the value of the 'CDC_KEY' field.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.LOGS.apache.nifi.LNDCDC_NCS_TCS_LOGS.Builder clearCDCKEY() {
      CDC_KEY = null;
      fieldSetFlags()[30] = false;
      return this;
    }

    /**
      * Gets the value of the 'LOG_AUDIO_PROMO_FINAL_LOG_DATE' field.
      * @return The value.
      */
    public java.lang.CharSequence getLOGAUDIOPROMOFINALLOGDATE() {
      return LOG_AUDIO_PROMO_FINAL_LOG_DATE;
    }


    /**
      * Sets the value of the 'LOG_AUDIO_PROMO_FINAL_LOG_DATE' field.
      * @param value The value of 'LOG_AUDIO_PROMO_FINAL_LOG_DATE'.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.LOGS.apache.nifi.LNDCDC_NCS_TCS_LOGS.Builder setLOGAUDIOPROMOFINALLOGDATE(java.lang.CharSequence value) {
      validate(fields()[31], value);
      this.LOG_AUDIO_PROMO_FINAL_LOG_DATE = value;
      fieldSetFlags()[31] = true;
      return this;
    }

    /**
      * Checks whether the 'LOG_AUDIO_PROMO_FINAL_LOG_DATE' field has been set.
      * @return True if the 'LOG_AUDIO_PROMO_FINAL_LOG_DATE' field has been set, false otherwise.
      */
    public boolean hasLOGAUDIOPROMOFINALLOGDATE() {
      return fieldSetFlags()[31];
    }


    /**
      * Clears the value of the 'LOG_AUDIO_PROMO_FINAL_LOG_DATE' field.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.LOGS.apache.nifi.LNDCDC_NCS_TCS_LOGS.Builder clearLOGAUDIOPROMOFINALLOGDATE() {
      LOG_AUDIO_PROMO_FINAL_LOG_DATE = null;
      fieldSetFlags()[31] = false;
      return this;
    }

    /**
      * Gets the value of the 'SRC_KEY_VAL' field.
      * @return The value.
      */
    public java.lang.CharSequence getSRCKEYVAL() {
      return SRC_KEY_VAL;
    }


    /**
      * Sets the value of the 'SRC_KEY_VAL' field.
      * @param value The value of 'SRC_KEY_VAL'.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.LOGS.apache.nifi.LNDCDC_NCS_TCS_LOGS.Builder setSRCKEYVAL(java.lang.CharSequence value) {
      validate(fields()[32], value);
      this.SRC_KEY_VAL = value;
      fieldSetFlags()[32] = true;
      return this;
    }

    /**
      * Checks whether the 'SRC_KEY_VAL' field has been set.
      * @return True if the 'SRC_KEY_VAL' field has been set, false otherwise.
      */
    public boolean hasSRCKEYVAL() {
      return fieldSetFlags()[32];
    }


    /**
      * Clears the value of the 'SRC_KEY_VAL' field.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.LOGS.apache.nifi.LNDCDC_NCS_TCS_LOGS.Builder clearSRCKEYVAL() {
      SRC_KEY_VAL = null;
      fieldSetFlags()[32] = false;
      return this;
    }

    /**
      * Gets the value of the 'SRC_CDC_OPER_NM' field.
      * @return The value.
      */
    public java.lang.CharSequence getSRCCDCOPERNM() {
      return SRC_CDC_OPER_NM;
    }


    /**
      * Sets the value of the 'SRC_CDC_OPER_NM' field.
      * @param value The value of 'SRC_CDC_OPER_NM'.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.LOGS.apache.nifi.LNDCDC_NCS_TCS_LOGS.Builder setSRCCDCOPERNM(java.lang.CharSequence value) {
      validate(fields()[33], value);
      this.SRC_CDC_OPER_NM = value;
      fieldSetFlags()[33] = true;
      return this;
    }

    /**
      * Checks whether the 'SRC_CDC_OPER_NM' field has been set.
      * @return True if the 'SRC_CDC_OPER_NM' field has been set, false otherwise.
      */
    public boolean hasSRCCDCOPERNM() {
      return fieldSetFlags()[33];
    }


    /**
      * Clears the value of the 'SRC_CDC_OPER_NM' field.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.LOGS.apache.nifi.LNDCDC_NCS_TCS_LOGS.Builder clearSRCCDCOPERNM() {
      SRC_CDC_OPER_NM = null;
      fieldSetFlags()[33] = false;
      return this;
    }

    /**
      * Gets the value of the 'SRC_COMMIT_DT_UTC' field.
      * @return The value.
      */
    public java.lang.CharSequence getSRCCOMMITDTUTC() {
      return SRC_COMMIT_DT_UTC;
    }


    /**
      * Sets the value of the 'SRC_COMMIT_DT_UTC' field.
      * @param value The value of 'SRC_COMMIT_DT_UTC'.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.LOGS.apache.nifi.LNDCDC_NCS_TCS_LOGS.Builder setSRCCOMMITDTUTC(java.lang.CharSequence value) {
      validate(fields()[34], value);
      this.SRC_COMMIT_DT_UTC = value;
      fieldSetFlags()[34] = true;
      return this;
    }

    /**
      * Checks whether the 'SRC_COMMIT_DT_UTC' field has been set.
      * @return True if the 'SRC_COMMIT_DT_UTC' field has been set, false otherwise.
      */
    public boolean hasSRCCOMMITDTUTC() {
      return fieldSetFlags()[34];
    }


    /**
      * Clears the value of the 'SRC_COMMIT_DT_UTC' field.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.LOGS.apache.nifi.LNDCDC_NCS_TCS_LOGS.Builder clearSRCCOMMITDTUTC() {
      SRC_COMMIT_DT_UTC = null;
      fieldSetFlags()[34] = false;
      return this;
    }

    /**
      * Gets the value of the 'TRG_CRT_DT_PART_UTC' field.
      * @return The value.
      */
    public java.lang.CharSequence getTRGCRTDTPARTUTC() {
      return TRG_CRT_DT_PART_UTC;
    }


    /**
      * Sets the value of the 'TRG_CRT_DT_PART_UTC' field.
      * @param value The value of 'TRG_CRT_DT_PART_UTC'.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.LOGS.apache.nifi.LNDCDC_NCS_TCS_LOGS.Builder setTRGCRTDTPARTUTC(java.lang.CharSequence value) {
      validate(fields()[35], value);
      this.TRG_CRT_DT_PART_UTC = value;
      fieldSetFlags()[35] = true;
      return this;
    }

    /**
      * Checks whether the 'TRG_CRT_DT_PART_UTC' field has been set.
      * @return True if the 'TRG_CRT_DT_PART_UTC' field has been set, false otherwise.
      */
    public boolean hasTRGCRTDTPARTUTC() {
      return fieldSetFlags()[35];
    }


    /**
      * Clears the value of the 'TRG_CRT_DT_PART_UTC' field.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.LOGS.apache.nifi.LNDCDC_NCS_TCS_LOGS.Builder clearTRGCRTDTPARTUTC() {
      TRG_CRT_DT_PART_UTC = null;
      fieldSetFlags()[35] = false;
      return this;
    }

    /**
      * Gets the value of the 'SRC_SCHEMA_NM' field.
      * @return The value.
      */
    public java.lang.CharSequence getSRCSCHEMANM() {
      return SRC_SCHEMA_NM;
    }


    /**
      * Sets the value of the 'SRC_SCHEMA_NM' field.
      * @param value The value of 'SRC_SCHEMA_NM'.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.LOGS.apache.nifi.LNDCDC_NCS_TCS_LOGS.Builder setSRCSCHEMANM(java.lang.CharSequence value) {
      validate(fields()[36], value);
      this.SRC_SCHEMA_NM = value;
      fieldSetFlags()[36] = true;
      return this;
    }

    /**
      * Checks whether the 'SRC_SCHEMA_NM' field has been set.
      * @return True if the 'SRC_SCHEMA_NM' field has been set, false otherwise.
      */
    public boolean hasSRCSCHEMANM() {
      return fieldSetFlags()[36];
    }


    /**
      * Clears the value of the 'SRC_SCHEMA_NM' field.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.LOGS.apache.nifi.LNDCDC_NCS_TCS_LOGS.Builder clearSRCSCHEMANM() {
      SRC_SCHEMA_NM = null;
      fieldSetFlags()[36] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public LNDCDC_NCS_TCS_LOGS build() {
      try {
        LNDCDC_NCS_TCS_LOGS record = new LNDCDC_NCS_TCS_LOGS();
        record.LOG_DATE = fieldSetFlags()[0] ? this.LOG_DATE : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.LOG_NUMBER = fieldSetFlags()[1] ? this.LOG_NUMBER : (java.lang.Long) defaultValue(fields()[1]);
        record.LOG_NETWORK = fieldSetFlags()[2] ? this.LOG_NETWORK : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.LOG_PRE_LOG_DATE = fieldSetFlags()[3] ? this.LOG_PRE_LOG_DATE : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.LOG_PRE_LOG_TIME = fieldSetFlags()[4] ? this.LOG_PRE_LOG_TIME : (java.lang.Long) defaultValue(fields()[4]);
        record.LOG_FINAL_LOG_DATE = fieldSetFlags()[5] ? this.LOG_FINAL_LOG_DATE : (java.lang.CharSequence) defaultValue(fields()[5]);
        record.LOG_INVOICE_DATE = fieldSetFlags()[6] ? this.LOG_INVOICE_DATE : (java.lang.CharSequence) defaultValue(fields()[6]);
        record.LOG_MASTER_LOG_DATE = fieldSetFlags()[7] ? this.LOG_MASTER_LOG_DATE : (java.lang.CharSequence) defaultValue(fields()[7]);
        record.LOG_FINAL_LOG_TIME = fieldSetFlags()[8] ? this.LOG_FINAL_LOG_TIME : (java.lang.Long) defaultValue(fields()[8]);
        record.LOG_PROMO_SLOT_DATE = fieldSetFlags()[9] ? this.LOG_PROMO_SLOT_DATE : (java.lang.CharSequence) defaultValue(fields()[9]);
        record.LOG_TRAFFIC_SLOT_DATE = fieldSetFlags()[10] ? this.LOG_TRAFFIC_SLOT_DATE : (java.lang.CharSequence) defaultValue(fields()[10]);
        record.LOG_EPI_ACTUALIZED_DATE = fieldSetFlags()[11] ? this.LOG_EPI_ACTUALIZED_DATE : (java.lang.CharSequence) defaultValue(fields()[11]);
        record.LOG_TAPE_REVIEW_DATE = fieldSetFlags()[12] ? this.LOG_TAPE_REVIEW_DATE : (java.lang.CharSequence) defaultValue(fields()[12]);
        record.LOG_FINANCE_CLOSE_DATE = fieldSetFlags()[13] ? this.LOG_FINANCE_CLOSE_DATE : (java.lang.CharSequence) defaultValue(fields()[13]);
        record.LOG_PROMO_FINAL_LOG_DATE = fieldSetFlags()[14] ? this.LOG_PROMO_FINAL_LOG_DATE : (java.lang.CharSequence) defaultValue(fields()[14]);
        record.LOG_PROMO_FINAL_LOG_TIME = fieldSetFlags()[15] ? this.LOG_PROMO_FINAL_LOG_TIME : (java.lang.Long) defaultValue(fields()[15]);
        record.LOG_DOA_RELEASE_DT = fieldSetFlags()[16] ? this.LOG_DOA_RELEASE_DT : (java.lang.CharSequence) defaultValue(fields()[16]);
        record.LOG_DOA_REVISION = fieldSetFlags()[17] ? this.LOG_DOA_REVISION : (java.lang.Long) defaultValue(fields()[17]);
        record.LOG_GC_RELEASE_DT = fieldSetFlags()[18] ? this.LOG_GC_RELEASE_DT : (java.lang.CharSequence) defaultValue(fields()[18]);
        record.LOG_GC_REVISION = fieldSetFlags()[19] ? this.LOG_GC_REVISION : (java.lang.Long) defaultValue(fields()[19]);
        record.LOG_TRAFFIC_LOCK_DATE = fieldSetFlags()[20] ? this.LOG_TRAFFIC_LOCK_DATE : (java.lang.CharSequence) defaultValue(fields()[20]);
        record.LOG_GRIPIT_IMPORT_DATE = fieldSetFlags()[21] ? this.LOG_GRIPIT_IMPORT_DATE : (java.lang.CharSequence) defaultValue(fields()[21]);
        record.LOG_GRIPIT_IMPORT_TIME = fieldSetFlags()[22] ? this.LOG_GRIPIT_IMPORT_TIME : (java.lang.Double) defaultValue(fields()[22]);
        record.LOG_GRIPIT_IMPORT_USER = fieldSetFlags()[23] ? this.LOG_GRIPIT_IMPORT_USER : (java.lang.CharSequence) defaultValue(fields()[23]);
        record.PLAYLIST_FILE_NUMBER = fieldSetFlags()[24] ? this.PLAYLIST_FILE_NUMBER : (java.lang.Double) defaultValue(fields()[24]);
        record.LOG_READY_FOR_PROMO_IND = fieldSetFlags()[25] ? this.LOG_READY_FOR_PROMO_IND : (java.lang.CharSequence) defaultValue(fields()[25]);
        record.LOG_DOA_UNLOCK_DATE = fieldSetFlags()[26] ? this.LOG_DOA_UNLOCK_DATE : (java.lang.CharSequence) defaultValue(fields()[26]);
        record.LOG_DOA_LOCK_DATE = fieldSetFlags()[27] ? this.LOG_DOA_LOCK_DATE : (java.lang.CharSequence) defaultValue(fields()[27]);
        record.DOA_LOCK_USER = fieldSetFlags()[28] ? this.DOA_LOCK_USER : (java.lang.CharSequence) defaultValue(fields()[28]);
        record.LOG_DOA_OPEN_DATE = fieldSetFlags()[29] ? this.LOG_DOA_OPEN_DATE : (java.lang.CharSequence) defaultValue(fields()[29]);
        record.CDC_KEY = fieldSetFlags()[30] ? this.CDC_KEY : (java.lang.Double) defaultValue(fields()[30]);
        record.LOG_AUDIO_PROMO_FINAL_LOG_DATE = fieldSetFlags()[31] ? this.LOG_AUDIO_PROMO_FINAL_LOG_DATE : (java.lang.CharSequence) defaultValue(fields()[31]);
        record.SRC_KEY_VAL = fieldSetFlags()[32] ? this.SRC_KEY_VAL : (java.lang.CharSequence) defaultValue(fields()[32]);
        record.SRC_CDC_OPER_NM = fieldSetFlags()[33] ? this.SRC_CDC_OPER_NM : (java.lang.CharSequence) defaultValue(fields()[33]);
        record.SRC_COMMIT_DT_UTC = fieldSetFlags()[34] ? this.SRC_COMMIT_DT_UTC : (java.lang.CharSequence) defaultValue(fields()[34]);
        record.TRG_CRT_DT_PART_UTC = fieldSetFlags()[35] ? this.TRG_CRT_DT_PART_UTC : (java.lang.CharSequence) defaultValue(fields()[35]);
        record.SRC_SCHEMA_NM = fieldSetFlags()[36] ? this.SRC_SCHEMA_NM : (java.lang.CharSequence) defaultValue(fields()[36]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<LNDCDC_NCS_TCS_LOGS>
    WRITER$ = (org.apache.avro.io.DatumWriter<LNDCDC_NCS_TCS_LOGS>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<LNDCDC_NCS_TCS_LOGS>
    READER$ = (org.apache.avro.io.DatumReader<LNDCDC_NCS_TCS_LOGS>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    if (this.LOG_DATE == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.LOG_DATE);
    }

    if (this.LOG_NUMBER == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeLong(this.LOG_NUMBER);
    }

    if (this.LOG_NETWORK == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.LOG_NETWORK);
    }

    if (this.LOG_PRE_LOG_DATE == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.LOG_PRE_LOG_DATE);
    }

    if (this.LOG_PRE_LOG_TIME == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeLong(this.LOG_PRE_LOG_TIME);
    }

    if (this.LOG_FINAL_LOG_DATE == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.LOG_FINAL_LOG_DATE);
    }

    if (this.LOG_INVOICE_DATE == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.LOG_INVOICE_DATE);
    }

    if (this.LOG_MASTER_LOG_DATE == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.LOG_MASTER_LOG_DATE);
    }

    if (this.LOG_FINAL_LOG_TIME == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeLong(this.LOG_FINAL_LOG_TIME);
    }

    if (this.LOG_PROMO_SLOT_DATE == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.LOG_PROMO_SLOT_DATE);
    }

    if (this.LOG_TRAFFIC_SLOT_DATE == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.LOG_TRAFFIC_SLOT_DATE);
    }

    if (this.LOG_EPI_ACTUALIZED_DATE == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.LOG_EPI_ACTUALIZED_DATE);
    }

    if (this.LOG_TAPE_REVIEW_DATE == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.LOG_TAPE_REVIEW_DATE);
    }

    if (this.LOG_FINANCE_CLOSE_DATE == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.LOG_FINANCE_CLOSE_DATE);
    }

    if (this.LOG_PROMO_FINAL_LOG_DATE == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.LOG_PROMO_FINAL_LOG_DATE);
    }

    if (this.LOG_PROMO_FINAL_LOG_TIME == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeLong(this.LOG_PROMO_FINAL_LOG_TIME);
    }

    if (this.LOG_DOA_RELEASE_DT == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.LOG_DOA_RELEASE_DT);
    }

    if (this.LOG_DOA_REVISION == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeLong(this.LOG_DOA_REVISION);
    }

    if (this.LOG_GC_RELEASE_DT == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.LOG_GC_RELEASE_DT);
    }

    if (this.LOG_GC_REVISION == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeLong(this.LOG_GC_REVISION);
    }

    if (this.LOG_TRAFFIC_LOCK_DATE == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.LOG_TRAFFIC_LOCK_DATE);
    }

    if (this.LOG_GRIPIT_IMPORT_DATE == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.LOG_GRIPIT_IMPORT_DATE);
    }

    if (this.LOG_GRIPIT_IMPORT_TIME == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeDouble(this.LOG_GRIPIT_IMPORT_TIME);
    }

    if (this.LOG_GRIPIT_IMPORT_USER == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.LOG_GRIPIT_IMPORT_USER);
    }

    if (this.PLAYLIST_FILE_NUMBER == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeDouble(this.PLAYLIST_FILE_NUMBER);
    }

    if (this.LOG_READY_FOR_PROMO_IND == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.LOG_READY_FOR_PROMO_IND);
    }

    if (this.LOG_DOA_UNLOCK_DATE == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.LOG_DOA_UNLOCK_DATE);
    }

    if (this.LOG_DOA_LOCK_DATE == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.LOG_DOA_LOCK_DATE);
    }

    if (this.DOA_LOCK_USER == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.DOA_LOCK_USER);
    }

    if (this.LOG_DOA_OPEN_DATE == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.LOG_DOA_OPEN_DATE);
    }

    if (this.CDC_KEY == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeDouble(this.CDC_KEY);
    }

    if (this.LOG_AUDIO_PROMO_FINAL_LOG_DATE == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.LOG_AUDIO_PROMO_FINAL_LOG_DATE);
    }

    out.writeString(this.SRC_KEY_VAL);

    out.writeString(this.SRC_CDC_OPER_NM);

    out.writeString(this.SRC_COMMIT_DT_UTC);

    out.writeString(this.TRG_CRT_DT_PART_UTC);

    out.writeString(this.SRC_SCHEMA_NM);

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      if (in.readIndex() != 1) {
        in.readNull();
        this.LOG_DATE = null;
      } else {
        this.LOG_DATE = in.readString(this.LOG_DATE instanceof Utf8 ? (Utf8)this.LOG_DATE : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.LOG_NUMBER = null;
      } else {
        this.LOG_NUMBER = in.readLong();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.LOG_NETWORK = null;
      } else {
        this.LOG_NETWORK = in.readString(this.LOG_NETWORK instanceof Utf8 ? (Utf8)this.LOG_NETWORK : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.LOG_PRE_LOG_DATE = null;
      } else {
        this.LOG_PRE_LOG_DATE = in.readString(this.LOG_PRE_LOG_DATE instanceof Utf8 ? (Utf8)this.LOG_PRE_LOG_DATE : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.LOG_PRE_LOG_TIME = null;
      } else {
        this.LOG_PRE_LOG_TIME = in.readLong();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.LOG_FINAL_LOG_DATE = null;
      } else {
        this.LOG_FINAL_LOG_DATE = in.readString(this.LOG_FINAL_LOG_DATE instanceof Utf8 ? (Utf8)this.LOG_FINAL_LOG_DATE : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.LOG_INVOICE_DATE = null;
      } else {
        this.LOG_INVOICE_DATE = in.readString(this.LOG_INVOICE_DATE instanceof Utf8 ? (Utf8)this.LOG_INVOICE_DATE : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.LOG_MASTER_LOG_DATE = null;
      } else {
        this.LOG_MASTER_LOG_DATE = in.readString(this.LOG_MASTER_LOG_DATE instanceof Utf8 ? (Utf8)this.LOG_MASTER_LOG_DATE : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.LOG_FINAL_LOG_TIME = null;
      } else {
        this.LOG_FINAL_LOG_TIME = in.readLong();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.LOG_PROMO_SLOT_DATE = null;
      } else {
        this.LOG_PROMO_SLOT_DATE = in.readString(this.LOG_PROMO_SLOT_DATE instanceof Utf8 ? (Utf8)this.LOG_PROMO_SLOT_DATE : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.LOG_TRAFFIC_SLOT_DATE = null;
      } else {
        this.LOG_TRAFFIC_SLOT_DATE = in.readString(this.LOG_TRAFFIC_SLOT_DATE instanceof Utf8 ? (Utf8)this.LOG_TRAFFIC_SLOT_DATE : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.LOG_EPI_ACTUALIZED_DATE = null;
      } else {
        this.LOG_EPI_ACTUALIZED_DATE = in.readString(this.LOG_EPI_ACTUALIZED_DATE instanceof Utf8 ? (Utf8)this.LOG_EPI_ACTUALIZED_DATE : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.LOG_TAPE_REVIEW_DATE = null;
      } else {
        this.LOG_TAPE_REVIEW_DATE = in.readString(this.LOG_TAPE_REVIEW_DATE instanceof Utf8 ? (Utf8)this.LOG_TAPE_REVIEW_DATE : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.LOG_FINANCE_CLOSE_DATE = null;
      } else {
        this.LOG_FINANCE_CLOSE_DATE = in.readString(this.LOG_FINANCE_CLOSE_DATE instanceof Utf8 ? (Utf8)this.LOG_FINANCE_CLOSE_DATE : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.LOG_PROMO_FINAL_LOG_DATE = null;
      } else {
        this.LOG_PROMO_FINAL_LOG_DATE = in.readString(this.LOG_PROMO_FINAL_LOG_DATE instanceof Utf8 ? (Utf8)this.LOG_PROMO_FINAL_LOG_DATE : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.LOG_PROMO_FINAL_LOG_TIME = null;
      } else {
        this.LOG_PROMO_FINAL_LOG_TIME = in.readLong();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.LOG_DOA_RELEASE_DT = null;
      } else {
        this.LOG_DOA_RELEASE_DT = in.readString(this.LOG_DOA_RELEASE_DT instanceof Utf8 ? (Utf8)this.LOG_DOA_RELEASE_DT : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.LOG_DOA_REVISION = null;
      } else {
        this.LOG_DOA_REVISION = in.readLong();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.LOG_GC_RELEASE_DT = null;
      } else {
        this.LOG_GC_RELEASE_DT = in.readString(this.LOG_GC_RELEASE_DT instanceof Utf8 ? (Utf8)this.LOG_GC_RELEASE_DT : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.LOG_GC_REVISION = null;
      } else {
        this.LOG_GC_REVISION = in.readLong();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.LOG_TRAFFIC_LOCK_DATE = null;
      } else {
        this.LOG_TRAFFIC_LOCK_DATE = in.readString(this.LOG_TRAFFIC_LOCK_DATE instanceof Utf8 ? (Utf8)this.LOG_TRAFFIC_LOCK_DATE : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.LOG_GRIPIT_IMPORT_DATE = null;
      } else {
        this.LOG_GRIPIT_IMPORT_DATE = in.readString(this.LOG_GRIPIT_IMPORT_DATE instanceof Utf8 ? (Utf8)this.LOG_GRIPIT_IMPORT_DATE : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.LOG_GRIPIT_IMPORT_TIME = null;
      } else {
        this.LOG_GRIPIT_IMPORT_TIME = in.readDouble();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.LOG_GRIPIT_IMPORT_USER = null;
      } else {
        this.LOG_GRIPIT_IMPORT_USER = in.readString(this.LOG_GRIPIT_IMPORT_USER instanceof Utf8 ? (Utf8)this.LOG_GRIPIT_IMPORT_USER : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.PLAYLIST_FILE_NUMBER = null;
      } else {
        this.PLAYLIST_FILE_NUMBER = in.readDouble();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.LOG_READY_FOR_PROMO_IND = null;
      } else {
        this.LOG_READY_FOR_PROMO_IND = in.readString(this.LOG_READY_FOR_PROMO_IND instanceof Utf8 ? (Utf8)this.LOG_READY_FOR_PROMO_IND : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.LOG_DOA_UNLOCK_DATE = null;
      } else {
        this.LOG_DOA_UNLOCK_DATE = in.readString(this.LOG_DOA_UNLOCK_DATE instanceof Utf8 ? (Utf8)this.LOG_DOA_UNLOCK_DATE : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.LOG_DOA_LOCK_DATE = null;
      } else {
        this.LOG_DOA_LOCK_DATE = in.readString(this.LOG_DOA_LOCK_DATE instanceof Utf8 ? (Utf8)this.LOG_DOA_LOCK_DATE : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.DOA_LOCK_USER = null;
      } else {
        this.DOA_LOCK_USER = in.readString(this.DOA_LOCK_USER instanceof Utf8 ? (Utf8)this.DOA_LOCK_USER : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.LOG_DOA_OPEN_DATE = null;
      } else {
        this.LOG_DOA_OPEN_DATE = in.readString(this.LOG_DOA_OPEN_DATE instanceof Utf8 ? (Utf8)this.LOG_DOA_OPEN_DATE : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.CDC_KEY = null;
      } else {
        this.CDC_KEY = in.readDouble();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.LOG_AUDIO_PROMO_FINAL_LOG_DATE = null;
      } else {
        this.LOG_AUDIO_PROMO_FINAL_LOG_DATE = in.readString(this.LOG_AUDIO_PROMO_FINAL_LOG_DATE instanceof Utf8 ? (Utf8)this.LOG_AUDIO_PROMO_FINAL_LOG_DATE : null);
      }

      this.SRC_KEY_VAL = in.readString(this.SRC_KEY_VAL instanceof Utf8 ? (Utf8)this.SRC_KEY_VAL : null);

      this.SRC_CDC_OPER_NM = in.readString(this.SRC_CDC_OPER_NM instanceof Utf8 ? (Utf8)this.SRC_CDC_OPER_NM : null);

      this.SRC_COMMIT_DT_UTC = in.readString(this.SRC_COMMIT_DT_UTC instanceof Utf8 ? (Utf8)this.SRC_COMMIT_DT_UTC : null);

      this.TRG_CRT_DT_PART_UTC = in.readString(this.TRG_CRT_DT_PART_UTC instanceof Utf8 ? (Utf8)this.TRG_CRT_DT_PART_UTC : null);

      this.SRC_SCHEMA_NM = in.readString(this.SRC_SCHEMA_NM instanceof Utf8 ? (Utf8)this.SRC_SCHEMA_NM : null);

    } else {
      for (int i = 0; i < 37; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          if (in.readIndex() != 1) {
            in.readNull();
            this.LOG_DATE = null;
          } else {
            this.LOG_DATE = in.readString(this.LOG_DATE instanceof Utf8 ? (Utf8)this.LOG_DATE : null);
          }
          break;

        case 1:
          if (in.readIndex() != 1) {
            in.readNull();
            this.LOG_NUMBER = null;
          } else {
            this.LOG_NUMBER = in.readLong();
          }
          break;

        case 2:
          if (in.readIndex() != 1) {
            in.readNull();
            this.LOG_NETWORK = null;
          } else {
            this.LOG_NETWORK = in.readString(this.LOG_NETWORK instanceof Utf8 ? (Utf8)this.LOG_NETWORK : null);
          }
          break;

        case 3:
          if (in.readIndex() != 1) {
            in.readNull();
            this.LOG_PRE_LOG_DATE = null;
          } else {
            this.LOG_PRE_LOG_DATE = in.readString(this.LOG_PRE_LOG_DATE instanceof Utf8 ? (Utf8)this.LOG_PRE_LOG_DATE : null);
          }
          break;

        case 4:
          if (in.readIndex() != 1) {
            in.readNull();
            this.LOG_PRE_LOG_TIME = null;
          } else {
            this.LOG_PRE_LOG_TIME = in.readLong();
          }
          break;

        case 5:
          if (in.readIndex() != 1) {
            in.readNull();
            this.LOG_FINAL_LOG_DATE = null;
          } else {
            this.LOG_FINAL_LOG_DATE = in.readString(this.LOG_FINAL_LOG_DATE instanceof Utf8 ? (Utf8)this.LOG_FINAL_LOG_DATE : null);
          }
          break;

        case 6:
          if (in.readIndex() != 1) {
            in.readNull();
            this.LOG_INVOICE_DATE = null;
          } else {
            this.LOG_INVOICE_DATE = in.readString(this.LOG_INVOICE_DATE instanceof Utf8 ? (Utf8)this.LOG_INVOICE_DATE : null);
          }
          break;

        case 7:
          if (in.readIndex() != 1) {
            in.readNull();
            this.LOG_MASTER_LOG_DATE = null;
          } else {
            this.LOG_MASTER_LOG_DATE = in.readString(this.LOG_MASTER_LOG_DATE instanceof Utf8 ? (Utf8)this.LOG_MASTER_LOG_DATE : null);
          }
          break;

        case 8:
          if (in.readIndex() != 1) {
            in.readNull();
            this.LOG_FINAL_LOG_TIME = null;
          } else {
            this.LOG_FINAL_LOG_TIME = in.readLong();
          }
          break;

        case 9:
          if (in.readIndex() != 1) {
            in.readNull();
            this.LOG_PROMO_SLOT_DATE = null;
          } else {
            this.LOG_PROMO_SLOT_DATE = in.readString(this.LOG_PROMO_SLOT_DATE instanceof Utf8 ? (Utf8)this.LOG_PROMO_SLOT_DATE : null);
          }
          break;

        case 10:
          if (in.readIndex() != 1) {
            in.readNull();
            this.LOG_TRAFFIC_SLOT_DATE = null;
          } else {
            this.LOG_TRAFFIC_SLOT_DATE = in.readString(this.LOG_TRAFFIC_SLOT_DATE instanceof Utf8 ? (Utf8)this.LOG_TRAFFIC_SLOT_DATE : null);
          }
          break;

        case 11:
          if (in.readIndex() != 1) {
            in.readNull();
            this.LOG_EPI_ACTUALIZED_DATE = null;
          } else {
            this.LOG_EPI_ACTUALIZED_DATE = in.readString(this.LOG_EPI_ACTUALIZED_DATE instanceof Utf8 ? (Utf8)this.LOG_EPI_ACTUALIZED_DATE : null);
          }
          break;

        case 12:
          if (in.readIndex() != 1) {
            in.readNull();
            this.LOG_TAPE_REVIEW_DATE = null;
          } else {
            this.LOG_TAPE_REVIEW_DATE = in.readString(this.LOG_TAPE_REVIEW_DATE instanceof Utf8 ? (Utf8)this.LOG_TAPE_REVIEW_DATE : null);
          }
          break;

        case 13:
          if (in.readIndex() != 1) {
            in.readNull();
            this.LOG_FINANCE_CLOSE_DATE = null;
          } else {
            this.LOG_FINANCE_CLOSE_DATE = in.readString(this.LOG_FINANCE_CLOSE_DATE instanceof Utf8 ? (Utf8)this.LOG_FINANCE_CLOSE_DATE : null);
          }
          break;

        case 14:
          if (in.readIndex() != 1) {
            in.readNull();
            this.LOG_PROMO_FINAL_LOG_DATE = null;
          } else {
            this.LOG_PROMO_FINAL_LOG_DATE = in.readString(this.LOG_PROMO_FINAL_LOG_DATE instanceof Utf8 ? (Utf8)this.LOG_PROMO_FINAL_LOG_DATE : null);
          }
          break;

        case 15:
          if (in.readIndex() != 1) {
            in.readNull();
            this.LOG_PROMO_FINAL_LOG_TIME = null;
          } else {
            this.LOG_PROMO_FINAL_LOG_TIME = in.readLong();
          }
          break;

        case 16:
          if (in.readIndex() != 1) {
            in.readNull();
            this.LOG_DOA_RELEASE_DT = null;
          } else {
            this.LOG_DOA_RELEASE_DT = in.readString(this.LOG_DOA_RELEASE_DT instanceof Utf8 ? (Utf8)this.LOG_DOA_RELEASE_DT : null);
          }
          break;

        case 17:
          if (in.readIndex() != 1) {
            in.readNull();
            this.LOG_DOA_REVISION = null;
          } else {
            this.LOG_DOA_REVISION = in.readLong();
          }
          break;

        case 18:
          if (in.readIndex() != 1) {
            in.readNull();
            this.LOG_GC_RELEASE_DT = null;
          } else {
            this.LOG_GC_RELEASE_DT = in.readString(this.LOG_GC_RELEASE_DT instanceof Utf8 ? (Utf8)this.LOG_GC_RELEASE_DT : null);
          }
          break;

        case 19:
          if (in.readIndex() != 1) {
            in.readNull();
            this.LOG_GC_REVISION = null;
          } else {
            this.LOG_GC_REVISION = in.readLong();
          }
          break;

        case 20:
          if (in.readIndex() != 1) {
            in.readNull();
            this.LOG_TRAFFIC_LOCK_DATE = null;
          } else {
            this.LOG_TRAFFIC_LOCK_DATE = in.readString(this.LOG_TRAFFIC_LOCK_DATE instanceof Utf8 ? (Utf8)this.LOG_TRAFFIC_LOCK_DATE : null);
          }
          break;

        case 21:
          if (in.readIndex() != 1) {
            in.readNull();
            this.LOG_GRIPIT_IMPORT_DATE = null;
          } else {
            this.LOG_GRIPIT_IMPORT_DATE = in.readString(this.LOG_GRIPIT_IMPORT_DATE instanceof Utf8 ? (Utf8)this.LOG_GRIPIT_IMPORT_DATE : null);
          }
          break;

        case 22:
          if (in.readIndex() != 1) {
            in.readNull();
            this.LOG_GRIPIT_IMPORT_TIME = null;
          } else {
            this.LOG_GRIPIT_IMPORT_TIME = in.readDouble();
          }
          break;

        case 23:
          if (in.readIndex() != 1) {
            in.readNull();
            this.LOG_GRIPIT_IMPORT_USER = null;
          } else {
            this.LOG_GRIPIT_IMPORT_USER = in.readString(this.LOG_GRIPIT_IMPORT_USER instanceof Utf8 ? (Utf8)this.LOG_GRIPIT_IMPORT_USER : null);
          }
          break;

        case 24:
          if (in.readIndex() != 1) {
            in.readNull();
            this.PLAYLIST_FILE_NUMBER = null;
          } else {
            this.PLAYLIST_FILE_NUMBER = in.readDouble();
          }
          break;

        case 25:
          if (in.readIndex() != 1) {
            in.readNull();
            this.LOG_READY_FOR_PROMO_IND = null;
          } else {
            this.LOG_READY_FOR_PROMO_IND = in.readString(this.LOG_READY_FOR_PROMO_IND instanceof Utf8 ? (Utf8)this.LOG_READY_FOR_PROMO_IND : null);
          }
          break;

        case 26:
          if (in.readIndex() != 1) {
            in.readNull();
            this.LOG_DOA_UNLOCK_DATE = null;
          } else {
            this.LOG_DOA_UNLOCK_DATE = in.readString(this.LOG_DOA_UNLOCK_DATE instanceof Utf8 ? (Utf8)this.LOG_DOA_UNLOCK_DATE : null);
          }
          break;

        case 27:
          if (in.readIndex() != 1) {
            in.readNull();
            this.LOG_DOA_LOCK_DATE = null;
          } else {
            this.LOG_DOA_LOCK_DATE = in.readString(this.LOG_DOA_LOCK_DATE instanceof Utf8 ? (Utf8)this.LOG_DOA_LOCK_DATE : null);
          }
          break;

        case 28:
          if (in.readIndex() != 1) {
            in.readNull();
            this.DOA_LOCK_USER = null;
          } else {
            this.DOA_LOCK_USER = in.readString(this.DOA_LOCK_USER instanceof Utf8 ? (Utf8)this.DOA_LOCK_USER : null);
          }
          break;

        case 29:
          if (in.readIndex() != 1) {
            in.readNull();
            this.LOG_DOA_OPEN_DATE = null;
          } else {
            this.LOG_DOA_OPEN_DATE = in.readString(this.LOG_DOA_OPEN_DATE instanceof Utf8 ? (Utf8)this.LOG_DOA_OPEN_DATE : null);
          }
          break;

        case 30:
          if (in.readIndex() != 1) {
            in.readNull();
            this.CDC_KEY = null;
          } else {
            this.CDC_KEY = in.readDouble();
          }
          break;

        case 31:
          if (in.readIndex() != 1) {
            in.readNull();
            this.LOG_AUDIO_PROMO_FINAL_LOG_DATE = null;
          } else {
            this.LOG_AUDIO_PROMO_FINAL_LOG_DATE = in.readString(this.LOG_AUDIO_PROMO_FINAL_LOG_DATE instanceof Utf8 ? (Utf8)this.LOG_AUDIO_PROMO_FINAL_LOG_DATE : null);
          }
          break;

        case 32:
          this.SRC_KEY_VAL = in.readString(this.SRC_KEY_VAL instanceof Utf8 ? (Utf8)this.SRC_KEY_VAL : null);
          break;

        case 33:
          this.SRC_CDC_OPER_NM = in.readString(this.SRC_CDC_OPER_NM instanceof Utf8 ? (Utf8)this.SRC_CDC_OPER_NM : null);
          break;

        case 34:
          this.SRC_COMMIT_DT_UTC = in.readString(this.SRC_COMMIT_DT_UTC instanceof Utf8 ? (Utf8)this.SRC_COMMIT_DT_UTC : null);
          break;

        case 35:
          this.TRG_CRT_DT_PART_UTC = in.readString(this.TRG_CRT_DT_PART_UTC instanceof Utf8 ? (Utf8)this.TRG_CRT_DT_PART_UTC : null);
          break;

        case 36:
          this.SRC_SCHEMA_NM = in.readString(this.SRC_SCHEMA_NM instanceof Utf8 ? (Utf8)this.SRC_SCHEMA_NM : null);
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










