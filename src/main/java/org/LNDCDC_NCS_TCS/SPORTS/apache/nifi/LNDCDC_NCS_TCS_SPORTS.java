/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package org.LNDCDC_NCS_TCS.SPORTS.apache.nifi;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class LNDCDC_NCS_TCS_SPORTS extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -6428717966834034659L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"LNDCDC_NCS_TCS_SPORTS\",\"namespace\":\"org.LNDCDC_NCS_TCS.SPORTS.apache.nifi\",\"fields\":[{\"name\":\"SPT_SPCA_CAT\",\"type\":[\"null\",\"string\"]},{\"name\":\"SPT_PGM_CODE\",\"type\":[\"null\",\"string\"]},{\"name\":\"SPT_28_58_IND\",\"type\":[\"null\",\"string\"]},{\"name\":\"SPT_TEAM_SPORT_IND\",\"type\":[\"null\",\"string\"]},{\"name\":\"SPT_CLOSE_CAPTION_IND\",\"type\":[\"null\",\"string\"]},{\"name\":\"SPT_SHOW_IND\",\"type\":[\"null\",\"string\"]},{\"name\":\"SPT_ROS_IND\",\"type\":[\"null\",\"string\"]},{\"name\":\"SPT_PGM_NAME\",\"type\":[\"null\",\"string\"]},{\"name\":\"SPT_ROS_START_DT\",\"type\":[\"null\",\"string\"]},{\"name\":\"SPT_NUM_EXCLUDED_28_58\",\"type\":[\"null\",\"long\"]},{\"name\":\"SPT_DEFLT_EXPIR_TAPE\",\"type\":[\"null\",\"long\"]},{\"name\":\"SPT_NIEL_CAT\",\"type\":[\"null\",\"string\"]},{\"name\":\"SPT_NIEL_SHORT_NAME\",\"type\":[\"null\",\"string\"]},{\"name\":\"SPT_ROS_END_DT\",\"type\":[\"null\",\"string\"]},{\"name\":\"SPT_DEFLT_EXPIR_SDT\",\"type\":[\"null\",\"long\"]},{\"name\":\"SPT_GENDER\",\"type\":[\"null\",\"string\"]},{\"name\":\"SPT_DEFLT_EXPIR_LIVE\",\"type\":[\"null\",\"long\"]},{\"name\":\"SPT_LVL\",\"type\":[\"null\",\"string\"]},{\"name\":\"SPT_NIEL_QTRLY_NAME\",\"type\":[\"null\",\"string\"]},{\"name\":\"SPT_SEASON_END\",\"type\":[\"null\",\"double\"]},{\"name\":\"SPT_SEASON_START\",\"type\":[\"null\",\"double\"]},{\"name\":\"SPT_SEASON_YEAR_IND\",\"type\":[\"null\",\"string\"]},{\"name\":\"SPT_APF_IND\",\"type\":[\"null\",\"string\"]},{\"name\":\"SPT_28_58_NET_REF\",\"type\":[\"null\",\"string\"]},{\"name\":\"SPT_CREATE_REMARKS\",\"type\":[\"null\",\"string\"]},{\"name\":\"SPT_NIEL_LATIN_NAME\",\"type\":[\"null\",\"string\"]},{\"name\":\"SPT_DFLT_STADIUM_ID\",\"type\":[\"null\",\"long\"]},{\"name\":\"LANGUAGE_IND\",\"type\":[\"null\",\"string\"]},{\"name\":\"SPT_LST_NAME\",\"type\":[\"null\",\"string\"]},{\"name\":\"SPT_GENERIC_IND\",\"type\":[\"null\",\"string\"]},{\"name\":\"SPT_NLSN_SPCA_CAT\",\"type\":[\"null\",\"string\"]},{\"name\":\"SPT_NLSN_SPT_PGM_CODE\",\"type\":[\"null\",\"string\"]},{\"name\":\"SPT_RUNSHEET_UPDATE_IND\",\"type\":[\"null\",\"string\"]},{\"name\":\"SPT_COMMENTS\",\"type\":[\"null\",\"string\"]},{\"name\":\"SPT_BACKGROUND\",\"type\":[\"null\",\"string\"]},{\"name\":\"SPT_FOREGROUND\",\"type\":[\"null\",\"string\"]},{\"name\":\"SPT_ARCHIVE_IND\",\"type\":[\"null\",\"string\"]},{\"name\":\"STUDIO_SHOW_IND\",\"type\":[\"null\",\"string\"]},{\"name\":\"COVENANT_IND\",\"type\":[\"null\",\"string\"]},{\"name\":\"COVENANT_CODE\",\"type\":[\"null\",\"long\"]},{\"name\":\"COVENANT_STUDIO_IND\",\"type\":[\"null\",\"string\"]},{\"name\":\"SOURCE\",\"type\":[\"null\",\"string\"]},{\"name\":\"NON_ESPN_IND\",\"type\":[\"null\",\"string\"]},{\"name\":\"SPT_COPYRIGHT_IND\",\"type\":[\"null\",\"string\"]},{\"name\":\"SPT_PROD_RESP_IND\",\"type\":[\"null\",\"string\"]},{\"name\":\"SPT_US_SITE_IND\",\"type\":[\"null\",\"string\"]},{\"name\":\"EXCEPTION_LISTINGS\",\"type\":[\"null\",\"string\"]},{\"name\":\"SPT_PROGRAM_ID\",\"type\":[\"null\",\"long\"]},{\"name\":\"SPT_LEAGUE_CODE\",\"type\":[\"null\",\"double\"]},{\"name\":\"SPT_E3_CAT_ID\",\"type\":[\"null\",\"long\"]},{\"name\":\"SPT_E3A_COF_ID\",\"type\":[\"null\",\"long\"]},{\"name\":\"E3_KILL_DATE\",\"type\":[\"null\",\"string\"]},{\"name\":\"E3_KILL_DAY\",\"type\":[\"null\",\"double\"]},{\"name\":\"CDC_KEY\",\"type\":[\"null\",\"double\"]},{\"name\":\"CONVERTED_DT\",\"type\":[\"null\",\"string\"]},{\"name\":\"JIPPED_IND\",\"type\":[\"null\",\"string\"]},{\"name\":\"SPT_RADIO_BLOCK_DURA\",\"type\":[\"null\",\"long\"]},{\"name\":\"E3_LIVE_REPLAY\",\"type\":[\"null\",\"string\"]},{\"name\":\"SRC_KEY_VAL\",\"type\":\"string\"},{\"name\":\"SRC_CDC_OPER_NM\",\"type\":\"string\"},{\"name\":\"SRC_COMMIT_DT_UTC\",\"type\":\"string\"},{\"name\":\"TRG_CRT_DT_PART_UTC\",\"type\":\"string\"},{\"name\":\"SRC_SCHEMA_NM\",\"type\":\"string\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<LNDCDC_NCS_TCS_SPORTS> ENCODER =
      new BinaryMessageEncoder<LNDCDC_NCS_TCS_SPORTS>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<LNDCDC_NCS_TCS_SPORTS> DECODER =
      new BinaryMessageDecoder<LNDCDC_NCS_TCS_SPORTS>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<LNDCDC_NCS_TCS_SPORTS> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<LNDCDC_NCS_TCS_SPORTS> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<LNDCDC_NCS_TCS_SPORTS> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<LNDCDC_NCS_TCS_SPORTS>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this LNDCDC_NCS_TCS_SPORTS to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a LNDCDC_NCS_TCS_SPORTS from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a LNDCDC_NCS_TCS_SPORTS instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static LNDCDC_NCS_TCS_SPORTS fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

   private java.lang.CharSequence SPT_SPCA_CAT;
   private java.lang.CharSequence SPT_PGM_CODE;
   private java.lang.CharSequence SPT_28_58_IND;
   private java.lang.CharSequence SPT_TEAM_SPORT_IND;
   private java.lang.CharSequence SPT_CLOSE_CAPTION_IND;
   private java.lang.CharSequence SPT_SHOW_IND;
   private java.lang.CharSequence SPT_ROS_IND;
   private java.lang.CharSequence SPT_PGM_NAME;
   private java.lang.CharSequence SPT_ROS_START_DT;
   private java.lang.Long SPT_NUM_EXCLUDED_28_58;
   private java.lang.Long SPT_DEFLT_EXPIR_TAPE;
   private java.lang.CharSequence SPT_NIEL_CAT;
   private java.lang.CharSequence SPT_NIEL_SHORT_NAME;
   private java.lang.CharSequence SPT_ROS_END_DT;
   private java.lang.Long SPT_DEFLT_EXPIR_SDT;
   private java.lang.CharSequence SPT_GENDER;
   private java.lang.Long SPT_DEFLT_EXPIR_LIVE;
   private java.lang.CharSequence SPT_LVL;
   private java.lang.CharSequence SPT_NIEL_QTRLY_NAME;
   private java.lang.Double SPT_SEASON_END;
   private java.lang.Double SPT_SEASON_START;
   private java.lang.CharSequence SPT_SEASON_YEAR_IND;
   private java.lang.CharSequence SPT_APF_IND;
   private java.lang.CharSequence SPT_28_58_NET_REF;
   private java.lang.CharSequence SPT_CREATE_REMARKS;
   private java.lang.CharSequence SPT_NIEL_LATIN_NAME;
   private java.lang.Long SPT_DFLT_STADIUM_ID;
   private java.lang.CharSequence LANGUAGE_IND;
   private java.lang.CharSequence SPT_LST_NAME;
   private java.lang.CharSequence SPT_GENERIC_IND;
   private java.lang.CharSequence SPT_NLSN_SPCA_CAT;
   private java.lang.CharSequence SPT_NLSN_SPT_PGM_CODE;
   private java.lang.CharSequence SPT_RUNSHEET_UPDATE_IND;
   private java.lang.CharSequence SPT_COMMENTS;
   private java.lang.CharSequence SPT_BACKGROUND;
   private java.lang.CharSequence SPT_FOREGROUND;
   private java.lang.CharSequence SPT_ARCHIVE_IND;
   private java.lang.CharSequence STUDIO_SHOW_IND;
   private java.lang.CharSequence COVENANT_IND;
   private java.lang.Long COVENANT_CODE;
   private java.lang.CharSequence COVENANT_STUDIO_IND;
   private java.lang.CharSequence SOURCE;
   private java.lang.CharSequence NON_ESPN_IND;
   private java.lang.CharSequence SPT_COPYRIGHT_IND;
   private java.lang.CharSequence SPT_PROD_RESP_IND;
   private java.lang.CharSequence SPT_US_SITE_IND;
   private java.lang.CharSequence EXCEPTION_LISTINGS;
   private java.lang.Long SPT_PROGRAM_ID;
   private java.lang.Double SPT_LEAGUE_CODE;
   private java.lang.Long SPT_E3_CAT_ID;
   private java.lang.Long SPT_E3A_COF_ID;
   private java.lang.CharSequence E3_KILL_DATE;
   private java.lang.Double E3_KILL_DAY;
   private java.lang.Double CDC_KEY;
   private java.lang.CharSequence CONVERTED_DT;
   private java.lang.CharSequence JIPPED_IND;
   private java.lang.Long SPT_RADIO_BLOCK_DURA;
   private java.lang.CharSequence E3_LIVE_REPLAY;
   private java.lang.CharSequence SRC_KEY_VAL;
   private java.lang.CharSequence SRC_CDC_OPER_NM;
   private java.lang.CharSequence SRC_COMMIT_DT_UTC;
   private java.lang.CharSequence TRG_CRT_DT_PART_UTC;
   private java.lang.CharSequence SRC_SCHEMA_NM;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public LNDCDC_NCS_TCS_SPORTS() {}

  /**
   * All-args constructor.
   * @param SPT_SPCA_CAT The new value for SPT_SPCA_CAT
   * @param SPT_PGM_CODE The new value for SPT_PGM_CODE
   * @param SPT_28_58_IND The new value for SPT_28_58_IND
   * @param SPT_TEAM_SPORT_IND The new value for SPT_TEAM_SPORT_IND
   * @param SPT_CLOSE_CAPTION_IND The new value for SPT_CLOSE_CAPTION_IND
   * @param SPT_SHOW_IND The new value for SPT_SHOW_IND
   * @param SPT_ROS_IND The new value for SPT_ROS_IND
   * @param SPT_PGM_NAME The new value for SPT_PGM_NAME
   * @param SPT_ROS_START_DT The new value for SPT_ROS_START_DT
   * @param SPT_NUM_EXCLUDED_28_58 The new value for SPT_NUM_EXCLUDED_28_58
   * @param SPT_DEFLT_EXPIR_TAPE The new value for SPT_DEFLT_EXPIR_TAPE
   * @param SPT_NIEL_CAT The new value for SPT_NIEL_CAT
   * @param SPT_NIEL_SHORT_NAME The new value for SPT_NIEL_SHORT_NAME
   * @param SPT_ROS_END_DT The new value for SPT_ROS_END_DT
   * @param SPT_DEFLT_EXPIR_SDT The new value for SPT_DEFLT_EXPIR_SDT
   * @param SPT_GENDER The new value for SPT_GENDER
   * @param SPT_DEFLT_EXPIR_LIVE The new value for SPT_DEFLT_EXPIR_LIVE
   * @param SPT_LVL The new value for SPT_LVL
   * @param SPT_NIEL_QTRLY_NAME The new value for SPT_NIEL_QTRLY_NAME
   * @param SPT_SEASON_END The new value for SPT_SEASON_END
   * @param SPT_SEASON_START The new value for SPT_SEASON_START
   * @param SPT_SEASON_YEAR_IND The new value for SPT_SEASON_YEAR_IND
   * @param SPT_APF_IND The new value for SPT_APF_IND
   * @param SPT_28_58_NET_REF The new value for SPT_28_58_NET_REF
   * @param SPT_CREATE_REMARKS The new value for SPT_CREATE_REMARKS
   * @param SPT_NIEL_LATIN_NAME The new value for SPT_NIEL_LATIN_NAME
   * @param SPT_DFLT_STADIUM_ID The new value for SPT_DFLT_STADIUM_ID
   * @param LANGUAGE_IND The new value for LANGUAGE_IND
   * @param SPT_LST_NAME The new value for SPT_LST_NAME
   * @param SPT_GENERIC_IND The new value for SPT_GENERIC_IND
   * @param SPT_NLSN_SPCA_CAT The new value for SPT_NLSN_SPCA_CAT
   * @param SPT_NLSN_SPT_PGM_CODE The new value for SPT_NLSN_SPT_PGM_CODE
   * @param SPT_RUNSHEET_UPDATE_IND The new value for SPT_RUNSHEET_UPDATE_IND
   * @param SPT_COMMENTS The new value for SPT_COMMENTS
   * @param SPT_BACKGROUND The new value for SPT_BACKGROUND
   * @param SPT_FOREGROUND The new value for SPT_FOREGROUND
   * @param SPT_ARCHIVE_IND The new value for SPT_ARCHIVE_IND
   * @param STUDIO_SHOW_IND The new value for STUDIO_SHOW_IND
   * @param COVENANT_IND The new value for COVENANT_IND
   * @param COVENANT_CODE The new value for COVENANT_CODE
   * @param COVENANT_STUDIO_IND The new value for COVENANT_STUDIO_IND
   * @param SOURCE The new value for SOURCE
   * @param NON_ESPN_IND The new value for NON_ESPN_IND
   * @param SPT_COPYRIGHT_IND The new value for SPT_COPYRIGHT_IND
   * @param SPT_PROD_RESP_IND The new value for SPT_PROD_RESP_IND
   * @param SPT_US_SITE_IND The new value for SPT_US_SITE_IND
   * @param EXCEPTION_LISTINGS The new value for EXCEPTION_LISTINGS
   * @param SPT_PROGRAM_ID The new value for SPT_PROGRAM_ID
   * @param SPT_LEAGUE_CODE The new value for SPT_LEAGUE_CODE
   * @param SPT_E3_CAT_ID The new value for SPT_E3_CAT_ID
   * @param SPT_E3A_COF_ID The new value for SPT_E3A_COF_ID
   * @param E3_KILL_DATE The new value for E3_KILL_DATE
   * @param E3_KILL_DAY The new value for E3_KILL_DAY
   * @param CDC_KEY The new value for CDC_KEY
   * @param CONVERTED_DT The new value for CONVERTED_DT
   * @param JIPPED_IND The new value for JIPPED_IND
   * @param SPT_RADIO_BLOCK_DURA The new value for SPT_RADIO_BLOCK_DURA
   * @param E3_LIVE_REPLAY The new value for E3_LIVE_REPLAY
   * @param SRC_KEY_VAL The new value for SRC_KEY_VAL
   * @param SRC_CDC_OPER_NM The new value for SRC_CDC_OPER_NM
   * @param SRC_COMMIT_DT_UTC The new value for SRC_COMMIT_DT_UTC
   * @param TRG_CRT_DT_PART_UTC The new value for TRG_CRT_DT_PART_UTC
   * @param SRC_SCHEMA_NM The new value for SRC_SCHEMA_NM
   */
  public LNDCDC_NCS_TCS_SPORTS(java.lang.CharSequence SPT_SPCA_CAT, java.lang.CharSequence SPT_PGM_CODE, java.lang.CharSequence SPT_28_58_IND, java.lang.CharSequence SPT_TEAM_SPORT_IND, java.lang.CharSequence SPT_CLOSE_CAPTION_IND, java.lang.CharSequence SPT_SHOW_IND, java.lang.CharSequence SPT_ROS_IND, java.lang.CharSequence SPT_PGM_NAME, java.lang.CharSequence SPT_ROS_START_DT, java.lang.Long SPT_NUM_EXCLUDED_28_58, java.lang.Long SPT_DEFLT_EXPIR_TAPE, java.lang.CharSequence SPT_NIEL_CAT, java.lang.CharSequence SPT_NIEL_SHORT_NAME, java.lang.CharSequence SPT_ROS_END_DT, java.lang.Long SPT_DEFLT_EXPIR_SDT, java.lang.CharSequence SPT_GENDER, java.lang.Long SPT_DEFLT_EXPIR_LIVE, java.lang.CharSequence SPT_LVL, java.lang.CharSequence SPT_NIEL_QTRLY_NAME, java.lang.Double SPT_SEASON_END, java.lang.Double SPT_SEASON_START, java.lang.CharSequence SPT_SEASON_YEAR_IND, java.lang.CharSequence SPT_APF_IND, java.lang.CharSequence SPT_28_58_NET_REF, java.lang.CharSequence SPT_CREATE_REMARKS, java.lang.CharSequence SPT_NIEL_LATIN_NAME, java.lang.Long SPT_DFLT_STADIUM_ID, java.lang.CharSequence LANGUAGE_IND, java.lang.CharSequence SPT_LST_NAME, java.lang.CharSequence SPT_GENERIC_IND, java.lang.CharSequence SPT_NLSN_SPCA_CAT, java.lang.CharSequence SPT_NLSN_SPT_PGM_CODE, java.lang.CharSequence SPT_RUNSHEET_UPDATE_IND, java.lang.CharSequence SPT_COMMENTS, java.lang.CharSequence SPT_BACKGROUND, java.lang.CharSequence SPT_FOREGROUND, java.lang.CharSequence SPT_ARCHIVE_IND, java.lang.CharSequence STUDIO_SHOW_IND, java.lang.CharSequence COVENANT_IND, java.lang.Long COVENANT_CODE, java.lang.CharSequence COVENANT_STUDIO_IND, java.lang.CharSequence SOURCE, java.lang.CharSequence NON_ESPN_IND, java.lang.CharSequence SPT_COPYRIGHT_IND, java.lang.CharSequence SPT_PROD_RESP_IND, java.lang.CharSequence SPT_US_SITE_IND, java.lang.CharSequence EXCEPTION_LISTINGS, java.lang.Long SPT_PROGRAM_ID, java.lang.Double SPT_LEAGUE_CODE, java.lang.Long SPT_E3_CAT_ID, java.lang.Long SPT_E3A_COF_ID, java.lang.CharSequence E3_KILL_DATE, java.lang.Double E3_KILL_DAY, java.lang.Double CDC_KEY, java.lang.CharSequence CONVERTED_DT, java.lang.CharSequence JIPPED_IND, java.lang.Long SPT_RADIO_BLOCK_DURA, java.lang.CharSequence E3_LIVE_REPLAY, java.lang.CharSequence SRC_KEY_VAL, java.lang.CharSequence SRC_CDC_OPER_NM, java.lang.CharSequence SRC_COMMIT_DT_UTC, java.lang.CharSequence TRG_CRT_DT_PART_UTC, java.lang.CharSequence SRC_SCHEMA_NM) {
    this.SPT_SPCA_CAT = SPT_SPCA_CAT;
    this.SPT_PGM_CODE = SPT_PGM_CODE;
    this.SPT_28_58_IND = SPT_28_58_IND;
    this.SPT_TEAM_SPORT_IND = SPT_TEAM_SPORT_IND;
    this.SPT_CLOSE_CAPTION_IND = SPT_CLOSE_CAPTION_IND;
    this.SPT_SHOW_IND = SPT_SHOW_IND;
    this.SPT_ROS_IND = SPT_ROS_IND;
    this.SPT_PGM_NAME = SPT_PGM_NAME;
    this.SPT_ROS_START_DT = SPT_ROS_START_DT;
    this.SPT_NUM_EXCLUDED_28_58 = SPT_NUM_EXCLUDED_28_58;
    this.SPT_DEFLT_EXPIR_TAPE = SPT_DEFLT_EXPIR_TAPE;
    this.SPT_NIEL_CAT = SPT_NIEL_CAT;
    this.SPT_NIEL_SHORT_NAME = SPT_NIEL_SHORT_NAME;
    this.SPT_ROS_END_DT = SPT_ROS_END_DT;
    this.SPT_DEFLT_EXPIR_SDT = SPT_DEFLT_EXPIR_SDT;
    this.SPT_GENDER = SPT_GENDER;
    this.SPT_DEFLT_EXPIR_LIVE = SPT_DEFLT_EXPIR_LIVE;
    this.SPT_LVL = SPT_LVL;
    this.SPT_NIEL_QTRLY_NAME = SPT_NIEL_QTRLY_NAME;
    this.SPT_SEASON_END = SPT_SEASON_END;
    this.SPT_SEASON_START = SPT_SEASON_START;
    this.SPT_SEASON_YEAR_IND = SPT_SEASON_YEAR_IND;
    this.SPT_APF_IND = SPT_APF_IND;
    this.SPT_28_58_NET_REF = SPT_28_58_NET_REF;
    this.SPT_CREATE_REMARKS = SPT_CREATE_REMARKS;
    this.SPT_NIEL_LATIN_NAME = SPT_NIEL_LATIN_NAME;
    this.SPT_DFLT_STADIUM_ID = SPT_DFLT_STADIUM_ID;
    this.LANGUAGE_IND = LANGUAGE_IND;
    this.SPT_LST_NAME = SPT_LST_NAME;
    this.SPT_GENERIC_IND = SPT_GENERIC_IND;
    this.SPT_NLSN_SPCA_CAT = SPT_NLSN_SPCA_CAT;
    this.SPT_NLSN_SPT_PGM_CODE = SPT_NLSN_SPT_PGM_CODE;
    this.SPT_RUNSHEET_UPDATE_IND = SPT_RUNSHEET_UPDATE_IND;
    this.SPT_COMMENTS = SPT_COMMENTS;
    this.SPT_BACKGROUND = SPT_BACKGROUND;
    this.SPT_FOREGROUND = SPT_FOREGROUND;
    this.SPT_ARCHIVE_IND = SPT_ARCHIVE_IND;
    this.STUDIO_SHOW_IND = STUDIO_SHOW_IND;
    this.COVENANT_IND = COVENANT_IND;
    this.COVENANT_CODE = COVENANT_CODE;
    this.COVENANT_STUDIO_IND = COVENANT_STUDIO_IND;
    this.SOURCE = SOURCE;
    this.NON_ESPN_IND = NON_ESPN_IND;
    this.SPT_COPYRIGHT_IND = SPT_COPYRIGHT_IND;
    this.SPT_PROD_RESP_IND = SPT_PROD_RESP_IND;
    this.SPT_US_SITE_IND = SPT_US_SITE_IND;
    this.EXCEPTION_LISTINGS = EXCEPTION_LISTINGS;
    this.SPT_PROGRAM_ID = SPT_PROGRAM_ID;
    this.SPT_LEAGUE_CODE = SPT_LEAGUE_CODE;
    this.SPT_E3_CAT_ID = SPT_E3_CAT_ID;
    this.SPT_E3A_COF_ID = SPT_E3A_COF_ID;
    this.E3_KILL_DATE = E3_KILL_DATE;
    this.E3_KILL_DAY = E3_KILL_DAY;
    this.CDC_KEY = CDC_KEY;
    this.CONVERTED_DT = CONVERTED_DT;
    this.JIPPED_IND = JIPPED_IND;
    this.SPT_RADIO_BLOCK_DURA = SPT_RADIO_BLOCK_DURA;
    this.E3_LIVE_REPLAY = E3_LIVE_REPLAY;
    this.SRC_KEY_VAL = SRC_KEY_VAL;
    this.SRC_CDC_OPER_NM = SRC_CDC_OPER_NM;
    this.SRC_COMMIT_DT_UTC = SRC_COMMIT_DT_UTC;
    this.TRG_CRT_DT_PART_UTC = TRG_CRT_DT_PART_UTC;
    this.SRC_SCHEMA_NM = SRC_SCHEMA_NM;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return SPT_SPCA_CAT;
    case 1: return SPT_PGM_CODE;
    case 2: return SPT_28_58_IND;
    case 3: return SPT_TEAM_SPORT_IND;
    case 4: return SPT_CLOSE_CAPTION_IND;
    case 5: return SPT_SHOW_IND;
    case 6: return SPT_ROS_IND;
    case 7: return SPT_PGM_NAME;
    case 8: return SPT_ROS_START_DT;
    case 9: return SPT_NUM_EXCLUDED_28_58;
    case 10: return SPT_DEFLT_EXPIR_TAPE;
    case 11: return SPT_NIEL_CAT;
    case 12: return SPT_NIEL_SHORT_NAME;
    case 13: return SPT_ROS_END_DT;
    case 14: return SPT_DEFLT_EXPIR_SDT;
    case 15: return SPT_GENDER;
    case 16: return SPT_DEFLT_EXPIR_LIVE;
    case 17: return SPT_LVL;
    case 18: return SPT_NIEL_QTRLY_NAME;
    case 19: return SPT_SEASON_END;
    case 20: return SPT_SEASON_START;
    case 21: return SPT_SEASON_YEAR_IND;
    case 22: return SPT_APF_IND;
    case 23: return SPT_28_58_NET_REF;
    case 24: return SPT_CREATE_REMARKS;
    case 25: return SPT_NIEL_LATIN_NAME;
    case 26: return SPT_DFLT_STADIUM_ID;
    case 27: return LANGUAGE_IND;
    case 28: return SPT_LST_NAME;
    case 29: return SPT_GENERIC_IND;
    case 30: return SPT_NLSN_SPCA_CAT;
    case 31: return SPT_NLSN_SPT_PGM_CODE;
    case 32: return SPT_RUNSHEET_UPDATE_IND;
    case 33: return SPT_COMMENTS;
    case 34: return SPT_BACKGROUND;
    case 35: return SPT_FOREGROUND;
    case 36: return SPT_ARCHIVE_IND;
    case 37: return STUDIO_SHOW_IND;
    case 38: return COVENANT_IND;
    case 39: return COVENANT_CODE;
    case 40: return COVENANT_STUDIO_IND;
    case 41: return SOURCE;
    case 42: return NON_ESPN_IND;
    case 43: return SPT_COPYRIGHT_IND;
    case 44: return SPT_PROD_RESP_IND;
    case 45: return SPT_US_SITE_IND;
    case 46: return EXCEPTION_LISTINGS;
    case 47: return SPT_PROGRAM_ID;
    case 48: return SPT_LEAGUE_CODE;
    case 49: return SPT_E3_CAT_ID;
    case 50: return SPT_E3A_COF_ID;
    case 51: return E3_KILL_DATE;
    case 52: return E3_KILL_DAY;
    case 53: return CDC_KEY;
    case 54: return CONVERTED_DT;
    case 55: return JIPPED_IND;
    case 56: return SPT_RADIO_BLOCK_DURA;
    case 57: return E3_LIVE_REPLAY;
    case 58: return SRC_KEY_VAL;
    case 59: return SRC_CDC_OPER_NM;
    case 60: return SRC_COMMIT_DT_UTC;
    case 61: return TRG_CRT_DT_PART_UTC;
    case 62: return SRC_SCHEMA_NM;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: SPT_SPCA_CAT = (java.lang.CharSequence)value$; break;
    case 1: SPT_PGM_CODE = (java.lang.CharSequence)value$; break;
    case 2: SPT_28_58_IND = (java.lang.CharSequence)value$; break;
    case 3: SPT_TEAM_SPORT_IND = (java.lang.CharSequence)value$; break;
    case 4: SPT_CLOSE_CAPTION_IND = (java.lang.CharSequence)value$; break;
    case 5: SPT_SHOW_IND = (java.lang.CharSequence)value$; break;
    case 6: SPT_ROS_IND = (java.lang.CharSequence)value$; break;
    case 7: SPT_PGM_NAME = (java.lang.CharSequence)value$; break;
    case 8: SPT_ROS_START_DT = (java.lang.CharSequence)value$; break;
    case 9: SPT_NUM_EXCLUDED_28_58 = (java.lang.Long)value$; break;
    case 10: SPT_DEFLT_EXPIR_TAPE = (java.lang.Long)value$; break;
    case 11: SPT_NIEL_CAT = (java.lang.CharSequence)value$; break;
    case 12: SPT_NIEL_SHORT_NAME = (java.lang.CharSequence)value$; break;
    case 13: SPT_ROS_END_DT = (java.lang.CharSequence)value$; break;
    case 14: SPT_DEFLT_EXPIR_SDT = (java.lang.Long)value$; break;
    case 15: SPT_GENDER = (java.lang.CharSequence)value$; break;
    case 16: SPT_DEFLT_EXPIR_LIVE = (java.lang.Long)value$; break;
    case 17: SPT_LVL = (java.lang.CharSequence)value$; break;
    case 18: SPT_NIEL_QTRLY_NAME = (java.lang.CharSequence)value$; break;
    case 19: SPT_SEASON_END = (java.lang.Double)value$; break;
    case 20: SPT_SEASON_START = (java.lang.Double)value$; break;
    case 21: SPT_SEASON_YEAR_IND = (java.lang.CharSequence)value$; break;
    case 22: SPT_APF_IND = (java.lang.CharSequence)value$; break;
    case 23: SPT_28_58_NET_REF = (java.lang.CharSequence)value$; break;
    case 24: SPT_CREATE_REMARKS = (java.lang.CharSequence)value$; break;
    case 25: SPT_NIEL_LATIN_NAME = (java.lang.CharSequence)value$; break;
    case 26: SPT_DFLT_STADIUM_ID = (java.lang.Long)value$; break;
    case 27: LANGUAGE_IND = (java.lang.CharSequence)value$; break;
    case 28: SPT_LST_NAME = (java.lang.CharSequence)value$; break;
    case 29: SPT_GENERIC_IND = (java.lang.CharSequence)value$; break;
    case 30: SPT_NLSN_SPCA_CAT = (java.lang.CharSequence)value$; break;
    case 31: SPT_NLSN_SPT_PGM_CODE = (java.lang.CharSequence)value$; break;
    case 32: SPT_RUNSHEET_UPDATE_IND = (java.lang.CharSequence)value$; break;
    case 33: SPT_COMMENTS = (java.lang.CharSequence)value$; break;
    case 34: SPT_BACKGROUND = (java.lang.CharSequence)value$; break;
    case 35: SPT_FOREGROUND = (java.lang.CharSequence)value$; break;
    case 36: SPT_ARCHIVE_IND = (java.lang.CharSequence)value$; break;
    case 37: STUDIO_SHOW_IND = (java.lang.CharSequence)value$; break;
    case 38: COVENANT_IND = (java.lang.CharSequence)value$; break;
    case 39: COVENANT_CODE = (java.lang.Long)value$; break;
    case 40: COVENANT_STUDIO_IND = (java.lang.CharSequence)value$; break;
    case 41: SOURCE = (java.lang.CharSequence)value$; break;
    case 42: NON_ESPN_IND = (java.lang.CharSequence)value$; break;
    case 43: SPT_COPYRIGHT_IND = (java.lang.CharSequence)value$; break;
    case 44: SPT_PROD_RESP_IND = (java.lang.CharSequence)value$; break;
    case 45: SPT_US_SITE_IND = (java.lang.CharSequence)value$; break;
    case 46: EXCEPTION_LISTINGS = (java.lang.CharSequence)value$; break;
    case 47: SPT_PROGRAM_ID = (java.lang.Long)value$; break;
    case 48: SPT_LEAGUE_CODE = (java.lang.Double)value$; break;
    case 49: SPT_E3_CAT_ID = (java.lang.Long)value$; break;
    case 50: SPT_E3A_COF_ID = (java.lang.Long)value$; break;
    case 51: E3_KILL_DATE = (java.lang.CharSequence)value$; break;
    case 52: E3_KILL_DAY = (java.lang.Double)value$; break;
    case 53: CDC_KEY = (java.lang.Double)value$; break;
    case 54: CONVERTED_DT = (java.lang.CharSequence)value$; break;
    case 55: JIPPED_IND = (java.lang.CharSequence)value$; break;
    case 56: SPT_RADIO_BLOCK_DURA = (java.lang.Long)value$; break;
    case 57: E3_LIVE_REPLAY = (java.lang.CharSequence)value$; break;
    case 58: SRC_KEY_VAL = (java.lang.CharSequence)value$; break;
    case 59: SRC_CDC_OPER_NM = (java.lang.CharSequence)value$; break;
    case 60: SRC_COMMIT_DT_UTC = (java.lang.CharSequence)value$; break;
    case 61: TRG_CRT_DT_PART_UTC = (java.lang.CharSequence)value$; break;
    case 62: SRC_SCHEMA_NM = (java.lang.CharSequence)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'SPT_SPCA_CAT' field.
   * @return The value of the 'SPT_SPCA_CAT' field.
   */
  public java.lang.CharSequence getSPTSPCACAT() {
    return SPT_SPCA_CAT;
  }


  /**
   * Sets the value of the 'SPT_SPCA_CAT' field.
   * @param value the value to set.
   */
  public void setSPTSPCACAT(java.lang.CharSequence value) {
    this.SPT_SPCA_CAT = value;
  }

  /**
   * Gets the value of the 'SPT_PGM_CODE' field.
   * @return The value of the 'SPT_PGM_CODE' field.
   */
  public java.lang.CharSequence getSPTPGMCODE() {
    return SPT_PGM_CODE;
  }


  /**
   * Sets the value of the 'SPT_PGM_CODE' field.
   * @param value the value to set.
   */
  public void setSPTPGMCODE(java.lang.CharSequence value) {
    this.SPT_PGM_CODE = value;
  }

  /**
   * Gets the value of the 'SPT_28_58_IND' field.
   * @return The value of the 'SPT_28_58_IND' field.
   */
  public java.lang.CharSequence getSPT2858IND() {
    return SPT_28_58_IND;
  }


  /**
   * Sets the value of the 'SPT_28_58_IND' field.
   * @param value the value to set.
   */
  public void setSPT2858IND(java.lang.CharSequence value) {
    this.SPT_28_58_IND = value;
  }

  /**
   * Gets the value of the 'SPT_TEAM_SPORT_IND' field.
   * @return The value of the 'SPT_TEAM_SPORT_IND' field.
   */
  public java.lang.CharSequence getSPTTEAMSPORTIND() {
    return SPT_TEAM_SPORT_IND;
  }


  /**
   * Sets the value of the 'SPT_TEAM_SPORT_IND' field.
   * @param value the value to set.
   */
  public void setSPTTEAMSPORTIND(java.lang.CharSequence value) {
    this.SPT_TEAM_SPORT_IND = value;
  }

  /**
   * Gets the value of the 'SPT_CLOSE_CAPTION_IND' field.
   * @return The value of the 'SPT_CLOSE_CAPTION_IND' field.
   */
  public java.lang.CharSequence getSPTCLOSECAPTIONIND() {
    return SPT_CLOSE_CAPTION_IND;
  }


  /**
   * Sets the value of the 'SPT_CLOSE_CAPTION_IND' field.
   * @param value the value to set.
   */
  public void setSPTCLOSECAPTIONIND(java.lang.CharSequence value) {
    this.SPT_CLOSE_CAPTION_IND = value;
  }

  /**
   * Gets the value of the 'SPT_SHOW_IND' field.
   * @return The value of the 'SPT_SHOW_IND' field.
   */
  public java.lang.CharSequence getSPTSHOWIND() {
    return SPT_SHOW_IND;
  }


  /**
   * Sets the value of the 'SPT_SHOW_IND' field.
   * @param value the value to set.
   */
  public void setSPTSHOWIND(java.lang.CharSequence value) {
    this.SPT_SHOW_IND = value;
  }

  /**
   * Gets the value of the 'SPT_ROS_IND' field.
   * @return The value of the 'SPT_ROS_IND' field.
   */
  public java.lang.CharSequence getSPTROSIND() {
    return SPT_ROS_IND;
  }


  /**
   * Sets the value of the 'SPT_ROS_IND' field.
   * @param value the value to set.
   */
  public void setSPTROSIND(java.lang.CharSequence value) {
    this.SPT_ROS_IND = value;
  }

  /**
   * Gets the value of the 'SPT_PGM_NAME' field.
   * @return The value of the 'SPT_PGM_NAME' field.
   */
  public java.lang.CharSequence getSPTPGMNAME() {
    return SPT_PGM_NAME;
  }


  /**
   * Sets the value of the 'SPT_PGM_NAME' field.
   * @param value the value to set.
   */
  public void setSPTPGMNAME(java.lang.CharSequence value) {
    this.SPT_PGM_NAME = value;
  }

  /**
   * Gets the value of the 'SPT_ROS_START_DT' field.
   * @return The value of the 'SPT_ROS_START_DT' field.
   */
  public java.lang.CharSequence getSPTROSSTARTDT() {
    return SPT_ROS_START_DT;
  }


  /**
   * Sets the value of the 'SPT_ROS_START_DT' field.
   * @param value the value to set.
   */
  public void setSPTROSSTARTDT(java.lang.CharSequence value) {
    this.SPT_ROS_START_DT = value;
  }

  /**
   * Gets the value of the 'SPT_NUM_EXCLUDED_28_58' field.
   * @return The value of the 'SPT_NUM_EXCLUDED_28_58' field.
   */
  public java.lang.Long getSPTNUMEXCLUDED2858() {
    return SPT_NUM_EXCLUDED_28_58;
  }


  /**
   * Sets the value of the 'SPT_NUM_EXCLUDED_28_58' field.
   * @param value the value to set.
   */
  public void setSPTNUMEXCLUDED2858(java.lang.Long value) {
    this.SPT_NUM_EXCLUDED_28_58 = value;
  }

  /**
   * Gets the value of the 'SPT_DEFLT_EXPIR_TAPE' field.
   * @return The value of the 'SPT_DEFLT_EXPIR_TAPE' field.
   */
  public java.lang.Long getSPTDEFLTEXPIRTAPE() {
    return SPT_DEFLT_EXPIR_TAPE;
  }


  /**
   * Sets the value of the 'SPT_DEFLT_EXPIR_TAPE' field.
   * @param value the value to set.
   */
  public void setSPTDEFLTEXPIRTAPE(java.lang.Long value) {
    this.SPT_DEFLT_EXPIR_TAPE = value;
  }

  /**
   * Gets the value of the 'SPT_NIEL_CAT' field.
   * @return The value of the 'SPT_NIEL_CAT' field.
   */
  public java.lang.CharSequence getSPTNIELCAT() {
    return SPT_NIEL_CAT;
  }


  /**
   * Sets the value of the 'SPT_NIEL_CAT' field.
   * @param value the value to set.
   */
  public void setSPTNIELCAT(java.lang.CharSequence value) {
    this.SPT_NIEL_CAT = value;
  }

  /**
   * Gets the value of the 'SPT_NIEL_SHORT_NAME' field.
   * @return The value of the 'SPT_NIEL_SHORT_NAME' field.
   */
  public java.lang.CharSequence getSPTNIELSHORTNAME() {
    return SPT_NIEL_SHORT_NAME;
  }


  /**
   * Sets the value of the 'SPT_NIEL_SHORT_NAME' field.
   * @param value the value to set.
   */
  public void setSPTNIELSHORTNAME(java.lang.CharSequence value) {
    this.SPT_NIEL_SHORT_NAME = value;
  }

  /**
   * Gets the value of the 'SPT_ROS_END_DT' field.
   * @return The value of the 'SPT_ROS_END_DT' field.
   */
  public java.lang.CharSequence getSPTROSENDDT() {
    return SPT_ROS_END_DT;
  }


  /**
   * Sets the value of the 'SPT_ROS_END_DT' field.
   * @param value the value to set.
   */
  public void setSPTROSENDDT(java.lang.CharSequence value) {
    this.SPT_ROS_END_DT = value;
  }

  /**
   * Gets the value of the 'SPT_DEFLT_EXPIR_SDT' field.
   * @return The value of the 'SPT_DEFLT_EXPIR_SDT' field.
   */
  public java.lang.Long getSPTDEFLTEXPIRSDT() {
    return SPT_DEFLT_EXPIR_SDT;
  }


  /**
   * Sets the value of the 'SPT_DEFLT_EXPIR_SDT' field.
   * @param value the value to set.
   */
  public void setSPTDEFLTEXPIRSDT(java.lang.Long value) {
    this.SPT_DEFLT_EXPIR_SDT = value;
  }

  /**
   * Gets the value of the 'SPT_GENDER' field.
   * @return The value of the 'SPT_GENDER' field.
   */
  public java.lang.CharSequence getSPTGENDER() {
    return SPT_GENDER;
  }


  /**
   * Sets the value of the 'SPT_GENDER' field.
   * @param value the value to set.
   */
  public void setSPTGENDER(java.lang.CharSequence value) {
    this.SPT_GENDER = value;
  }

  /**
   * Gets the value of the 'SPT_DEFLT_EXPIR_LIVE' field.
   * @return The value of the 'SPT_DEFLT_EXPIR_LIVE' field.
   */
  public java.lang.Long getSPTDEFLTEXPIRLIVE() {
    return SPT_DEFLT_EXPIR_LIVE;
  }


  /**
   * Sets the value of the 'SPT_DEFLT_EXPIR_LIVE' field.
   * @param value the value to set.
   */
  public void setSPTDEFLTEXPIRLIVE(java.lang.Long value) {
    this.SPT_DEFLT_EXPIR_LIVE = value;
  }

  /**
   * Gets the value of the 'SPT_LVL' field.
   * @return The value of the 'SPT_LVL' field.
   */
  public java.lang.CharSequence getSPTLVL() {
    return SPT_LVL;
  }


  /**
   * Sets the value of the 'SPT_LVL' field.
   * @param value the value to set.
   */
  public void setSPTLVL(java.lang.CharSequence value) {
    this.SPT_LVL = value;
  }

  /**
   * Gets the value of the 'SPT_NIEL_QTRLY_NAME' field.
   * @return The value of the 'SPT_NIEL_QTRLY_NAME' field.
   */
  public java.lang.CharSequence getSPTNIELQTRLYNAME() {
    return SPT_NIEL_QTRLY_NAME;
  }


  /**
   * Sets the value of the 'SPT_NIEL_QTRLY_NAME' field.
   * @param value the value to set.
   */
  public void setSPTNIELQTRLYNAME(java.lang.CharSequence value) {
    this.SPT_NIEL_QTRLY_NAME = value;
  }

  /**
   * Gets the value of the 'SPT_SEASON_END' field.
   * @return The value of the 'SPT_SEASON_END' field.
   */
  public java.lang.Double getSPTSEASONEND() {
    return SPT_SEASON_END;
  }


  /**
   * Sets the value of the 'SPT_SEASON_END' field.
   * @param value the value to set.
   */
  public void setSPTSEASONEND(java.lang.Double value) {
    this.SPT_SEASON_END = value;
  }

  /**
   * Gets the value of the 'SPT_SEASON_START' field.
   * @return The value of the 'SPT_SEASON_START' field.
   */
  public java.lang.Double getSPTSEASONSTART() {
    return SPT_SEASON_START;
  }


  /**
   * Sets the value of the 'SPT_SEASON_START' field.
   * @param value the value to set.
   */
  public void setSPTSEASONSTART(java.lang.Double value) {
    this.SPT_SEASON_START = value;
  }

  /**
   * Gets the value of the 'SPT_SEASON_YEAR_IND' field.
   * @return The value of the 'SPT_SEASON_YEAR_IND' field.
   */
  public java.lang.CharSequence getSPTSEASONYEARIND() {
    return SPT_SEASON_YEAR_IND;
  }


  /**
   * Sets the value of the 'SPT_SEASON_YEAR_IND' field.
   * @param value the value to set.
   */
  public void setSPTSEASONYEARIND(java.lang.CharSequence value) {
    this.SPT_SEASON_YEAR_IND = value;
  }

  /**
   * Gets the value of the 'SPT_APF_IND' field.
   * @return The value of the 'SPT_APF_IND' field.
   */
  public java.lang.CharSequence getSPTAPFIND() {
    return SPT_APF_IND;
  }


  /**
   * Sets the value of the 'SPT_APF_IND' field.
   * @param value the value to set.
   */
  public void setSPTAPFIND(java.lang.CharSequence value) {
    this.SPT_APF_IND = value;
  }

  /**
   * Gets the value of the 'SPT_28_58_NET_REF' field.
   * @return The value of the 'SPT_28_58_NET_REF' field.
   */
  public java.lang.CharSequence getSPT2858NETREF() {
    return SPT_28_58_NET_REF;
  }


  /**
   * Sets the value of the 'SPT_28_58_NET_REF' field.
   * @param value the value to set.
   */
  public void setSPT2858NETREF(java.lang.CharSequence value) {
    this.SPT_28_58_NET_REF = value;
  }

  /**
   * Gets the value of the 'SPT_CREATE_REMARKS' field.
   * @return The value of the 'SPT_CREATE_REMARKS' field.
   */
  public java.lang.CharSequence getSPTCREATEREMARKS() {
    return SPT_CREATE_REMARKS;
  }


  /**
   * Sets the value of the 'SPT_CREATE_REMARKS' field.
   * @param value the value to set.
   */
  public void setSPTCREATEREMARKS(java.lang.CharSequence value) {
    this.SPT_CREATE_REMARKS = value;
  }

  /**
   * Gets the value of the 'SPT_NIEL_LATIN_NAME' field.
   * @return The value of the 'SPT_NIEL_LATIN_NAME' field.
   */
  public java.lang.CharSequence getSPTNIELLATINNAME() {
    return SPT_NIEL_LATIN_NAME;
  }


  /**
   * Sets the value of the 'SPT_NIEL_LATIN_NAME' field.
   * @param value the value to set.
   */
  public void setSPTNIELLATINNAME(java.lang.CharSequence value) {
    this.SPT_NIEL_LATIN_NAME = value;
  }

  /**
   * Gets the value of the 'SPT_DFLT_STADIUM_ID' field.
   * @return The value of the 'SPT_DFLT_STADIUM_ID' field.
   */
  public java.lang.Long getSPTDFLTSTADIUMID() {
    return SPT_DFLT_STADIUM_ID;
  }


  /**
   * Sets the value of the 'SPT_DFLT_STADIUM_ID' field.
   * @param value the value to set.
   */
  public void setSPTDFLTSTADIUMID(java.lang.Long value) {
    this.SPT_DFLT_STADIUM_ID = value;
  }

  /**
   * Gets the value of the 'LANGUAGE_IND' field.
   * @return The value of the 'LANGUAGE_IND' field.
   */
  public java.lang.CharSequence getLANGUAGEIND() {
    return LANGUAGE_IND;
  }


  /**
   * Sets the value of the 'LANGUAGE_IND' field.
   * @param value the value to set.
   */
  public void setLANGUAGEIND(java.lang.CharSequence value) {
    this.LANGUAGE_IND = value;
  }

  /**
   * Gets the value of the 'SPT_LST_NAME' field.
   * @return The value of the 'SPT_LST_NAME' field.
   */
  public java.lang.CharSequence getSPTLSTNAME() {
    return SPT_LST_NAME;
  }


  /**
   * Sets the value of the 'SPT_LST_NAME' field.
   * @param value the value to set.
   */
  public void setSPTLSTNAME(java.lang.CharSequence value) {
    this.SPT_LST_NAME = value;
  }

  /**
   * Gets the value of the 'SPT_GENERIC_IND' field.
   * @return The value of the 'SPT_GENERIC_IND' field.
   */
  public java.lang.CharSequence getSPTGENERICIND() {
    return SPT_GENERIC_IND;
  }


  /**
   * Sets the value of the 'SPT_GENERIC_IND' field.
   * @param value the value to set.
   */
  public void setSPTGENERICIND(java.lang.CharSequence value) {
    this.SPT_GENERIC_IND = value;
  }

  /**
   * Gets the value of the 'SPT_NLSN_SPCA_CAT' field.
   * @return The value of the 'SPT_NLSN_SPCA_CAT' field.
   */
  public java.lang.CharSequence getSPTNLSNSPCACAT() {
    return SPT_NLSN_SPCA_CAT;
  }


  /**
   * Sets the value of the 'SPT_NLSN_SPCA_CAT' field.
   * @param value the value to set.
   */
  public void setSPTNLSNSPCACAT(java.lang.CharSequence value) {
    this.SPT_NLSN_SPCA_CAT = value;
  }

  /**
   * Gets the value of the 'SPT_NLSN_SPT_PGM_CODE' field.
   * @return The value of the 'SPT_NLSN_SPT_PGM_CODE' field.
   */
  public java.lang.CharSequence getSPTNLSNSPTPGMCODE() {
    return SPT_NLSN_SPT_PGM_CODE;
  }


  /**
   * Sets the value of the 'SPT_NLSN_SPT_PGM_CODE' field.
   * @param value the value to set.
   */
  public void setSPTNLSNSPTPGMCODE(java.lang.CharSequence value) {
    this.SPT_NLSN_SPT_PGM_CODE = value;
  }

  /**
   * Gets the value of the 'SPT_RUNSHEET_UPDATE_IND' field.
   * @return The value of the 'SPT_RUNSHEET_UPDATE_IND' field.
   */
  public java.lang.CharSequence getSPTRUNSHEETUPDATEIND() {
    return SPT_RUNSHEET_UPDATE_IND;
  }


  /**
   * Sets the value of the 'SPT_RUNSHEET_UPDATE_IND' field.
   * @param value the value to set.
   */
  public void setSPTRUNSHEETUPDATEIND(java.lang.CharSequence value) {
    this.SPT_RUNSHEET_UPDATE_IND = value;
  }

  /**
   * Gets the value of the 'SPT_COMMENTS' field.
   * @return The value of the 'SPT_COMMENTS' field.
   */
  public java.lang.CharSequence getSPTCOMMENTS() {
    return SPT_COMMENTS;
  }


  /**
   * Sets the value of the 'SPT_COMMENTS' field.
   * @param value the value to set.
   */
  public void setSPTCOMMENTS(java.lang.CharSequence value) {
    this.SPT_COMMENTS = value;
  }

  /**
   * Gets the value of the 'SPT_BACKGROUND' field.
   * @return The value of the 'SPT_BACKGROUND' field.
   */
  public java.lang.CharSequence getSPTBACKGROUND() {
    return SPT_BACKGROUND;
  }


  /**
   * Sets the value of the 'SPT_BACKGROUND' field.
   * @param value the value to set.
   */
  public void setSPTBACKGROUND(java.lang.CharSequence value) {
    this.SPT_BACKGROUND = value;
  }

  /**
   * Gets the value of the 'SPT_FOREGROUND' field.
   * @return The value of the 'SPT_FOREGROUND' field.
   */
  public java.lang.CharSequence getSPTFOREGROUND() {
    return SPT_FOREGROUND;
  }


  /**
   * Sets the value of the 'SPT_FOREGROUND' field.
   * @param value the value to set.
   */
  public void setSPTFOREGROUND(java.lang.CharSequence value) {
    this.SPT_FOREGROUND = value;
  }

  /**
   * Gets the value of the 'SPT_ARCHIVE_IND' field.
   * @return The value of the 'SPT_ARCHIVE_IND' field.
   */
  public java.lang.CharSequence getSPTARCHIVEIND() {
    return SPT_ARCHIVE_IND;
  }


  /**
   * Sets the value of the 'SPT_ARCHIVE_IND' field.
   * @param value the value to set.
   */
  public void setSPTARCHIVEIND(java.lang.CharSequence value) {
    this.SPT_ARCHIVE_IND = value;
  }

  /**
   * Gets the value of the 'STUDIO_SHOW_IND' field.
   * @return The value of the 'STUDIO_SHOW_IND' field.
   */
  public java.lang.CharSequence getSTUDIOSHOWIND() {
    return STUDIO_SHOW_IND;
  }


  /**
   * Sets the value of the 'STUDIO_SHOW_IND' field.
   * @param value the value to set.
   */
  public void setSTUDIOSHOWIND(java.lang.CharSequence value) {
    this.STUDIO_SHOW_IND = value;
  }

  /**
   * Gets the value of the 'COVENANT_IND' field.
   * @return The value of the 'COVENANT_IND' field.
   */
  public java.lang.CharSequence getCOVENANTIND() {
    return COVENANT_IND;
  }


  /**
   * Sets the value of the 'COVENANT_IND' field.
   * @param value the value to set.
   */
  public void setCOVENANTIND(java.lang.CharSequence value) {
    this.COVENANT_IND = value;
  }

  /**
   * Gets the value of the 'COVENANT_CODE' field.
   * @return The value of the 'COVENANT_CODE' field.
   */
  public java.lang.Long getCOVENANTCODE() {
    return COVENANT_CODE;
  }


  /**
   * Sets the value of the 'COVENANT_CODE' field.
   * @param value the value to set.
   */
  public void setCOVENANTCODE(java.lang.Long value) {
    this.COVENANT_CODE = value;
  }

  /**
   * Gets the value of the 'COVENANT_STUDIO_IND' field.
   * @return The value of the 'COVENANT_STUDIO_IND' field.
   */
  public java.lang.CharSequence getCOVENANTSTUDIOIND() {
    return COVENANT_STUDIO_IND;
  }


  /**
   * Sets the value of the 'COVENANT_STUDIO_IND' field.
   * @param value the value to set.
   */
  public void setCOVENANTSTUDIOIND(java.lang.CharSequence value) {
    this.COVENANT_STUDIO_IND = value;
  }

  /**
   * Gets the value of the 'SOURCE' field.
   * @return The value of the 'SOURCE' field.
   */
  public java.lang.CharSequence getSOURCE() {
    return SOURCE;
  }


  /**
   * Sets the value of the 'SOURCE' field.
   * @param value the value to set.
   */
  public void setSOURCE(java.lang.CharSequence value) {
    this.SOURCE = value;
  }

  /**
   * Gets the value of the 'NON_ESPN_IND' field.
   * @return The value of the 'NON_ESPN_IND' field.
   */
  public java.lang.CharSequence getNONESPNIND() {
    return NON_ESPN_IND;
  }


  /**
   * Sets the value of the 'NON_ESPN_IND' field.
   * @param value the value to set.
   */
  public void setNONESPNIND(java.lang.CharSequence value) {
    this.NON_ESPN_IND = value;
  }

  /**
   * Gets the value of the 'SPT_COPYRIGHT_IND' field.
   * @return The value of the 'SPT_COPYRIGHT_IND' field.
   */
  public java.lang.CharSequence getSPTCOPYRIGHTIND() {
    return SPT_COPYRIGHT_IND;
  }


  /**
   * Sets the value of the 'SPT_COPYRIGHT_IND' field.
   * @param value the value to set.
   */
  public void setSPTCOPYRIGHTIND(java.lang.CharSequence value) {
    this.SPT_COPYRIGHT_IND = value;
  }

  /**
   * Gets the value of the 'SPT_PROD_RESP_IND' field.
   * @return The value of the 'SPT_PROD_RESP_IND' field.
   */
  public java.lang.CharSequence getSPTPRODRESPIND() {
    return SPT_PROD_RESP_IND;
  }


  /**
   * Sets the value of the 'SPT_PROD_RESP_IND' field.
   * @param value the value to set.
   */
  public void setSPTPRODRESPIND(java.lang.CharSequence value) {
    this.SPT_PROD_RESP_IND = value;
  }

  /**
   * Gets the value of the 'SPT_US_SITE_IND' field.
   * @return The value of the 'SPT_US_SITE_IND' field.
   */
  public java.lang.CharSequence getSPTUSSITEIND() {
    return SPT_US_SITE_IND;
  }


  /**
   * Sets the value of the 'SPT_US_SITE_IND' field.
   * @param value the value to set.
   */
  public void setSPTUSSITEIND(java.lang.CharSequence value) {
    this.SPT_US_SITE_IND = value;
  }

  /**
   * Gets the value of the 'EXCEPTION_LISTINGS' field.
   * @return The value of the 'EXCEPTION_LISTINGS' field.
   */
  public java.lang.CharSequence getEXCEPTIONLISTINGS() {
    return EXCEPTION_LISTINGS;
  }


  /**
   * Sets the value of the 'EXCEPTION_LISTINGS' field.
   * @param value the value to set.
   */
  public void setEXCEPTIONLISTINGS(java.lang.CharSequence value) {
    this.EXCEPTION_LISTINGS = value;
  }

  /**
   * Gets the value of the 'SPT_PROGRAM_ID' field.
   * @return The value of the 'SPT_PROGRAM_ID' field.
   */
  public java.lang.Long getSPTPROGRAMID() {
    return SPT_PROGRAM_ID;
  }


  /**
   * Sets the value of the 'SPT_PROGRAM_ID' field.
   * @param value the value to set.
   */
  public void setSPTPROGRAMID(java.lang.Long value) {
    this.SPT_PROGRAM_ID = value;
  }

  /**
   * Gets the value of the 'SPT_LEAGUE_CODE' field.
   * @return The value of the 'SPT_LEAGUE_CODE' field.
   */
  public java.lang.Double getSPTLEAGUECODE() {
    return SPT_LEAGUE_CODE;
  }


  /**
   * Sets the value of the 'SPT_LEAGUE_CODE' field.
   * @param value the value to set.
   */
  public void setSPTLEAGUECODE(java.lang.Double value) {
    this.SPT_LEAGUE_CODE = value;
  }

  /**
   * Gets the value of the 'SPT_E3_CAT_ID' field.
   * @return The value of the 'SPT_E3_CAT_ID' field.
   */
  public java.lang.Long getSPTE3CATID() {
    return SPT_E3_CAT_ID;
  }


  /**
   * Sets the value of the 'SPT_E3_CAT_ID' field.
   * @param value the value to set.
   */
  public void setSPTE3CATID(java.lang.Long value) {
    this.SPT_E3_CAT_ID = value;
  }

  /**
   * Gets the value of the 'SPT_E3A_COF_ID' field.
   * @return The value of the 'SPT_E3A_COF_ID' field.
   */
  public java.lang.Long getSPTE3ACOFID() {
    return SPT_E3A_COF_ID;
  }


  /**
   * Sets the value of the 'SPT_E3A_COF_ID' field.
   * @param value the value to set.
   */
  public void setSPTE3ACOFID(java.lang.Long value) {
    this.SPT_E3A_COF_ID = value;
  }

  /**
   * Gets the value of the 'E3_KILL_DATE' field.
   * @return The value of the 'E3_KILL_DATE' field.
   */
  public java.lang.CharSequence getE3KILLDATE() {
    return E3_KILL_DATE;
  }


  /**
   * Sets the value of the 'E3_KILL_DATE' field.
   * @param value the value to set.
   */
  public void setE3KILLDATE(java.lang.CharSequence value) {
    this.E3_KILL_DATE = value;
  }

  /**
   * Gets the value of the 'E3_KILL_DAY' field.
   * @return The value of the 'E3_KILL_DAY' field.
   */
  public java.lang.Double getE3KILLDAY() {
    return E3_KILL_DAY;
  }


  /**
   * Sets the value of the 'E3_KILL_DAY' field.
   * @param value the value to set.
   */
  public void setE3KILLDAY(java.lang.Double value) {
    this.E3_KILL_DAY = value;
  }

  /**
   * Gets the value of the 'CDC_KEY' field.
   * @return The value of the 'CDC_KEY' field.
   */
  public java.lang.Double getCDCKEY() {
    return CDC_KEY;
  }


  /**
   * Sets the value of the 'CDC_KEY' field.
   * @param value the value to set.
   */
  public void setCDCKEY(java.lang.Double value) {
    this.CDC_KEY = value;
  }

  /**
   * Gets the value of the 'CONVERTED_DT' field.
   * @return The value of the 'CONVERTED_DT' field.
   */
  public java.lang.CharSequence getCONVERTEDDT() {
    return CONVERTED_DT;
  }


  /**
   * Sets the value of the 'CONVERTED_DT' field.
   * @param value the value to set.
   */
  public void setCONVERTEDDT(java.lang.CharSequence value) {
    this.CONVERTED_DT = value;
  }

  /**
   * Gets the value of the 'JIPPED_IND' field.
   * @return The value of the 'JIPPED_IND' field.
   */
  public java.lang.CharSequence getJIPPEDIND() {
    return JIPPED_IND;
  }


  /**
   * Sets the value of the 'JIPPED_IND' field.
   * @param value the value to set.
   */
  public void setJIPPEDIND(java.lang.CharSequence value) {
    this.JIPPED_IND = value;
  }

  /**
   * Gets the value of the 'SPT_RADIO_BLOCK_DURA' field.
   * @return The value of the 'SPT_RADIO_BLOCK_DURA' field.
   */
  public java.lang.Long getSPTRADIOBLOCKDURA() {
    return SPT_RADIO_BLOCK_DURA;
  }


  /**
   * Sets the value of the 'SPT_RADIO_BLOCK_DURA' field.
   * @param value the value to set.
   */
  public void setSPTRADIOBLOCKDURA(java.lang.Long value) {
    this.SPT_RADIO_BLOCK_DURA = value;
  }

  /**
   * Gets the value of the 'E3_LIVE_REPLAY' field.
   * @return The value of the 'E3_LIVE_REPLAY' field.
   */
  public java.lang.CharSequence getE3LIVEREPLAY() {
    return E3_LIVE_REPLAY;
  }


  /**
   * Sets the value of the 'E3_LIVE_REPLAY' field.
   * @param value the value to set.
   */
  public void setE3LIVEREPLAY(java.lang.CharSequence value) {
    this.E3_LIVE_REPLAY = value;
  }

  /**
   * Gets the value of the 'SRC_KEY_VAL' field.
   * @return The value of the 'SRC_KEY_VAL' field.
   */
  public java.lang.CharSequence getSRCKEYVAL() {
    return SRC_KEY_VAL;
  }


  /**
   * Sets the value of the 'SRC_KEY_VAL' field.
   * @param value the value to set.
   */
  public void setSRCKEYVAL(java.lang.CharSequence value) {
    this.SRC_KEY_VAL = value;
  }

  /**
   * Gets the value of the 'SRC_CDC_OPER_NM' field.
   * @return The value of the 'SRC_CDC_OPER_NM' field.
   */
  public java.lang.CharSequence getSRCCDCOPERNM() {
    return SRC_CDC_OPER_NM;
  }


  /**
   * Sets the value of the 'SRC_CDC_OPER_NM' field.
   * @param value the value to set.
   */
  public void setSRCCDCOPERNM(java.lang.CharSequence value) {
    this.SRC_CDC_OPER_NM = value;
  }

  /**
   * Gets the value of the 'SRC_COMMIT_DT_UTC' field.
   * @return The value of the 'SRC_COMMIT_DT_UTC' field.
   */
  public java.lang.CharSequence getSRCCOMMITDTUTC() {
    return SRC_COMMIT_DT_UTC;
  }


  /**
   * Sets the value of the 'SRC_COMMIT_DT_UTC' field.
   * @param value the value to set.
   */
  public void setSRCCOMMITDTUTC(java.lang.CharSequence value) {
    this.SRC_COMMIT_DT_UTC = value;
  }

  /**
   * Gets the value of the 'TRG_CRT_DT_PART_UTC' field.
   * @return The value of the 'TRG_CRT_DT_PART_UTC' field.
   */
  public java.lang.CharSequence getTRGCRTDTPARTUTC() {
    return TRG_CRT_DT_PART_UTC;
  }


  /**
   * Sets the value of the 'TRG_CRT_DT_PART_UTC' field.
   * @param value the value to set.
   */
  public void setTRGCRTDTPARTUTC(java.lang.CharSequence value) {
    this.TRG_CRT_DT_PART_UTC = value;
  }

  /**
   * Gets the value of the 'SRC_SCHEMA_NM' field.
   * @return The value of the 'SRC_SCHEMA_NM' field.
   */
  public java.lang.CharSequence getSRCSCHEMANM() {
    return SRC_SCHEMA_NM;
  }


  /**
   * Sets the value of the 'SRC_SCHEMA_NM' field.
   * @param value the value to set.
   */
  public void setSRCSCHEMANM(java.lang.CharSequence value) {
    this.SRC_SCHEMA_NM = value;
  }

  /**
   * Creates a new LNDCDC_NCS_TCS_SPORTS RecordBuilder.
   * @return A new LNDCDC_NCS_TCS_SPORTS RecordBuilder
   */
  public static org.LNDCDC_NCS_TCS.SPORTS.apache.nifi.LNDCDC_NCS_TCS_SPORTS.Builder newBuilder() {
    return new org.LNDCDC_NCS_TCS.SPORTS.apache.nifi.LNDCDC_NCS_TCS_SPORTS.Builder();
  }

  /**
   * Creates a new LNDCDC_NCS_TCS_SPORTS RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new LNDCDC_NCS_TCS_SPORTS RecordBuilder
   */
  public static org.LNDCDC_NCS_TCS.SPORTS.apache.nifi.LNDCDC_NCS_TCS_SPORTS.Builder newBuilder(org.LNDCDC_NCS_TCS.SPORTS.apache.nifi.LNDCDC_NCS_TCS_SPORTS.Builder other) {
    if (other == null) {
      return new org.LNDCDC_NCS_TCS.SPORTS.apache.nifi.LNDCDC_NCS_TCS_SPORTS.Builder();
    } else {
      return new org.LNDCDC_NCS_TCS.SPORTS.apache.nifi.LNDCDC_NCS_TCS_SPORTS.Builder(other);
    }
  }

  /**
   * Creates a new LNDCDC_NCS_TCS_SPORTS RecordBuilder by copying an existing LNDCDC_NCS_TCS_SPORTS instance.
   * @param other The existing instance to copy.
   * @return A new LNDCDC_NCS_TCS_SPORTS RecordBuilder
   */
  public static org.LNDCDC_NCS_TCS.SPORTS.apache.nifi.LNDCDC_NCS_TCS_SPORTS.Builder newBuilder(org.LNDCDC_NCS_TCS.SPORTS.apache.nifi.LNDCDC_NCS_TCS_SPORTS other) {
    if (other == null) {
      return new org.LNDCDC_NCS_TCS.SPORTS.apache.nifi.LNDCDC_NCS_TCS_SPORTS.Builder();
    } else {
      return new org.LNDCDC_NCS_TCS.SPORTS.apache.nifi.LNDCDC_NCS_TCS_SPORTS.Builder(other);
    }
  }

  /**
   * RecordBuilder for LNDCDC_NCS_TCS_SPORTS instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<LNDCDC_NCS_TCS_SPORTS>
    implements org.apache.avro.data.RecordBuilder<LNDCDC_NCS_TCS_SPORTS> {

    private java.lang.CharSequence SPT_SPCA_CAT;
    private java.lang.CharSequence SPT_PGM_CODE;
    private java.lang.CharSequence SPT_28_58_IND;
    private java.lang.CharSequence SPT_TEAM_SPORT_IND;
    private java.lang.CharSequence SPT_CLOSE_CAPTION_IND;
    private java.lang.CharSequence SPT_SHOW_IND;
    private java.lang.CharSequence SPT_ROS_IND;
    private java.lang.CharSequence SPT_PGM_NAME;
    private java.lang.CharSequence SPT_ROS_START_DT;
    private java.lang.Long SPT_NUM_EXCLUDED_28_58;
    private java.lang.Long SPT_DEFLT_EXPIR_TAPE;
    private java.lang.CharSequence SPT_NIEL_CAT;
    private java.lang.CharSequence SPT_NIEL_SHORT_NAME;
    private java.lang.CharSequence SPT_ROS_END_DT;
    private java.lang.Long SPT_DEFLT_EXPIR_SDT;
    private java.lang.CharSequence SPT_GENDER;
    private java.lang.Long SPT_DEFLT_EXPIR_LIVE;
    private java.lang.CharSequence SPT_LVL;
    private java.lang.CharSequence SPT_NIEL_QTRLY_NAME;
    private java.lang.Double SPT_SEASON_END;
    private java.lang.Double SPT_SEASON_START;
    private java.lang.CharSequence SPT_SEASON_YEAR_IND;
    private java.lang.CharSequence SPT_APF_IND;
    private java.lang.CharSequence SPT_28_58_NET_REF;
    private java.lang.CharSequence SPT_CREATE_REMARKS;
    private java.lang.CharSequence SPT_NIEL_LATIN_NAME;
    private java.lang.Long SPT_DFLT_STADIUM_ID;
    private java.lang.CharSequence LANGUAGE_IND;
    private java.lang.CharSequence SPT_LST_NAME;
    private java.lang.CharSequence SPT_GENERIC_IND;
    private java.lang.CharSequence SPT_NLSN_SPCA_CAT;
    private java.lang.CharSequence SPT_NLSN_SPT_PGM_CODE;
    private java.lang.CharSequence SPT_RUNSHEET_UPDATE_IND;
    private java.lang.CharSequence SPT_COMMENTS;
    private java.lang.CharSequence SPT_BACKGROUND;
    private java.lang.CharSequence SPT_FOREGROUND;
    private java.lang.CharSequence SPT_ARCHIVE_IND;
    private java.lang.CharSequence STUDIO_SHOW_IND;
    private java.lang.CharSequence COVENANT_IND;
    private java.lang.Long COVENANT_CODE;
    private java.lang.CharSequence COVENANT_STUDIO_IND;
    private java.lang.CharSequence SOURCE;
    private java.lang.CharSequence NON_ESPN_IND;
    private java.lang.CharSequence SPT_COPYRIGHT_IND;
    private java.lang.CharSequence SPT_PROD_RESP_IND;
    private java.lang.CharSequence SPT_US_SITE_IND;
    private java.lang.CharSequence EXCEPTION_LISTINGS;
    private java.lang.Long SPT_PROGRAM_ID;
    private java.lang.Double SPT_LEAGUE_CODE;
    private java.lang.Long SPT_E3_CAT_ID;
    private java.lang.Long SPT_E3A_COF_ID;
    private java.lang.CharSequence E3_KILL_DATE;
    private java.lang.Double E3_KILL_DAY;
    private java.lang.Double CDC_KEY;
    private java.lang.CharSequence CONVERTED_DT;
    private java.lang.CharSequence JIPPED_IND;
    private java.lang.Long SPT_RADIO_BLOCK_DURA;
    private java.lang.CharSequence E3_LIVE_REPLAY;
    private java.lang.CharSequence SRC_KEY_VAL;
    private java.lang.CharSequence SRC_CDC_OPER_NM;
    private java.lang.CharSequence SRC_COMMIT_DT_UTC;
    private java.lang.CharSequence TRG_CRT_DT_PART_UTC;
    private java.lang.CharSequence SRC_SCHEMA_NM;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(org.LNDCDC_NCS_TCS.SPORTS.apache.nifi.LNDCDC_NCS_TCS_SPORTS.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.SPT_SPCA_CAT)) {
        this.SPT_SPCA_CAT = data().deepCopy(fields()[0].schema(), other.SPT_SPCA_CAT);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.SPT_PGM_CODE)) {
        this.SPT_PGM_CODE = data().deepCopy(fields()[1].schema(), other.SPT_PGM_CODE);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.SPT_28_58_IND)) {
        this.SPT_28_58_IND = data().deepCopy(fields()[2].schema(), other.SPT_28_58_IND);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.SPT_TEAM_SPORT_IND)) {
        this.SPT_TEAM_SPORT_IND = data().deepCopy(fields()[3].schema(), other.SPT_TEAM_SPORT_IND);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.SPT_CLOSE_CAPTION_IND)) {
        this.SPT_CLOSE_CAPTION_IND = data().deepCopy(fields()[4].schema(), other.SPT_CLOSE_CAPTION_IND);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.SPT_SHOW_IND)) {
        this.SPT_SHOW_IND = data().deepCopy(fields()[5].schema(), other.SPT_SHOW_IND);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.SPT_ROS_IND)) {
        this.SPT_ROS_IND = data().deepCopy(fields()[6].schema(), other.SPT_ROS_IND);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.SPT_PGM_NAME)) {
        this.SPT_PGM_NAME = data().deepCopy(fields()[7].schema(), other.SPT_PGM_NAME);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.SPT_ROS_START_DT)) {
        this.SPT_ROS_START_DT = data().deepCopy(fields()[8].schema(), other.SPT_ROS_START_DT);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
      if (isValidValue(fields()[9], other.SPT_NUM_EXCLUDED_28_58)) {
        this.SPT_NUM_EXCLUDED_28_58 = data().deepCopy(fields()[9].schema(), other.SPT_NUM_EXCLUDED_28_58);
        fieldSetFlags()[9] = other.fieldSetFlags()[9];
      }
      if (isValidValue(fields()[10], other.SPT_DEFLT_EXPIR_TAPE)) {
        this.SPT_DEFLT_EXPIR_TAPE = data().deepCopy(fields()[10].schema(), other.SPT_DEFLT_EXPIR_TAPE);
        fieldSetFlags()[10] = other.fieldSetFlags()[10];
      }
      if (isValidValue(fields()[11], other.SPT_NIEL_CAT)) {
        this.SPT_NIEL_CAT = data().deepCopy(fields()[11].schema(), other.SPT_NIEL_CAT);
        fieldSetFlags()[11] = other.fieldSetFlags()[11];
      }
      if (isValidValue(fields()[12], other.SPT_NIEL_SHORT_NAME)) {
        this.SPT_NIEL_SHORT_NAME = data().deepCopy(fields()[12].schema(), other.SPT_NIEL_SHORT_NAME);
        fieldSetFlags()[12] = other.fieldSetFlags()[12];
      }
      if (isValidValue(fields()[13], other.SPT_ROS_END_DT)) {
        this.SPT_ROS_END_DT = data().deepCopy(fields()[13].schema(), other.SPT_ROS_END_DT);
        fieldSetFlags()[13] = other.fieldSetFlags()[13];
      }
      if (isValidValue(fields()[14], other.SPT_DEFLT_EXPIR_SDT)) {
        this.SPT_DEFLT_EXPIR_SDT = data().deepCopy(fields()[14].schema(), other.SPT_DEFLT_EXPIR_SDT);
        fieldSetFlags()[14] = other.fieldSetFlags()[14];
      }
      if (isValidValue(fields()[15], other.SPT_GENDER)) {
        this.SPT_GENDER = data().deepCopy(fields()[15].schema(), other.SPT_GENDER);
        fieldSetFlags()[15] = other.fieldSetFlags()[15];
      }
      if (isValidValue(fields()[16], other.SPT_DEFLT_EXPIR_LIVE)) {
        this.SPT_DEFLT_EXPIR_LIVE = data().deepCopy(fields()[16].schema(), other.SPT_DEFLT_EXPIR_LIVE);
        fieldSetFlags()[16] = other.fieldSetFlags()[16];
      }
      if (isValidValue(fields()[17], other.SPT_LVL)) {
        this.SPT_LVL = data().deepCopy(fields()[17].schema(), other.SPT_LVL);
        fieldSetFlags()[17] = other.fieldSetFlags()[17];
      }
      if (isValidValue(fields()[18], other.SPT_NIEL_QTRLY_NAME)) {
        this.SPT_NIEL_QTRLY_NAME = data().deepCopy(fields()[18].schema(), other.SPT_NIEL_QTRLY_NAME);
        fieldSetFlags()[18] = other.fieldSetFlags()[18];
      }
      if (isValidValue(fields()[19], other.SPT_SEASON_END)) {
        this.SPT_SEASON_END = data().deepCopy(fields()[19].schema(), other.SPT_SEASON_END);
        fieldSetFlags()[19] = other.fieldSetFlags()[19];
      }
      if (isValidValue(fields()[20], other.SPT_SEASON_START)) {
        this.SPT_SEASON_START = data().deepCopy(fields()[20].schema(), other.SPT_SEASON_START);
        fieldSetFlags()[20] = other.fieldSetFlags()[20];
      }
      if (isValidValue(fields()[21], other.SPT_SEASON_YEAR_IND)) {
        this.SPT_SEASON_YEAR_IND = data().deepCopy(fields()[21].schema(), other.SPT_SEASON_YEAR_IND);
        fieldSetFlags()[21] = other.fieldSetFlags()[21];
      }
      if (isValidValue(fields()[22], other.SPT_APF_IND)) {
        this.SPT_APF_IND = data().deepCopy(fields()[22].schema(), other.SPT_APF_IND);
        fieldSetFlags()[22] = other.fieldSetFlags()[22];
      }
      if (isValidValue(fields()[23], other.SPT_28_58_NET_REF)) {
        this.SPT_28_58_NET_REF = data().deepCopy(fields()[23].schema(), other.SPT_28_58_NET_REF);
        fieldSetFlags()[23] = other.fieldSetFlags()[23];
      }
      if (isValidValue(fields()[24], other.SPT_CREATE_REMARKS)) {
        this.SPT_CREATE_REMARKS = data().deepCopy(fields()[24].schema(), other.SPT_CREATE_REMARKS);
        fieldSetFlags()[24] = other.fieldSetFlags()[24];
      }
      if (isValidValue(fields()[25], other.SPT_NIEL_LATIN_NAME)) {
        this.SPT_NIEL_LATIN_NAME = data().deepCopy(fields()[25].schema(), other.SPT_NIEL_LATIN_NAME);
        fieldSetFlags()[25] = other.fieldSetFlags()[25];
      }
      if (isValidValue(fields()[26], other.SPT_DFLT_STADIUM_ID)) {
        this.SPT_DFLT_STADIUM_ID = data().deepCopy(fields()[26].schema(), other.SPT_DFLT_STADIUM_ID);
        fieldSetFlags()[26] = other.fieldSetFlags()[26];
      }
      if (isValidValue(fields()[27], other.LANGUAGE_IND)) {
        this.LANGUAGE_IND = data().deepCopy(fields()[27].schema(), other.LANGUAGE_IND);
        fieldSetFlags()[27] = other.fieldSetFlags()[27];
      }
      if (isValidValue(fields()[28], other.SPT_LST_NAME)) {
        this.SPT_LST_NAME = data().deepCopy(fields()[28].schema(), other.SPT_LST_NAME);
        fieldSetFlags()[28] = other.fieldSetFlags()[28];
      }
      if (isValidValue(fields()[29], other.SPT_GENERIC_IND)) {
        this.SPT_GENERIC_IND = data().deepCopy(fields()[29].schema(), other.SPT_GENERIC_IND);
        fieldSetFlags()[29] = other.fieldSetFlags()[29];
      }
      if (isValidValue(fields()[30], other.SPT_NLSN_SPCA_CAT)) {
        this.SPT_NLSN_SPCA_CAT = data().deepCopy(fields()[30].schema(), other.SPT_NLSN_SPCA_CAT);
        fieldSetFlags()[30] = other.fieldSetFlags()[30];
      }
      if (isValidValue(fields()[31], other.SPT_NLSN_SPT_PGM_CODE)) {
        this.SPT_NLSN_SPT_PGM_CODE = data().deepCopy(fields()[31].schema(), other.SPT_NLSN_SPT_PGM_CODE);
        fieldSetFlags()[31] = other.fieldSetFlags()[31];
      }
      if (isValidValue(fields()[32], other.SPT_RUNSHEET_UPDATE_IND)) {
        this.SPT_RUNSHEET_UPDATE_IND = data().deepCopy(fields()[32].schema(), other.SPT_RUNSHEET_UPDATE_IND);
        fieldSetFlags()[32] = other.fieldSetFlags()[32];
      }
      if (isValidValue(fields()[33], other.SPT_COMMENTS)) {
        this.SPT_COMMENTS = data().deepCopy(fields()[33].schema(), other.SPT_COMMENTS);
        fieldSetFlags()[33] = other.fieldSetFlags()[33];
      }
      if (isValidValue(fields()[34], other.SPT_BACKGROUND)) {
        this.SPT_BACKGROUND = data().deepCopy(fields()[34].schema(), other.SPT_BACKGROUND);
        fieldSetFlags()[34] = other.fieldSetFlags()[34];
      }
      if (isValidValue(fields()[35], other.SPT_FOREGROUND)) {
        this.SPT_FOREGROUND = data().deepCopy(fields()[35].schema(), other.SPT_FOREGROUND);
        fieldSetFlags()[35] = other.fieldSetFlags()[35];
      }
      if (isValidValue(fields()[36], other.SPT_ARCHIVE_IND)) {
        this.SPT_ARCHIVE_IND = data().deepCopy(fields()[36].schema(), other.SPT_ARCHIVE_IND);
        fieldSetFlags()[36] = other.fieldSetFlags()[36];
      }
      if (isValidValue(fields()[37], other.STUDIO_SHOW_IND)) {
        this.STUDIO_SHOW_IND = data().deepCopy(fields()[37].schema(), other.STUDIO_SHOW_IND);
        fieldSetFlags()[37] = other.fieldSetFlags()[37];
      }
      if (isValidValue(fields()[38], other.COVENANT_IND)) {
        this.COVENANT_IND = data().deepCopy(fields()[38].schema(), other.COVENANT_IND);
        fieldSetFlags()[38] = other.fieldSetFlags()[38];
      }
      if (isValidValue(fields()[39], other.COVENANT_CODE)) {
        this.COVENANT_CODE = data().deepCopy(fields()[39].schema(), other.COVENANT_CODE);
        fieldSetFlags()[39] = other.fieldSetFlags()[39];
      }
      if (isValidValue(fields()[40], other.COVENANT_STUDIO_IND)) {
        this.COVENANT_STUDIO_IND = data().deepCopy(fields()[40].schema(), other.COVENANT_STUDIO_IND);
        fieldSetFlags()[40] = other.fieldSetFlags()[40];
      }
      if (isValidValue(fields()[41], other.SOURCE)) {
        this.SOURCE = data().deepCopy(fields()[41].schema(), other.SOURCE);
        fieldSetFlags()[41] = other.fieldSetFlags()[41];
      }
      if (isValidValue(fields()[42], other.NON_ESPN_IND)) {
        this.NON_ESPN_IND = data().deepCopy(fields()[42].schema(), other.NON_ESPN_IND);
        fieldSetFlags()[42] = other.fieldSetFlags()[42];
      }
      if (isValidValue(fields()[43], other.SPT_COPYRIGHT_IND)) {
        this.SPT_COPYRIGHT_IND = data().deepCopy(fields()[43].schema(), other.SPT_COPYRIGHT_IND);
        fieldSetFlags()[43] = other.fieldSetFlags()[43];
      }
      if (isValidValue(fields()[44], other.SPT_PROD_RESP_IND)) {
        this.SPT_PROD_RESP_IND = data().deepCopy(fields()[44].schema(), other.SPT_PROD_RESP_IND);
        fieldSetFlags()[44] = other.fieldSetFlags()[44];
      }
      if (isValidValue(fields()[45], other.SPT_US_SITE_IND)) {
        this.SPT_US_SITE_IND = data().deepCopy(fields()[45].schema(), other.SPT_US_SITE_IND);
        fieldSetFlags()[45] = other.fieldSetFlags()[45];
      }
      if (isValidValue(fields()[46], other.EXCEPTION_LISTINGS)) {
        this.EXCEPTION_LISTINGS = data().deepCopy(fields()[46].schema(), other.EXCEPTION_LISTINGS);
        fieldSetFlags()[46] = other.fieldSetFlags()[46];
      }
      if (isValidValue(fields()[47], other.SPT_PROGRAM_ID)) {
        this.SPT_PROGRAM_ID = data().deepCopy(fields()[47].schema(), other.SPT_PROGRAM_ID);
        fieldSetFlags()[47] = other.fieldSetFlags()[47];
      }
      if (isValidValue(fields()[48], other.SPT_LEAGUE_CODE)) {
        this.SPT_LEAGUE_CODE = data().deepCopy(fields()[48].schema(), other.SPT_LEAGUE_CODE);
        fieldSetFlags()[48] = other.fieldSetFlags()[48];
      }
      if (isValidValue(fields()[49], other.SPT_E3_CAT_ID)) {
        this.SPT_E3_CAT_ID = data().deepCopy(fields()[49].schema(), other.SPT_E3_CAT_ID);
        fieldSetFlags()[49] = other.fieldSetFlags()[49];
      }
      if (isValidValue(fields()[50], other.SPT_E3A_COF_ID)) {
        this.SPT_E3A_COF_ID = data().deepCopy(fields()[50].schema(), other.SPT_E3A_COF_ID);
        fieldSetFlags()[50] = other.fieldSetFlags()[50];
      }
      if (isValidValue(fields()[51], other.E3_KILL_DATE)) {
        this.E3_KILL_DATE = data().deepCopy(fields()[51].schema(), other.E3_KILL_DATE);
        fieldSetFlags()[51] = other.fieldSetFlags()[51];
      }
      if (isValidValue(fields()[52], other.E3_KILL_DAY)) {
        this.E3_KILL_DAY = data().deepCopy(fields()[52].schema(), other.E3_KILL_DAY);
        fieldSetFlags()[52] = other.fieldSetFlags()[52];
      }
      if (isValidValue(fields()[53], other.CDC_KEY)) {
        this.CDC_KEY = data().deepCopy(fields()[53].schema(), other.CDC_KEY);
        fieldSetFlags()[53] = other.fieldSetFlags()[53];
      }
      if (isValidValue(fields()[54], other.CONVERTED_DT)) {
        this.CONVERTED_DT = data().deepCopy(fields()[54].schema(), other.CONVERTED_DT);
        fieldSetFlags()[54] = other.fieldSetFlags()[54];
      }
      if (isValidValue(fields()[55], other.JIPPED_IND)) {
        this.JIPPED_IND = data().deepCopy(fields()[55].schema(), other.JIPPED_IND);
        fieldSetFlags()[55] = other.fieldSetFlags()[55];
      }
      if (isValidValue(fields()[56], other.SPT_RADIO_BLOCK_DURA)) {
        this.SPT_RADIO_BLOCK_DURA = data().deepCopy(fields()[56].schema(), other.SPT_RADIO_BLOCK_DURA);
        fieldSetFlags()[56] = other.fieldSetFlags()[56];
      }
      if (isValidValue(fields()[57], other.E3_LIVE_REPLAY)) {
        this.E3_LIVE_REPLAY = data().deepCopy(fields()[57].schema(), other.E3_LIVE_REPLAY);
        fieldSetFlags()[57] = other.fieldSetFlags()[57];
      }
      if (isValidValue(fields()[58], other.SRC_KEY_VAL)) {
        this.SRC_KEY_VAL = data().deepCopy(fields()[58].schema(), other.SRC_KEY_VAL);
        fieldSetFlags()[58] = other.fieldSetFlags()[58];
      }
      if (isValidValue(fields()[59], other.SRC_CDC_OPER_NM)) {
        this.SRC_CDC_OPER_NM = data().deepCopy(fields()[59].schema(), other.SRC_CDC_OPER_NM);
        fieldSetFlags()[59] = other.fieldSetFlags()[59];
      }
      if (isValidValue(fields()[60], other.SRC_COMMIT_DT_UTC)) {
        this.SRC_COMMIT_DT_UTC = data().deepCopy(fields()[60].schema(), other.SRC_COMMIT_DT_UTC);
        fieldSetFlags()[60] = other.fieldSetFlags()[60];
      }
      if (isValidValue(fields()[61], other.TRG_CRT_DT_PART_UTC)) {
        this.TRG_CRT_DT_PART_UTC = data().deepCopy(fields()[61].schema(), other.TRG_CRT_DT_PART_UTC);
        fieldSetFlags()[61] = other.fieldSetFlags()[61];
      }
      if (isValidValue(fields()[62], other.SRC_SCHEMA_NM)) {
        this.SRC_SCHEMA_NM = data().deepCopy(fields()[62].schema(), other.SRC_SCHEMA_NM);
        fieldSetFlags()[62] = other.fieldSetFlags()[62];
      }
    }

    /**
     * Creates a Builder by copying an existing LNDCDC_NCS_TCS_SPORTS instance
     * @param other The existing instance to copy.
     */
    private Builder(org.LNDCDC_NCS_TCS.SPORTS.apache.nifi.LNDCDC_NCS_TCS_SPORTS other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.SPT_SPCA_CAT)) {
        this.SPT_SPCA_CAT = data().deepCopy(fields()[0].schema(), other.SPT_SPCA_CAT);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.SPT_PGM_CODE)) {
        this.SPT_PGM_CODE = data().deepCopy(fields()[1].schema(), other.SPT_PGM_CODE);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.SPT_28_58_IND)) {
        this.SPT_28_58_IND = data().deepCopy(fields()[2].schema(), other.SPT_28_58_IND);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.SPT_TEAM_SPORT_IND)) {
        this.SPT_TEAM_SPORT_IND = data().deepCopy(fields()[3].schema(), other.SPT_TEAM_SPORT_IND);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.SPT_CLOSE_CAPTION_IND)) {
        this.SPT_CLOSE_CAPTION_IND = data().deepCopy(fields()[4].schema(), other.SPT_CLOSE_CAPTION_IND);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.SPT_SHOW_IND)) {
        this.SPT_SHOW_IND = data().deepCopy(fields()[5].schema(), other.SPT_SHOW_IND);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.SPT_ROS_IND)) {
        this.SPT_ROS_IND = data().deepCopy(fields()[6].schema(), other.SPT_ROS_IND);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.SPT_PGM_NAME)) {
        this.SPT_PGM_NAME = data().deepCopy(fields()[7].schema(), other.SPT_PGM_NAME);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.SPT_ROS_START_DT)) {
        this.SPT_ROS_START_DT = data().deepCopy(fields()[8].schema(), other.SPT_ROS_START_DT);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.SPT_NUM_EXCLUDED_28_58)) {
        this.SPT_NUM_EXCLUDED_28_58 = data().deepCopy(fields()[9].schema(), other.SPT_NUM_EXCLUDED_28_58);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.SPT_DEFLT_EXPIR_TAPE)) {
        this.SPT_DEFLT_EXPIR_TAPE = data().deepCopy(fields()[10].schema(), other.SPT_DEFLT_EXPIR_TAPE);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.SPT_NIEL_CAT)) {
        this.SPT_NIEL_CAT = data().deepCopy(fields()[11].schema(), other.SPT_NIEL_CAT);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.SPT_NIEL_SHORT_NAME)) {
        this.SPT_NIEL_SHORT_NAME = data().deepCopy(fields()[12].schema(), other.SPT_NIEL_SHORT_NAME);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.SPT_ROS_END_DT)) {
        this.SPT_ROS_END_DT = data().deepCopy(fields()[13].schema(), other.SPT_ROS_END_DT);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.SPT_DEFLT_EXPIR_SDT)) {
        this.SPT_DEFLT_EXPIR_SDT = data().deepCopy(fields()[14].schema(), other.SPT_DEFLT_EXPIR_SDT);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.SPT_GENDER)) {
        this.SPT_GENDER = data().deepCopy(fields()[15].schema(), other.SPT_GENDER);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.SPT_DEFLT_EXPIR_LIVE)) {
        this.SPT_DEFLT_EXPIR_LIVE = data().deepCopy(fields()[16].schema(), other.SPT_DEFLT_EXPIR_LIVE);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.SPT_LVL)) {
        this.SPT_LVL = data().deepCopy(fields()[17].schema(), other.SPT_LVL);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.SPT_NIEL_QTRLY_NAME)) {
        this.SPT_NIEL_QTRLY_NAME = data().deepCopy(fields()[18].schema(), other.SPT_NIEL_QTRLY_NAME);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.SPT_SEASON_END)) {
        this.SPT_SEASON_END = data().deepCopy(fields()[19].schema(), other.SPT_SEASON_END);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.SPT_SEASON_START)) {
        this.SPT_SEASON_START = data().deepCopy(fields()[20].schema(), other.SPT_SEASON_START);
        fieldSetFlags()[20] = true;
      }
      if (isValidValue(fields()[21], other.SPT_SEASON_YEAR_IND)) {
        this.SPT_SEASON_YEAR_IND = data().deepCopy(fields()[21].schema(), other.SPT_SEASON_YEAR_IND);
        fieldSetFlags()[21] = true;
      }
      if (isValidValue(fields()[22], other.SPT_APF_IND)) {
        this.SPT_APF_IND = data().deepCopy(fields()[22].schema(), other.SPT_APF_IND);
        fieldSetFlags()[22] = true;
      }
      if (isValidValue(fields()[23], other.SPT_28_58_NET_REF)) {
        this.SPT_28_58_NET_REF = data().deepCopy(fields()[23].schema(), other.SPT_28_58_NET_REF);
        fieldSetFlags()[23] = true;
      }
      if (isValidValue(fields()[24], other.SPT_CREATE_REMARKS)) {
        this.SPT_CREATE_REMARKS = data().deepCopy(fields()[24].schema(), other.SPT_CREATE_REMARKS);
        fieldSetFlags()[24] = true;
      }
      if (isValidValue(fields()[25], other.SPT_NIEL_LATIN_NAME)) {
        this.SPT_NIEL_LATIN_NAME = data().deepCopy(fields()[25].schema(), other.SPT_NIEL_LATIN_NAME);
        fieldSetFlags()[25] = true;
      }
      if (isValidValue(fields()[26], other.SPT_DFLT_STADIUM_ID)) {
        this.SPT_DFLT_STADIUM_ID = data().deepCopy(fields()[26].schema(), other.SPT_DFLT_STADIUM_ID);
        fieldSetFlags()[26] = true;
      }
      if (isValidValue(fields()[27], other.LANGUAGE_IND)) {
        this.LANGUAGE_IND = data().deepCopy(fields()[27].schema(), other.LANGUAGE_IND);
        fieldSetFlags()[27] = true;
      }
      if (isValidValue(fields()[28], other.SPT_LST_NAME)) {
        this.SPT_LST_NAME = data().deepCopy(fields()[28].schema(), other.SPT_LST_NAME);
        fieldSetFlags()[28] = true;
      }
      if (isValidValue(fields()[29], other.SPT_GENERIC_IND)) {
        this.SPT_GENERIC_IND = data().deepCopy(fields()[29].schema(), other.SPT_GENERIC_IND);
        fieldSetFlags()[29] = true;
      }
      if (isValidValue(fields()[30], other.SPT_NLSN_SPCA_CAT)) {
        this.SPT_NLSN_SPCA_CAT = data().deepCopy(fields()[30].schema(), other.SPT_NLSN_SPCA_CAT);
        fieldSetFlags()[30] = true;
      }
      if (isValidValue(fields()[31], other.SPT_NLSN_SPT_PGM_CODE)) {
        this.SPT_NLSN_SPT_PGM_CODE = data().deepCopy(fields()[31].schema(), other.SPT_NLSN_SPT_PGM_CODE);
        fieldSetFlags()[31] = true;
      }
      if (isValidValue(fields()[32], other.SPT_RUNSHEET_UPDATE_IND)) {
        this.SPT_RUNSHEET_UPDATE_IND = data().deepCopy(fields()[32].schema(), other.SPT_RUNSHEET_UPDATE_IND);
        fieldSetFlags()[32] = true;
      }
      if (isValidValue(fields()[33], other.SPT_COMMENTS)) {
        this.SPT_COMMENTS = data().deepCopy(fields()[33].schema(), other.SPT_COMMENTS);
        fieldSetFlags()[33] = true;
      }
      if (isValidValue(fields()[34], other.SPT_BACKGROUND)) {
        this.SPT_BACKGROUND = data().deepCopy(fields()[34].schema(), other.SPT_BACKGROUND);
        fieldSetFlags()[34] = true;
      }
      if (isValidValue(fields()[35], other.SPT_FOREGROUND)) {
        this.SPT_FOREGROUND = data().deepCopy(fields()[35].schema(), other.SPT_FOREGROUND);
        fieldSetFlags()[35] = true;
      }
      if (isValidValue(fields()[36], other.SPT_ARCHIVE_IND)) {
        this.SPT_ARCHIVE_IND = data().deepCopy(fields()[36].schema(), other.SPT_ARCHIVE_IND);
        fieldSetFlags()[36] = true;
      }
      if (isValidValue(fields()[37], other.STUDIO_SHOW_IND)) {
        this.STUDIO_SHOW_IND = data().deepCopy(fields()[37].schema(), other.STUDIO_SHOW_IND);
        fieldSetFlags()[37] = true;
      }
      if (isValidValue(fields()[38], other.COVENANT_IND)) {
        this.COVENANT_IND = data().deepCopy(fields()[38].schema(), other.COVENANT_IND);
        fieldSetFlags()[38] = true;
      }
      if (isValidValue(fields()[39], other.COVENANT_CODE)) {
        this.COVENANT_CODE = data().deepCopy(fields()[39].schema(), other.COVENANT_CODE);
        fieldSetFlags()[39] = true;
      }
      if (isValidValue(fields()[40], other.COVENANT_STUDIO_IND)) {
        this.COVENANT_STUDIO_IND = data().deepCopy(fields()[40].schema(), other.COVENANT_STUDIO_IND);
        fieldSetFlags()[40] = true;
      }
      if (isValidValue(fields()[41], other.SOURCE)) {
        this.SOURCE = data().deepCopy(fields()[41].schema(), other.SOURCE);
        fieldSetFlags()[41] = true;
      }
      if (isValidValue(fields()[42], other.NON_ESPN_IND)) {
        this.NON_ESPN_IND = data().deepCopy(fields()[42].schema(), other.NON_ESPN_IND);
        fieldSetFlags()[42] = true;
      }
      if (isValidValue(fields()[43], other.SPT_COPYRIGHT_IND)) {
        this.SPT_COPYRIGHT_IND = data().deepCopy(fields()[43].schema(), other.SPT_COPYRIGHT_IND);
        fieldSetFlags()[43] = true;
      }
      if (isValidValue(fields()[44], other.SPT_PROD_RESP_IND)) {
        this.SPT_PROD_RESP_IND = data().deepCopy(fields()[44].schema(), other.SPT_PROD_RESP_IND);
        fieldSetFlags()[44] = true;
      }
      if (isValidValue(fields()[45], other.SPT_US_SITE_IND)) {
        this.SPT_US_SITE_IND = data().deepCopy(fields()[45].schema(), other.SPT_US_SITE_IND);
        fieldSetFlags()[45] = true;
      }
      if (isValidValue(fields()[46], other.EXCEPTION_LISTINGS)) {
        this.EXCEPTION_LISTINGS = data().deepCopy(fields()[46].schema(), other.EXCEPTION_LISTINGS);
        fieldSetFlags()[46] = true;
      }
      if (isValidValue(fields()[47], other.SPT_PROGRAM_ID)) {
        this.SPT_PROGRAM_ID = data().deepCopy(fields()[47].schema(), other.SPT_PROGRAM_ID);
        fieldSetFlags()[47] = true;
      }
      if (isValidValue(fields()[48], other.SPT_LEAGUE_CODE)) {
        this.SPT_LEAGUE_CODE = data().deepCopy(fields()[48].schema(), other.SPT_LEAGUE_CODE);
        fieldSetFlags()[48] = true;
      }
      if (isValidValue(fields()[49], other.SPT_E3_CAT_ID)) {
        this.SPT_E3_CAT_ID = data().deepCopy(fields()[49].schema(), other.SPT_E3_CAT_ID);
        fieldSetFlags()[49] = true;
      }
      if (isValidValue(fields()[50], other.SPT_E3A_COF_ID)) {
        this.SPT_E3A_COF_ID = data().deepCopy(fields()[50].schema(), other.SPT_E3A_COF_ID);
        fieldSetFlags()[50] = true;
      }
      if (isValidValue(fields()[51], other.E3_KILL_DATE)) {
        this.E3_KILL_DATE = data().deepCopy(fields()[51].schema(), other.E3_KILL_DATE);
        fieldSetFlags()[51] = true;
      }
      if (isValidValue(fields()[52], other.E3_KILL_DAY)) {
        this.E3_KILL_DAY = data().deepCopy(fields()[52].schema(), other.E3_KILL_DAY);
        fieldSetFlags()[52] = true;
      }
      if (isValidValue(fields()[53], other.CDC_KEY)) {
        this.CDC_KEY = data().deepCopy(fields()[53].schema(), other.CDC_KEY);
        fieldSetFlags()[53] = true;
      }
      if (isValidValue(fields()[54], other.CONVERTED_DT)) {
        this.CONVERTED_DT = data().deepCopy(fields()[54].schema(), other.CONVERTED_DT);
        fieldSetFlags()[54] = true;
      }
      if (isValidValue(fields()[55], other.JIPPED_IND)) {
        this.JIPPED_IND = data().deepCopy(fields()[55].schema(), other.JIPPED_IND);
        fieldSetFlags()[55] = true;
      }
      if (isValidValue(fields()[56], other.SPT_RADIO_BLOCK_DURA)) {
        this.SPT_RADIO_BLOCK_DURA = data().deepCopy(fields()[56].schema(), other.SPT_RADIO_BLOCK_DURA);
        fieldSetFlags()[56] = true;
      }
      if (isValidValue(fields()[57], other.E3_LIVE_REPLAY)) {
        this.E3_LIVE_REPLAY = data().deepCopy(fields()[57].schema(), other.E3_LIVE_REPLAY);
        fieldSetFlags()[57] = true;
      }
      if (isValidValue(fields()[58], other.SRC_KEY_VAL)) {
        this.SRC_KEY_VAL = data().deepCopy(fields()[58].schema(), other.SRC_KEY_VAL);
        fieldSetFlags()[58] = true;
      }
      if (isValidValue(fields()[59], other.SRC_CDC_OPER_NM)) {
        this.SRC_CDC_OPER_NM = data().deepCopy(fields()[59].schema(), other.SRC_CDC_OPER_NM);
        fieldSetFlags()[59] = true;
      }
      if (isValidValue(fields()[60], other.SRC_COMMIT_DT_UTC)) {
        this.SRC_COMMIT_DT_UTC = data().deepCopy(fields()[60].schema(), other.SRC_COMMIT_DT_UTC);
        fieldSetFlags()[60] = true;
      }
      if (isValidValue(fields()[61], other.TRG_CRT_DT_PART_UTC)) {
        this.TRG_CRT_DT_PART_UTC = data().deepCopy(fields()[61].schema(), other.TRG_CRT_DT_PART_UTC);
        fieldSetFlags()[61] = true;
      }
      if (isValidValue(fields()[62], other.SRC_SCHEMA_NM)) {
        this.SRC_SCHEMA_NM = data().deepCopy(fields()[62].schema(), other.SRC_SCHEMA_NM);
        fieldSetFlags()[62] = true;
      }
    }

    /**
      * Gets the value of the 'SPT_SPCA_CAT' field.
      * @return The value.
      */
    public java.lang.CharSequence getSPTSPCACAT() {
      return SPT_SPCA_CAT;
    }


    /**
      * Sets the value of the 'SPT_SPCA_CAT' field.
      * @param value The value of 'SPT_SPCA_CAT'.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.SPORTS.apache.nifi.LNDCDC_NCS_TCS_SPORTS.Builder setSPTSPCACAT(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.SPT_SPCA_CAT = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'SPT_SPCA_CAT' field has been set.
      * @return True if the 'SPT_SPCA_CAT' field has been set, false otherwise.
      */
    public boolean hasSPTSPCACAT() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'SPT_SPCA_CAT' field.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.SPORTS.apache.nifi.LNDCDC_NCS_TCS_SPORTS.Builder clearSPTSPCACAT() {
      SPT_SPCA_CAT = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'SPT_PGM_CODE' field.
      * @return The value.
      */
    public java.lang.CharSequence getSPTPGMCODE() {
      return SPT_PGM_CODE;
    }


    /**
      * Sets the value of the 'SPT_PGM_CODE' field.
      * @param value The value of 'SPT_PGM_CODE'.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.SPORTS.apache.nifi.LNDCDC_NCS_TCS_SPORTS.Builder setSPTPGMCODE(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.SPT_PGM_CODE = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'SPT_PGM_CODE' field has been set.
      * @return True if the 'SPT_PGM_CODE' field has been set, false otherwise.
      */
    public boolean hasSPTPGMCODE() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'SPT_PGM_CODE' field.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.SPORTS.apache.nifi.LNDCDC_NCS_TCS_SPORTS.Builder clearSPTPGMCODE() {
      SPT_PGM_CODE = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'SPT_28_58_IND' field.
      * @return The value.
      */
    public java.lang.CharSequence getSPT2858IND() {
      return SPT_28_58_IND;
    }


    /**
      * Sets the value of the 'SPT_28_58_IND' field.
      * @param value The value of 'SPT_28_58_IND'.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.SPORTS.apache.nifi.LNDCDC_NCS_TCS_SPORTS.Builder setSPT2858IND(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.SPT_28_58_IND = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'SPT_28_58_IND' field has been set.
      * @return True if the 'SPT_28_58_IND' field has been set, false otherwise.
      */
    public boolean hasSPT2858IND() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'SPT_28_58_IND' field.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.SPORTS.apache.nifi.LNDCDC_NCS_TCS_SPORTS.Builder clearSPT2858IND() {
      SPT_28_58_IND = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'SPT_TEAM_SPORT_IND' field.
      * @return The value.
      */
    public java.lang.CharSequence getSPTTEAMSPORTIND() {
      return SPT_TEAM_SPORT_IND;
    }


    /**
      * Sets the value of the 'SPT_TEAM_SPORT_IND' field.
      * @param value The value of 'SPT_TEAM_SPORT_IND'.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.SPORTS.apache.nifi.LNDCDC_NCS_TCS_SPORTS.Builder setSPTTEAMSPORTIND(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.SPT_TEAM_SPORT_IND = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'SPT_TEAM_SPORT_IND' field has been set.
      * @return True if the 'SPT_TEAM_SPORT_IND' field has been set, false otherwise.
      */
    public boolean hasSPTTEAMSPORTIND() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'SPT_TEAM_SPORT_IND' field.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.SPORTS.apache.nifi.LNDCDC_NCS_TCS_SPORTS.Builder clearSPTTEAMSPORTIND() {
      SPT_TEAM_SPORT_IND = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'SPT_CLOSE_CAPTION_IND' field.
      * @return The value.
      */
    public java.lang.CharSequence getSPTCLOSECAPTIONIND() {
      return SPT_CLOSE_CAPTION_IND;
    }


    /**
      * Sets the value of the 'SPT_CLOSE_CAPTION_IND' field.
      * @param value The value of 'SPT_CLOSE_CAPTION_IND'.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.SPORTS.apache.nifi.LNDCDC_NCS_TCS_SPORTS.Builder setSPTCLOSECAPTIONIND(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.SPT_CLOSE_CAPTION_IND = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'SPT_CLOSE_CAPTION_IND' field has been set.
      * @return True if the 'SPT_CLOSE_CAPTION_IND' field has been set, false otherwise.
      */
    public boolean hasSPTCLOSECAPTIONIND() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'SPT_CLOSE_CAPTION_IND' field.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.SPORTS.apache.nifi.LNDCDC_NCS_TCS_SPORTS.Builder clearSPTCLOSECAPTIONIND() {
      SPT_CLOSE_CAPTION_IND = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'SPT_SHOW_IND' field.
      * @return The value.
      */
    public java.lang.CharSequence getSPTSHOWIND() {
      return SPT_SHOW_IND;
    }


    /**
      * Sets the value of the 'SPT_SHOW_IND' field.
      * @param value The value of 'SPT_SHOW_IND'.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.SPORTS.apache.nifi.LNDCDC_NCS_TCS_SPORTS.Builder setSPTSHOWIND(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.SPT_SHOW_IND = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'SPT_SHOW_IND' field has been set.
      * @return True if the 'SPT_SHOW_IND' field has been set, false otherwise.
      */
    public boolean hasSPTSHOWIND() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'SPT_SHOW_IND' field.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.SPORTS.apache.nifi.LNDCDC_NCS_TCS_SPORTS.Builder clearSPTSHOWIND() {
      SPT_SHOW_IND = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'SPT_ROS_IND' field.
      * @return The value.
      */
    public java.lang.CharSequence getSPTROSIND() {
      return SPT_ROS_IND;
    }


    /**
      * Sets the value of the 'SPT_ROS_IND' field.
      * @param value The value of 'SPT_ROS_IND'.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.SPORTS.apache.nifi.LNDCDC_NCS_TCS_SPORTS.Builder setSPTROSIND(java.lang.CharSequence value) {
      validate(fields()[6], value);
      this.SPT_ROS_IND = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'SPT_ROS_IND' field has been set.
      * @return True if the 'SPT_ROS_IND' field has been set, false otherwise.
      */
    public boolean hasSPTROSIND() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'SPT_ROS_IND' field.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.SPORTS.apache.nifi.LNDCDC_NCS_TCS_SPORTS.Builder clearSPTROSIND() {
      SPT_ROS_IND = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'SPT_PGM_NAME' field.
      * @return The value.
      */
    public java.lang.CharSequence getSPTPGMNAME() {
      return SPT_PGM_NAME;
    }


    /**
      * Sets the value of the 'SPT_PGM_NAME' field.
      * @param value The value of 'SPT_PGM_NAME'.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.SPORTS.apache.nifi.LNDCDC_NCS_TCS_SPORTS.Builder setSPTPGMNAME(java.lang.CharSequence value) {
      validate(fields()[7], value);
      this.SPT_PGM_NAME = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'SPT_PGM_NAME' field has been set.
      * @return True if the 'SPT_PGM_NAME' field has been set, false otherwise.
      */
    public boolean hasSPTPGMNAME() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'SPT_PGM_NAME' field.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.SPORTS.apache.nifi.LNDCDC_NCS_TCS_SPORTS.Builder clearSPTPGMNAME() {
      SPT_PGM_NAME = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'SPT_ROS_START_DT' field.
      * @return The value.
      */
    public java.lang.CharSequence getSPTROSSTARTDT() {
      return SPT_ROS_START_DT;
    }


    /**
      * Sets the value of the 'SPT_ROS_START_DT' field.
      * @param value The value of 'SPT_ROS_START_DT'.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.SPORTS.apache.nifi.LNDCDC_NCS_TCS_SPORTS.Builder setSPTROSSTARTDT(java.lang.CharSequence value) {
      validate(fields()[8], value);
      this.SPT_ROS_START_DT = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'SPT_ROS_START_DT' field has been set.
      * @return True if the 'SPT_ROS_START_DT' field has been set, false otherwise.
      */
    public boolean hasSPTROSSTARTDT() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'SPT_ROS_START_DT' field.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.SPORTS.apache.nifi.LNDCDC_NCS_TCS_SPORTS.Builder clearSPTROSSTARTDT() {
      SPT_ROS_START_DT = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'SPT_NUM_EXCLUDED_28_58' field.
      * @return The value.
      */
    public java.lang.Long getSPTNUMEXCLUDED2858() {
      return SPT_NUM_EXCLUDED_28_58;
    }


    /**
      * Sets the value of the 'SPT_NUM_EXCLUDED_28_58' field.
      * @param value The value of 'SPT_NUM_EXCLUDED_28_58'.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.SPORTS.apache.nifi.LNDCDC_NCS_TCS_SPORTS.Builder setSPTNUMEXCLUDED2858(java.lang.Long value) {
      validate(fields()[9], value);
      this.SPT_NUM_EXCLUDED_28_58 = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'SPT_NUM_EXCLUDED_28_58' field has been set.
      * @return True if the 'SPT_NUM_EXCLUDED_28_58' field has been set, false otherwise.
      */
    public boolean hasSPTNUMEXCLUDED2858() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'SPT_NUM_EXCLUDED_28_58' field.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.SPORTS.apache.nifi.LNDCDC_NCS_TCS_SPORTS.Builder clearSPTNUMEXCLUDED2858() {
      SPT_NUM_EXCLUDED_28_58 = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'SPT_DEFLT_EXPIR_TAPE' field.
      * @return The value.
      */
    public java.lang.Long getSPTDEFLTEXPIRTAPE() {
      return SPT_DEFLT_EXPIR_TAPE;
    }


    /**
      * Sets the value of the 'SPT_DEFLT_EXPIR_TAPE' field.
      * @param value The value of 'SPT_DEFLT_EXPIR_TAPE'.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.SPORTS.apache.nifi.LNDCDC_NCS_TCS_SPORTS.Builder setSPTDEFLTEXPIRTAPE(java.lang.Long value) {
      validate(fields()[10], value);
      this.SPT_DEFLT_EXPIR_TAPE = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'SPT_DEFLT_EXPIR_TAPE' field has been set.
      * @return True if the 'SPT_DEFLT_EXPIR_TAPE' field has been set, false otherwise.
      */
    public boolean hasSPTDEFLTEXPIRTAPE() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'SPT_DEFLT_EXPIR_TAPE' field.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.SPORTS.apache.nifi.LNDCDC_NCS_TCS_SPORTS.Builder clearSPTDEFLTEXPIRTAPE() {
      SPT_DEFLT_EXPIR_TAPE = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'SPT_NIEL_CAT' field.
      * @return The value.
      */
    public java.lang.CharSequence getSPTNIELCAT() {
      return SPT_NIEL_CAT;
    }


    /**
      * Sets the value of the 'SPT_NIEL_CAT' field.
      * @param value The value of 'SPT_NIEL_CAT'.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.SPORTS.apache.nifi.LNDCDC_NCS_TCS_SPORTS.Builder setSPTNIELCAT(java.lang.CharSequence value) {
      validate(fields()[11], value);
      this.SPT_NIEL_CAT = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'SPT_NIEL_CAT' field has been set.
      * @return True if the 'SPT_NIEL_CAT' field has been set, false otherwise.
      */
    public boolean hasSPTNIELCAT() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'SPT_NIEL_CAT' field.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.SPORTS.apache.nifi.LNDCDC_NCS_TCS_SPORTS.Builder clearSPTNIELCAT() {
      SPT_NIEL_CAT = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'SPT_NIEL_SHORT_NAME' field.
      * @return The value.
      */
    public java.lang.CharSequence getSPTNIELSHORTNAME() {
      return SPT_NIEL_SHORT_NAME;
    }


    /**
      * Sets the value of the 'SPT_NIEL_SHORT_NAME' field.
      * @param value The value of 'SPT_NIEL_SHORT_NAME'.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.SPORTS.apache.nifi.LNDCDC_NCS_TCS_SPORTS.Builder setSPTNIELSHORTNAME(java.lang.CharSequence value) {
      validate(fields()[12], value);
      this.SPT_NIEL_SHORT_NAME = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'SPT_NIEL_SHORT_NAME' field has been set.
      * @return True if the 'SPT_NIEL_SHORT_NAME' field has been set, false otherwise.
      */
    public boolean hasSPTNIELSHORTNAME() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'SPT_NIEL_SHORT_NAME' field.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.SPORTS.apache.nifi.LNDCDC_NCS_TCS_SPORTS.Builder clearSPTNIELSHORTNAME() {
      SPT_NIEL_SHORT_NAME = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'SPT_ROS_END_DT' field.
      * @return The value.
      */
    public java.lang.CharSequence getSPTROSENDDT() {
      return SPT_ROS_END_DT;
    }


    /**
      * Sets the value of the 'SPT_ROS_END_DT' field.
      * @param value The value of 'SPT_ROS_END_DT'.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.SPORTS.apache.nifi.LNDCDC_NCS_TCS_SPORTS.Builder setSPTROSENDDT(java.lang.CharSequence value) {
      validate(fields()[13], value);
      this.SPT_ROS_END_DT = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'SPT_ROS_END_DT' field has been set.
      * @return True if the 'SPT_ROS_END_DT' field has been set, false otherwise.
      */
    public boolean hasSPTROSENDDT() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'SPT_ROS_END_DT' field.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.SPORTS.apache.nifi.LNDCDC_NCS_TCS_SPORTS.Builder clearSPTROSENDDT() {
      SPT_ROS_END_DT = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    /**
      * Gets the value of the 'SPT_DEFLT_EXPIR_SDT' field.
      * @return The value.
      */
    public java.lang.Long getSPTDEFLTEXPIRSDT() {
      return SPT_DEFLT_EXPIR_SDT;
    }


    /**
      * Sets the value of the 'SPT_DEFLT_EXPIR_SDT' field.
      * @param value The value of 'SPT_DEFLT_EXPIR_SDT'.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.SPORTS.apache.nifi.LNDCDC_NCS_TCS_SPORTS.Builder setSPTDEFLTEXPIRSDT(java.lang.Long value) {
      validate(fields()[14], value);
      this.SPT_DEFLT_EXPIR_SDT = value;
      fieldSetFlags()[14] = true;
      return this;
    }

    /**
      * Checks whether the 'SPT_DEFLT_EXPIR_SDT' field has been set.
      * @return True if the 'SPT_DEFLT_EXPIR_SDT' field has been set, false otherwise.
      */
    public boolean hasSPTDEFLTEXPIRSDT() {
      return fieldSetFlags()[14];
    }


    /**
      * Clears the value of the 'SPT_DEFLT_EXPIR_SDT' field.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.SPORTS.apache.nifi.LNDCDC_NCS_TCS_SPORTS.Builder clearSPTDEFLTEXPIRSDT() {
      SPT_DEFLT_EXPIR_SDT = null;
      fieldSetFlags()[14] = false;
      return this;
    }

    /**
      * Gets the value of the 'SPT_GENDER' field.
      * @return The value.
      */
    public java.lang.CharSequence getSPTGENDER() {
      return SPT_GENDER;
    }


    /**
      * Sets the value of the 'SPT_GENDER' field.
      * @param value The value of 'SPT_GENDER'.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.SPORTS.apache.nifi.LNDCDC_NCS_TCS_SPORTS.Builder setSPTGENDER(java.lang.CharSequence value) {
      validate(fields()[15], value);
      this.SPT_GENDER = value;
      fieldSetFlags()[15] = true;
      return this;
    }

    /**
      * Checks whether the 'SPT_GENDER' field has been set.
      * @return True if the 'SPT_GENDER' field has been set, false otherwise.
      */
    public boolean hasSPTGENDER() {
      return fieldSetFlags()[15];
    }


    /**
      * Clears the value of the 'SPT_GENDER' field.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.SPORTS.apache.nifi.LNDCDC_NCS_TCS_SPORTS.Builder clearSPTGENDER() {
      SPT_GENDER = null;
      fieldSetFlags()[15] = false;
      return this;
    }

    /**
      * Gets the value of the 'SPT_DEFLT_EXPIR_LIVE' field.
      * @return The value.
      */
    public java.lang.Long getSPTDEFLTEXPIRLIVE() {
      return SPT_DEFLT_EXPIR_LIVE;
    }


    /**
      * Sets the value of the 'SPT_DEFLT_EXPIR_LIVE' field.
      * @param value The value of 'SPT_DEFLT_EXPIR_LIVE'.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.SPORTS.apache.nifi.LNDCDC_NCS_TCS_SPORTS.Builder setSPTDEFLTEXPIRLIVE(java.lang.Long value) {
      validate(fields()[16], value);
      this.SPT_DEFLT_EXPIR_LIVE = value;
      fieldSetFlags()[16] = true;
      return this;
    }

    /**
      * Checks whether the 'SPT_DEFLT_EXPIR_LIVE' field has been set.
      * @return True if the 'SPT_DEFLT_EXPIR_LIVE' field has been set, false otherwise.
      */
    public boolean hasSPTDEFLTEXPIRLIVE() {
      return fieldSetFlags()[16];
    }


    /**
      * Clears the value of the 'SPT_DEFLT_EXPIR_LIVE' field.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.SPORTS.apache.nifi.LNDCDC_NCS_TCS_SPORTS.Builder clearSPTDEFLTEXPIRLIVE() {
      SPT_DEFLT_EXPIR_LIVE = null;
      fieldSetFlags()[16] = false;
      return this;
    }

    /**
      * Gets the value of the 'SPT_LVL' field.
      * @return The value.
      */
    public java.lang.CharSequence getSPTLVL() {
      return SPT_LVL;
    }


    /**
      * Sets the value of the 'SPT_LVL' field.
      * @param value The value of 'SPT_LVL'.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.SPORTS.apache.nifi.LNDCDC_NCS_TCS_SPORTS.Builder setSPTLVL(java.lang.CharSequence value) {
      validate(fields()[17], value);
      this.SPT_LVL = value;
      fieldSetFlags()[17] = true;
      return this;
    }

    /**
      * Checks whether the 'SPT_LVL' field has been set.
      * @return True if the 'SPT_LVL' field has been set, false otherwise.
      */
    public boolean hasSPTLVL() {
      return fieldSetFlags()[17];
    }


    /**
      * Clears the value of the 'SPT_LVL' field.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.SPORTS.apache.nifi.LNDCDC_NCS_TCS_SPORTS.Builder clearSPTLVL() {
      SPT_LVL = null;
      fieldSetFlags()[17] = false;
      return this;
    }

    /**
      * Gets the value of the 'SPT_NIEL_QTRLY_NAME' field.
      * @return The value.
      */
    public java.lang.CharSequence getSPTNIELQTRLYNAME() {
      return SPT_NIEL_QTRLY_NAME;
    }


    /**
      * Sets the value of the 'SPT_NIEL_QTRLY_NAME' field.
      * @param value The value of 'SPT_NIEL_QTRLY_NAME'.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.SPORTS.apache.nifi.LNDCDC_NCS_TCS_SPORTS.Builder setSPTNIELQTRLYNAME(java.lang.CharSequence value) {
      validate(fields()[18], value);
      this.SPT_NIEL_QTRLY_NAME = value;
      fieldSetFlags()[18] = true;
      return this;
    }

    /**
      * Checks whether the 'SPT_NIEL_QTRLY_NAME' field has been set.
      * @return True if the 'SPT_NIEL_QTRLY_NAME' field has been set, false otherwise.
      */
    public boolean hasSPTNIELQTRLYNAME() {
      return fieldSetFlags()[18];
    }


    /**
      * Clears the value of the 'SPT_NIEL_QTRLY_NAME' field.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.SPORTS.apache.nifi.LNDCDC_NCS_TCS_SPORTS.Builder clearSPTNIELQTRLYNAME() {
      SPT_NIEL_QTRLY_NAME = null;
      fieldSetFlags()[18] = false;
      return this;
    }

    /**
      * Gets the value of the 'SPT_SEASON_END' field.
      * @return The value.
      */
    public java.lang.Double getSPTSEASONEND() {
      return SPT_SEASON_END;
    }


    /**
      * Sets the value of the 'SPT_SEASON_END' field.
      * @param value The value of 'SPT_SEASON_END'.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.SPORTS.apache.nifi.LNDCDC_NCS_TCS_SPORTS.Builder setSPTSEASONEND(java.lang.Double value) {
      validate(fields()[19], value);
      this.SPT_SEASON_END = value;
      fieldSetFlags()[19] = true;
      return this;
    }

    /**
      * Checks whether the 'SPT_SEASON_END' field has been set.
      * @return True if the 'SPT_SEASON_END' field has been set, false otherwise.
      */
    public boolean hasSPTSEASONEND() {
      return fieldSetFlags()[19];
    }


    /**
      * Clears the value of the 'SPT_SEASON_END' field.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.SPORTS.apache.nifi.LNDCDC_NCS_TCS_SPORTS.Builder clearSPTSEASONEND() {
      SPT_SEASON_END = null;
      fieldSetFlags()[19] = false;
      return this;
    }

    /**
      * Gets the value of the 'SPT_SEASON_START' field.
      * @return The value.
      */
    public java.lang.Double getSPTSEASONSTART() {
      return SPT_SEASON_START;
    }


    /**
      * Sets the value of the 'SPT_SEASON_START' field.
      * @param value The value of 'SPT_SEASON_START'.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.SPORTS.apache.nifi.LNDCDC_NCS_TCS_SPORTS.Builder setSPTSEASONSTART(java.lang.Double value) {
      validate(fields()[20], value);
      this.SPT_SEASON_START = value;
      fieldSetFlags()[20] = true;
      return this;
    }

    /**
      * Checks whether the 'SPT_SEASON_START' field has been set.
      * @return True if the 'SPT_SEASON_START' field has been set, false otherwise.
      */
    public boolean hasSPTSEASONSTART() {
      return fieldSetFlags()[20];
    }


    /**
      * Clears the value of the 'SPT_SEASON_START' field.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.SPORTS.apache.nifi.LNDCDC_NCS_TCS_SPORTS.Builder clearSPTSEASONSTART() {
      SPT_SEASON_START = null;
      fieldSetFlags()[20] = false;
      return this;
    }

    /**
      * Gets the value of the 'SPT_SEASON_YEAR_IND' field.
      * @return The value.
      */
    public java.lang.CharSequence getSPTSEASONYEARIND() {
      return SPT_SEASON_YEAR_IND;
    }


    /**
      * Sets the value of the 'SPT_SEASON_YEAR_IND' field.
      * @param value The value of 'SPT_SEASON_YEAR_IND'.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.SPORTS.apache.nifi.LNDCDC_NCS_TCS_SPORTS.Builder setSPTSEASONYEARIND(java.lang.CharSequence value) {
      validate(fields()[21], value);
      this.SPT_SEASON_YEAR_IND = value;
      fieldSetFlags()[21] = true;
      return this;
    }

    /**
      * Checks whether the 'SPT_SEASON_YEAR_IND' field has been set.
      * @return True if the 'SPT_SEASON_YEAR_IND' field has been set, false otherwise.
      */
    public boolean hasSPTSEASONYEARIND() {
      return fieldSetFlags()[21];
    }


    /**
      * Clears the value of the 'SPT_SEASON_YEAR_IND' field.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.SPORTS.apache.nifi.LNDCDC_NCS_TCS_SPORTS.Builder clearSPTSEASONYEARIND() {
      SPT_SEASON_YEAR_IND = null;
      fieldSetFlags()[21] = false;
      return this;
    }

    /**
      * Gets the value of the 'SPT_APF_IND' field.
      * @return The value.
      */
    public java.lang.CharSequence getSPTAPFIND() {
      return SPT_APF_IND;
    }


    /**
      * Sets the value of the 'SPT_APF_IND' field.
      * @param value The value of 'SPT_APF_IND'.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.SPORTS.apache.nifi.LNDCDC_NCS_TCS_SPORTS.Builder setSPTAPFIND(java.lang.CharSequence value) {
      validate(fields()[22], value);
      this.SPT_APF_IND = value;
      fieldSetFlags()[22] = true;
      return this;
    }

    /**
      * Checks whether the 'SPT_APF_IND' field has been set.
      * @return True if the 'SPT_APF_IND' field has been set, false otherwise.
      */
    public boolean hasSPTAPFIND() {
      return fieldSetFlags()[22];
    }


    /**
      * Clears the value of the 'SPT_APF_IND' field.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.SPORTS.apache.nifi.LNDCDC_NCS_TCS_SPORTS.Builder clearSPTAPFIND() {
      SPT_APF_IND = null;
      fieldSetFlags()[22] = false;
      return this;
    }

    /**
      * Gets the value of the 'SPT_28_58_NET_REF' field.
      * @return The value.
      */
    public java.lang.CharSequence getSPT2858NETREF() {
      return SPT_28_58_NET_REF;
    }


    /**
      * Sets the value of the 'SPT_28_58_NET_REF' field.
      * @param value The value of 'SPT_28_58_NET_REF'.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.SPORTS.apache.nifi.LNDCDC_NCS_TCS_SPORTS.Builder setSPT2858NETREF(java.lang.CharSequence value) {
      validate(fields()[23], value);
      this.SPT_28_58_NET_REF = value;
      fieldSetFlags()[23] = true;
      return this;
    }

    /**
      * Checks whether the 'SPT_28_58_NET_REF' field has been set.
      * @return True if the 'SPT_28_58_NET_REF' field has been set, false otherwise.
      */
    public boolean hasSPT2858NETREF() {
      return fieldSetFlags()[23];
    }


    /**
      * Clears the value of the 'SPT_28_58_NET_REF' field.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.SPORTS.apache.nifi.LNDCDC_NCS_TCS_SPORTS.Builder clearSPT2858NETREF() {
      SPT_28_58_NET_REF = null;
      fieldSetFlags()[23] = false;
      return this;
    }

    /**
      * Gets the value of the 'SPT_CREATE_REMARKS' field.
      * @return The value.
      */
    public java.lang.CharSequence getSPTCREATEREMARKS() {
      return SPT_CREATE_REMARKS;
    }


    /**
      * Sets the value of the 'SPT_CREATE_REMARKS' field.
      * @param value The value of 'SPT_CREATE_REMARKS'.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.SPORTS.apache.nifi.LNDCDC_NCS_TCS_SPORTS.Builder setSPTCREATEREMARKS(java.lang.CharSequence value) {
      validate(fields()[24], value);
      this.SPT_CREATE_REMARKS = value;
      fieldSetFlags()[24] = true;
      return this;
    }

    /**
      * Checks whether the 'SPT_CREATE_REMARKS' field has been set.
      * @return True if the 'SPT_CREATE_REMARKS' field has been set, false otherwise.
      */
    public boolean hasSPTCREATEREMARKS() {
      return fieldSetFlags()[24];
    }


    /**
      * Clears the value of the 'SPT_CREATE_REMARKS' field.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.SPORTS.apache.nifi.LNDCDC_NCS_TCS_SPORTS.Builder clearSPTCREATEREMARKS() {
      SPT_CREATE_REMARKS = null;
      fieldSetFlags()[24] = false;
      return this;
    }

    /**
      * Gets the value of the 'SPT_NIEL_LATIN_NAME' field.
      * @return The value.
      */
    public java.lang.CharSequence getSPTNIELLATINNAME() {
      return SPT_NIEL_LATIN_NAME;
    }


    /**
      * Sets the value of the 'SPT_NIEL_LATIN_NAME' field.
      * @param value The value of 'SPT_NIEL_LATIN_NAME'.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.SPORTS.apache.nifi.LNDCDC_NCS_TCS_SPORTS.Builder setSPTNIELLATINNAME(java.lang.CharSequence value) {
      validate(fields()[25], value);
      this.SPT_NIEL_LATIN_NAME = value;
      fieldSetFlags()[25] = true;
      return this;
    }

    /**
      * Checks whether the 'SPT_NIEL_LATIN_NAME' field has been set.
      * @return True if the 'SPT_NIEL_LATIN_NAME' field has been set, false otherwise.
      */
    public boolean hasSPTNIELLATINNAME() {
      return fieldSetFlags()[25];
    }


    /**
      * Clears the value of the 'SPT_NIEL_LATIN_NAME' field.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.SPORTS.apache.nifi.LNDCDC_NCS_TCS_SPORTS.Builder clearSPTNIELLATINNAME() {
      SPT_NIEL_LATIN_NAME = null;
      fieldSetFlags()[25] = false;
      return this;
    }

    /**
      * Gets the value of the 'SPT_DFLT_STADIUM_ID' field.
      * @return The value.
      */
    public java.lang.Long getSPTDFLTSTADIUMID() {
      return SPT_DFLT_STADIUM_ID;
    }


    /**
      * Sets the value of the 'SPT_DFLT_STADIUM_ID' field.
      * @param value The value of 'SPT_DFLT_STADIUM_ID'.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.SPORTS.apache.nifi.LNDCDC_NCS_TCS_SPORTS.Builder setSPTDFLTSTADIUMID(java.lang.Long value) {
      validate(fields()[26], value);
      this.SPT_DFLT_STADIUM_ID = value;
      fieldSetFlags()[26] = true;
      return this;
    }

    /**
      * Checks whether the 'SPT_DFLT_STADIUM_ID' field has been set.
      * @return True if the 'SPT_DFLT_STADIUM_ID' field has been set, false otherwise.
      */
    public boolean hasSPTDFLTSTADIUMID() {
      return fieldSetFlags()[26];
    }


    /**
      * Clears the value of the 'SPT_DFLT_STADIUM_ID' field.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.SPORTS.apache.nifi.LNDCDC_NCS_TCS_SPORTS.Builder clearSPTDFLTSTADIUMID() {
      SPT_DFLT_STADIUM_ID = null;
      fieldSetFlags()[26] = false;
      return this;
    }

    /**
      * Gets the value of the 'LANGUAGE_IND' field.
      * @return The value.
      */
    public java.lang.CharSequence getLANGUAGEIND() {
      return LANGUAGE_IND;
    }


    /**
      * Sets the value of the 'LANGUAGE_IND' field.
      * @param value The value of 'LANGUAGE_IND'.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.SPORTS.apache.nifi.LNDCDC_NCS_TCS_SPORTS.Builder setLANGUAGEIND(java.lang.CharSequence value) {
      validate(fields()[27], value);
      this.LANGUAGE_IND = value;
      fieldSetFlags()[27] = true;
      return this;
    }

    /**
      * Checks whether the 'LANGUAGE_IND' field has been set.
      * @return True if the 'LANGUAGE_IND' field has been set, false otherwise.
      */
    public boolean hasLANGUAGEIND() {
      return fieldSetFlags()[27];
    }


    /**
      * Clears the value of the 'LANGUAGE_IND' field.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.SPORTS.apache.nifi.LNDCDC_NCS_TCS_SPORTS.Builder clearLANGUAGEIND() {
      LANGUAGE_IND = null;
      fieldSetFlags()[27] = false;
      return this;
    }

    /**
      * Gets the value of the 'SPT_LST_NAME' field.
      * @return The value.
      */
    public java.lang.CharSequence getSPTLSTNAME() {
      return SPT_LST_NAME;
    }


    /**
      * Sets the value of the 'SPT_LST_NAME' field.
      * @param value The value of 'SPT_LST_NAME'.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.SPORTS.apache.nifi.LNDCDC_NCS_TCS_SPORTS.Builder setSPTLSTNAME(java.lang.CharSequence value) {
      validate(fields()[28], value);
      this.SPT_LST_NAME = value;
      fieldSetFlags()[28] = true;
      return this;
    }

    /**
      * Checks whether the 'SPT_LST_NAME' field has been set.
      * @return True if the 'SPT_LST_NAME' field has been set, false otherwise.
      */
    public boolean hasSPTLSTNAME() {
      return fieldSetFlags()[28];
    }


    /**
      * Clears the value of the 'SPT_LST_NAME' field.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.SPORTS.apache.nifi.LNDCDC_NCS_TCS_SPORTS.Builder clearSPTLSTNAME() {
      SPT_LST_NAME = null;
      fieldSetFlags()[28] = false;
      return this;
    }

    /**
      * Gets the value of the 'SPT_GENERIC_IND' field.
      * @return The value.
      */
    public java.lang.CharSequence getSPTGENERICIND() {
      return SPT_GENERIC_IND;
    }


    /**
      * Sets the value of the 'SPT_GENERIC_IND' field.
      * @param value The value of 'SPT_GENERIC_IND'.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.SPORTS.apache.nifi.LNDCDC_NCS_TCS_SPORTS.Builder setSPTGENERICIND(java.lang.CharSequence value) {
      validate(fields()[29], value);
      this.SPT_GENERIC_IND = value;
      fieldSetFlags()[29] = true;
      return this;
    }

    /**
      * Checks whether the 'SPT_GENERIC_IND' field has been set.
      * @return True if the 'SPT_GENERIC_IND' field has been set, false otherwise.
      */
    public boolean hasSPTGENERICIND() {
      return fieldSetFlags()[29];
    }


    /**
      * Clears the value of the 'SPT_GENERIC_IND' field.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.SPORTS.apache.nifi.LNDCDC_NCS_TCS_SPORTS.Builder clearSPTGENERICIND() {
      SPT_GENERIC_IND = null;
      fieldSetFlags()[29] = false;
      return this;
    }

    /**
      * Gets the value of the 'SPT_NLSN_SPCA_CAT' field.
      * @return The value.
      */
    public java.lang.CharSequence getSPTNLSNSPCACAT() {
      return SPT_NLSN_SPCA_CAT;
    }


    /**
      * Sets the value of the 'SPT_NLSN_SPCA_CAT' field.
      * @param value The value of 'SPT_NLSN_SPCA_CAT'.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.SPORTS.apache.nifi.LNDCDC_NCS_TCS_SPORTS.Builder setSPTNLSNSPCACAT(java.lang.CharSequence value) {
      validate(fields()[30], value);
      this.SPT_NLSN_SPCA_CAT = value;
      fieldSetFlags()[30] = true;
      return this;
    }

    /**
      * Checks whether the 'SPT_NLSN_SPCA_CAT' field has been set.
      * @return True if the 'SPT_NLSN_SPCA_CAT' field has been set, false otherwise.
      */
    public boolean hasSPTNLSNSPCACAT() {
      return fieldSetFlags()[30];
    }


    /**
      * Clears the value of the 'SPT_NLSN_SPCA_CAT' field.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.SPORTS.apache.nifi.LNDCDC_NCS_TCS_SPORTS.Builder clearSPTNLSNSPCACAT() {
      SPT_NLSN_SPCA_CAT = null;
      fieldSetFlags()[30] = false;
      return this;
    }

    /**
      * Gets the value of the 'SPT_NLSN_SPT_PGM_CODE' field.
      * @return The value.
      */
    public java.lang.CharSequence getSPTNLSNSPTPGMCODE() {
      return SPT_NLSN_SPT_PGM_CODE;
    }


    /**
      * Sets the value of the 'SPT_NLSN_SPT_PGM_CODE' field.
      * @param value The value of 'SPT_NLSN_SPT_PGM_CODE'.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.SPORTS.apache.nifi.LNDCDC_NCS_TCS_SPORTS.Builder setSPTNLSNSPTPGMCODE(java.lang.CharSequence value) {
      validate(fields()[31], value);
      this.SPT_NLSN_SPT_PGM_CODE = value;
      fieldSetFlags()[31] = true;
      return this;
    }

    /**
      * Checks whether the 'SPT_NLSN_SPT_PGM_CODE' field has been set.
      * @return True if the 'SPT_NLSN_SPT_PGM_CODE' field has been set, false otherwise.
      */
    public boolean hasSPTNLSNSPTPGMCODE() {
      return fieldSetFlags()[31];
    }


    /**
      * Clears the value of the 'SPT_NLSN_SPT_PGM_CODE' field.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.SPORTS.apache.nifi.LNDCDC_NCS_TCS_SPORTS.Builder clearSPTNLSNSPTPGMCODE() {
      SPT_NLSN_SPT_PGM_CODE = null;
      fieldSetFlags()[31] = false;
      return this;
    }

    /**
      * Gets the value of the 'SPT_RUNSHEET_UPDATE_IND' field.
      * @return The value.
      */
    public java.lang.CharSequence getSPTRUNSHEETUPDATEIND() {
      return SPT_RUNSHEET_UPDATE_IND;
    }


    /**
      * Sets the value of the 'SPT_RUNSHEET_UPDATE_IND' field.
      * @param value The value of 'SPT_RUNSHEET_UPDATE_IND'.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.SPORTS.apache.nifi.LNDCDC_NCS_TCS_SPORTS.Builder setSPTRUNSHEETUPDATEIND(java.lang.CharSequence value) {
      validate(fields()[32], value);
      this.SPT_RUNSHEET_UPDATE_IND = value;
      fieldSetFlags()[32] = true;
      return this;
    }

    /**
      * Checks whether the 'SPT_RUNSHEET_UPDATE_IND' field has been set.
      * @return True if the 'SPT_RUNSHEET_UPDATE_IND' field has been set, false otherwise.
      */
    public boolean hasSPTRUNSHEETUPDATEIND() {
      return fieldSetFlags()[32];
    }


    /**
      * Clears the value of the 'SPT_RUNSHEET_UPDATE_IND' field.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.SPORTS.apache.nifi.LNDCDC_NCS_TCS_SPORTS.Builder clearSPTRUNSHEETUPDATEIND() {
      SPT_RUNSHEET_UPDATE_IND = null;
      fieldSetFlags()[32] = false;
      return this;
    }

    /**
      * Gets the value of the 'SPT_COMMENTS' field.
      * @return The value.
      */
    public java.lang.CharSequence getSPTCOMMENTS() {
      return SPT_COMMENTS;
    }


    /**
      * Sets the value of the 'SPT_COMMENTS' field.
      * @param value The value of 'SPT_COMMENTS'.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.SPORTS.apache.nifi.LNDCDC_NCS_TCS_SPORTS.Builder setSPTCOMMENTS(java.lang.CharSequence value) {
      validate(fields()[33], value);
      this.SPT_COMMENTS = value;
      fieldSetFlags()[33] = true;
      return this;
    }

    /**
      * Checks whether the 'SPT_COMMENTS' field has been set.
      * @return True if the 'SPT_COMMENTS' field has been set, false otherwise.
      */
    public boolean hasSPTCOMMENTS() {
      return fieldSetFlags()[33];
    }


    /**
      * Clears the value of the 'SPT_COMMENTS' field.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.SPORTS.apache.nifi.LNDCDC_NCS_TCS_SPORTS.Builder clearSPTCOMMENTS() {
      SPT_COMMENTS = null;
      fieldSetFlags()[33] = false;
      return this;
    }

    /**
      * Gets the value of the 'SPT_BACKGROUND' field.
      * @return The value.
      */
    public java.lang.CharSequence getSPTBACKGROUND() {
      return SPT_BACKGROUND;
    }


    /**
      * Sets the value of the 'SPT_BACKGROUND' field.
      * @param value The value of 'SPT_BACKGROUND'.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.SPORTS.apache.nifi.LNDCDC_NCS_TCS_SPORTS.Builder setSPTBACKGROUND(java.lang.CharSequence value) {
      validate(fields()[34], value);
      this.SPT_BACKGROUND = value;
      fieldSetFlags()[34] = true;
      return this;
    }

    /**
      * Checks whether the 'SPT_BACKGROUND' field has been set.
      * @return True if the 'SPT_BACKGROUND' field has been set, false otherwise.
      */
    public boolean hasSPTBACKGROUND() {
      return fieldSetFlags()[34];
    }


    /**
      * Clears the value of the 'SPT_BACKGROUND' field.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.SPORTS.apache.nifi.LNDCDC_NCS_TCS_SPORTS.Builder clearSPTBACKGROUND() {
      SPT_BACKGROUND = null;
      fieldSetFlags()[34] = false;
      return this;
    }

    /**
      * Gets the value of the 'SPT_FOREGROUND' field.
      * @return The value.
      */
    public java.lang.CharSequence getSPTFOREGROUND() {
      return SPT_FOREGROUND;
    }


    /**
      * Sets the value of the 'SPT_FOREGROUND' field.
      * @param value The value of 'SPT_FOREGROUND'.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.SPORTS.apache.nifi.LNDCDC_NCS_TCS_SPORTS.Builder setSPTFOREGROUND(java.lang.CharSequence value) {
      validate(fields()[35], value);
      this.SPT_FOREGROUND = value;
      fieldSetFlags()[35] = true;
      return this;
    }

    /**
      * Checks whether the 'SPT_FOREGROUND' field has been set.
      * @return True if the 'SPT_FOREGROUND' field has been set, false otherwise.
      */
    public boolean hasSPTFOREGROUND() {
      return fieldSetFlags()[35];
    }


    /**
      * Clears the value of the 'SPT_FOREGROUND' field.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.SPORTS.apache.nifi.LNDCDC_NCS_TCS_SPORTS.Builder clearSPTFOREGROUND() {
      SPT_FOREGROUND = null;
      fieldSetFlags()[35] = false;
      return this;
    }

    /**
      * Gets the value of the 'SPT_ARCHIVE_IND' field.
      * @return The value.
      */
    public java.lang.CharSequence getSPTARCHIVEIND() {
      return SPT_ARCHIVE_IND;
    }


    /**
      * Sets the value of the 'SPT_ARCHIVE_IND' field.
      * @param value The value of 'SPT_ARCHIVE_IND'.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.SPORTS.apache.nifi.LNDCDC_NCS_TCS_SPORTS.Builder setSPTARCHIVEIND(java.lang.CharSequence value) {
      validate(fields()[36], value);
      this.SPT_ARCHIVE_IND = value;
      fieldSetFlags()[36] = true;
      return this;
    }

    /**
      * Checks whether the 'SPT_ARCHIVE_IND' field has been set.
      * @return True if the 'SPT_ARCHIVE_IND' field has been set, false otherwise.
      */
    public boolean hasSPTARCHIVEIND() {
      return fieldSetFlags()[36];
    }


    /**
      * Clears the value of the 'SPT_ARCHIVE_IND' field.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.SPORTS.apache.nifi.LNDCDC_NCS_TCS_SPORTS.Builder clearSPTARCHIVEIND() {
      SPT_ARCHIVE_IND = null;
      fieldSetFlags()[36] = false;
      return this;
    }

    /**
      * Gets the value of the 'STUDIO_SHOW_IND' field.
      * @return The value.
      */
    public java.lang.CharSequence getSTUDIOSHOWIND() {
      return STUDIO_SHOW_IND;
    }


    /**
      * Sets the value of the 'STUDIO_SHOW_IND' field.
      * @param value The value of 'STUDIO_SHOW_IND'.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.SPORTS.apache.nifi.LNDCDC_NCS_TCS_SPORTS.Builder setSTUDIOSHOWIND(java.lang.CharSequence value) {
      validate(fields()[37], value);
      this.STUDIO_SHOW_IND = value;
      fieldSetFlags()[37] = true;
      return this;
    }

    /**
      * Checks whether the 'STUDIO_SHOW_IND' field has been set.
      * @return True if the 'STUDIO_SHOW_IND' field has been set, false otherwise.
      */
    public boolean hasSTUDIOSHOWIND() {
      return fieldSetFlags()[37];
    }


    /**
      * Clears the value of the 'STUDIO_SHOW_IND' field.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.SPORTS.apache.nifi.LNDCDC_NCS_TCS_SPORTS.Builder clearSTUDIOSHOWIND() {
      STUDIO_SHOW_IND = null;
      fieldSetFlags()[37] = false;
      return this;
    }

    /**
      * Gets the value of the 'COVENANT_IND' field.
      * @return The value.
      */
    public java.lang.CharSequence getCOVENANTIND() {
      return COVENANT_IND;
    }


    /**
      * Sets the value of the 'COVENANT_IND' field.
      * @param value The value of 'COVENANT_IND'.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.SPORTS.apache.nifi.LNDCDC_NCS_TCS_SPORTS.Builder setCOVENANTIND(java.lang.CharSequence value) {
      validate(fields()[38], value);
      this.COVENANT_IND = value;
      fieldSetFlags()[38] = true;
      return this;
    }

    /**
      * Checks whether the 'COVENANT_IND' field has been set.
      * @return True if the 'COVENANT_IND' field has been set, false otherwise.
      */
    public boolean hasCOVENANTIND() {
      return fieldSetFlags()[38];
    }


    /**
      * Clears the value of the 'COVENANT_IND' field.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.SPORTS.apache.nifi.LNDCDC_NCS_TCS_SPORTS.Builder clearCOVENANTIND() {
      COVENANT_IND = null;
      fieldSetFlags()[38] = false;
      return this;
    }

    /**
      * Gets the value of the 'COVENANT_CODE' field.
      * @return The value.
      */
    public java.lang.Long getCOVENANTCODE() {
      return COVENANT_CODE;
    }


    /**
      * Sets the value of the 'COVENANT_CODE' field.
      * @param value The value of 'COVENANT_CODE'.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.SPORTS.apache.nifi.LNDCDC_NCS_TCS_SPORTS.Builder setCOVENANTCODE(java.lang.Long value) {
      validate(fields()[39], value);
      this.COVENANT_CODE = value;
      fieldSetFlags()[39] = true;
      return this;
    }

    /**
      * Checks whether the 'COVENANT_CODE' field has been set.
      * @return True if the 'COVENANT_CODE' field has been set, false otherwise.
      */
    public boolean hasCOVENANTCODE() {
      return fieldSetFlags()[39];
    }


    /**
      * Clears the value of the 'COVENANT_CODE' field.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.SPORTS.apache.nifi.LNDCDC_NCS_TCS_SPORTS.Builder clearCOVENANTCODE() {
      COVENANT_CODE = null;
      fieldSetFlags()[39] = false;
      return this;
    }

    /**
      * Gets the value of the 'COVENANT_STUDIO_IND' field.
      * @return The value.
      */
    public java.lang.CharSequence getCOVENANTSTUDIOIND() {
      return COVENANT_STUDIO_IND;
    }


    /**
      * Sets the value of the 'COVENANT_STUDIO_IND' field.
      * @param value The value of 'COVENANT_STUDIO_IND'.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.SPORTS.apache.nifi.LNDCDC_NCS_TCS_SPORTS.Builder setCOVENANTSTUDIOIND(java.lang.CharSequence value) {
      validate(fields()[40], value);
      this.COVENANT_STUDIO_IND = value;
      fieldSetFlags()[40] = true;
      return this;
    }

    /**
      * Checks whether the 'COVENANT_STUDIO_IND' field has been set.
      * @return True if the 'COVENANT_STUDIO_IND' field has been set, false otherwise.
      */
    public boolean hasCOVENANTSTUDIOIND() {
      return fieldSetFlags()[40];
    }


    /**
      * Clears the value of the 'COVENANT_STUDIO_IND' field.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.SPORTS.apache.nifi.LNDCDC_NCS_TCS_SPORTS.Builder clearCOVENANTSTUDIOIND() {
      COVENANT_STUDIO_IND = null;
      fieldSetFlags()[40] = false;
      return this;
    }

    /**
      * Gets the value of the 'SOURCE' field.
      * @return The value.
      */
    public java.lang.CharSequence getSOURCE() {
      return SOURCE;
    }


    /**
      * Sets the value of the 'SOURCE' field.
      * @param value The value of 'SOURCE'.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.SPORTS.apache.nifi.LNDCDC_NCS_TCS_SPORTS.Builder setSOURCE(java.lang.CharSequence value) {
      validate(fields()[41], value);
      this.SOURCE = value;
      fieldSetFlags()[41] = true;
      return this;
    }

    /**
      * Checks whether the 'SOURCE' field has been set.
      * @return True if the 'SOURCE' field has been set, false otherwise.
      */
    public boolean hasSOURCE() {
      return fieldSetFlags()[41];
    }


    /**
      * Clears the value of the 'SOURCE' field.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.SPORTS.apache.nifi.LNDCDC_NCS_TCS_SPORTS.Builder clearSOURCE() {
      SOURCE = null;
      fieldSetFlags()[41] = false;
      return this;
    }

    /**
      * Gets the value of the 'NON_ESPN_IND' field.
      * @return The value.
      */
    public java.lang.CharSequence getNONESPNIND() {
      return NON_ESPN_IND;
    }


    /**
      * Sets the value of the 'NON_ESPN_IND' field.
      * @param value The value of 'NON_ESPN_IND'.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.SPORTS.apache.nifi.LNDCDC_NCS_TCS_SPORTS.Builder setNONESPNIND(java.lang.CharSequence value) {
      validate(fields()[42], value);
      this.NON_ESPN_IND = value;
      fieldSetFlags()[42] = true;
      return this;
    }

    /**
      * Checks whether the 'NON_ESPN_IND' field has been set.
      * @return True if the 'NON_ESPN_IND' field has been set, false otherwise.
      */
    public boolean hasNONESPNIND() {
      return fieldSetFlags()[42];
    }


    /**
      * Clears the value of the 'NON_ESPN_IND' field.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.SPORTS.apache.nifi.LNDCDC_NCS_TCS_SPORTS.Builder clearNONESPNIND() {
      NON_ESPN_IND = null;
      fieldSetFlags()[42] = false;
      return this;
    }

    /**
      * Gets the value of the 'SPT_COPYRIGHT_IND' field.
      * @return The value.
      */
    public java.lang.CharSequence getSPTCOPYRIGHTIND() {
      return SPT_COPYRIGHT_IND;
    }


    /**
      * Sets the value of the 'SPT_COPYRIGHT_IND' field.
      * @param value The value of 'SPT_COPYRIGHT_IND'.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.SPORTS.apache.nifi.LNDCDC_NCS_TCS_SPORTS.Builder setSPTCOPYRIGHTIND(java.lang.CharSequence value) {
      validate(fields()[43], value);
      this.SPT_COPYRIGHT_IND = value;
      fieldSetFlags()[43] = true;
      return this;
    }

    /**
      * Checks whether the 'SPT_COPYRIGHT_IND' field has been set.
      * @return True if the 'SPT_COPYRIGHT_IND' field has been set, false otherwise.
      */
    public boolean hasSPTCOPYRIGHTIND() {
      return fieldSetFlags()[43];
    }


    /**
      * Clears the value of the 'SPT_COPYRIGHT_IND' field.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.SPORTS.apache.nifi.LNDCDC_NCS_TCS_SPORTS.Builder clearSPTCOPYRIGHTIND() {
      SPT_COPYRIGHT_IND = null;
      fieldSetFlags()[43] = false;
      return this;
    }

    /**
      * Gets the value of the 'SPT_PROD_RESP_IND' field.
      * @return The value.
      */
    public java.lang.CharSequence getSPTPRODRESPIND() {
      return SPT_PROD_RESP_IND;
    }


    /**
      * Sets the value of the 'SPT_PROD_RESP_IND' field.
      * @param value The value of 'SPT_PROD_RESP_IND'.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.SPORTS.apache.nifi.LNDCDC_NCS_TCS_SPORTS.Builder setSPTPRODRESPIND(java.lang.CharSequence value) {
      validate(fields()[44], value);
      this.SPT_PROD_RESP_IND = value;
      fieldSetFlags()[44] = true;
      return this;
    }

    /**
      * Checks whether the 'SPT_PROD_RESP_IND' field has been set.
      * @return True if the 'SPT_PROD_RESP_IND' field has been set, false otherwise.
      */
    public boolean hasSPTPRODRESPIND() {
      return fieldSetFlags()[44];
    }


    /**
      * Clears the value of the 'SPT_PROD_RESP_IND' field.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.SPORTS.apache.nifi.LNDCDC_NCS_TCS_SPORTS.Builder clearSPTPRODRESPIND() {
      SPT_PROD_RESP_IND = null;
      fieldSetFlags()[44] = false;
      return this;
    }

    /**
      * Gets the value of the 'SPT_US_SITE_IND' field.
      * @return The value.
      */
    public java.lang.CharSequence getSPTUSSITEIND() {
      return SPT_US_SITE_IND;
    }


    /**
      * Sets the value of the 'SPT_US_SITE_IND' field.
      * @param value The value of 'SPT_US_SITE_IND'.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.SPORTS.apache.nifi.LNDCDC_NCS_TCS_SPORTS.Builder setSPTUSSITEIND(java.lang.CharSequence value) {
      validate(fields()[45], value);
      this.SPT_US_SITE_IND = value;
      fieldSetFlags()[45] = true;
      return this;
    }

    /**
      * Checks whether the 'SPT_US_SITE_IND' field has been set.
      * @return True if the 'SPT_US_SITE_IND' field has been set, false otherwise.
      */
    public boolean hasSPTUSSITEIND() {
      return fieldSetFlags()[45];
    }


    /**
      * Clears the value of the 'SPT_US_SITE_IND' field.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.SPORTS.apache.nifi.LNDCDC_NCS_TCS_SPORTS.Builder clearSPTUSSITEIND() {
      SPT_US_SITE_IND = null;
      fieldSetFlags()[45] = false;
      return this;
    }

    /**
      * Gets the value of the 'EXCEPTION_LISTINGS' field.
      * @return The value.
      */
    public java.lang.CharSequence getEXCEPTIONLISTINGS() {
      return EXCEPTION_LISTINGS;
    }


    /**
      * Sets the value of the 'EXCEPTION_LISTINGS' field.
      * @param value The value of 'EXCEPTION_LISTINGS'.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.SPORTS.apache.nifi.LNDCDC_NCS_TCS_SPORTS.Builder setEXCEPTIONLISTINGS(java.lang.CharSequence value) {
      validate(fields()[46], value);
      this.EXCEPTION_LISTINGS = value;
      fieldSetFlags()[46] = true;
      return this;
    }

    /**
      * Checks whether the 'EXCEPTION_LISTINGS' field has been set.
      * @return True if the 'EXCEPTION_LISTINGS' field has been set, false otherwise.
      */
    public boolean hasEXCEPTIONLISTINGS() {
      return fieldSetFlags()[46];
    }


    /**
      * Clears the value of the 'EXCEPTION_LISTINGS' field.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.SPORTS.apache.nifi.LNDCDC_NCS_TCS_SPORTS.Builder clearEXCEPTIONLISTINGS() {
      EXCEPTION_LISTINGS = null;
      fieldSetFlags()[46] = false;
      return this;
    }

    /**
      * Gets the value of the 'SPT_PROGRAM_ID' field.
      * @return The value.
      */
    public java.lang.Long getSPTPROGRAMID() {
      return SPT_PROGRAM_ID;
    }


    /**
      * Sets the value of the 'SPT_PROGRAM_ID' field.
      * @param value The value of 'SPT_PROGRAM_ID'.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.SPORTS.apache.nifi.LNDCDC_NCS_TCS_SPORTS.Builder setSPTPROGRAMID(java.lang.Long value) {
      validate(fields()[47], value);
      this.SPT_PROGRAM_ID = value;
      fieldSetFlags()[47] = true;
      return this;
    }

    /**
      * Checks whether the 'SPT_PROGRAM_ID' field has been set.
      * @return True if the 'SPT_PROGRAM_ID' field has been set, false otherwise.
      */
    public boolean hasSPTPROGRAMID() {
      return fieldSetFlags()[47];
    }


    /**
      * Clears the value of the 'SPT_PROGRAM_ID' field.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.SPORTS.apache.nifi.LNDCDC_NCS_TCS_SPORTS.Builder clearSPTPROGRAMID() {
      SPT_PROGRAM_ID = null;
      fieldSetFlags()[47] = false;
      return this;
    }

    /**
      * Gets the value of the 'SPT_LEAGUE_CODE' field.
      * @return The value.
      */
    public java.lang.Double getSPTLEAGUECODE() {
      return SPT_LEAGUE_CODE;
    }


    /**
      * Sets the value of the 'SPT_LEAGUE_CODE' field.
      * @param value The value of 'SPT_LEAGUE_CODE'.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.SPORTS.apache.nifi.LNDCDC_NCS_TCS_SPORTS.Builder setSPTLEAGUECODE(java.lang.Double value) {
      validate(fields()[48], value);
      this.SPT_LEAGUE_CODE = value;
      fieldSetFlags()[48] = true;
      return this;
    }

    /**
      * Checks whether the 'SPT_LEAGUE_CODE' field has been set.
      * @return True if the 'SPT_LEAGUE_CODE' field has been set, false otherwise.
      */
    public boolean hasSPTLEAGUECODE() {
      return fieldSetFlags()[48];
    }


    /**
      * Clears the value of the 'SPT_LEAGUE_CODE' field.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.SPORTS.apache.nifi.LNDCDC_NCS_TCS_SPORTS.Builder clearSPTLEAGUECODE() {
      SPT_LEAGUE_CODE = null;
      fieldSetFlags()[48] = false;
      return this;
    }

    /**
      * Gets the value of the 'SPT_E3_CAT_ID' field.
      * @return The value.
      */
    public java.lang.Long getSPTE3CATID() {
      return SPT_E3_CAT_ID;
    }


    /**
      * Sets the value of the 'SPT_E3_CAT_ID' field.
      * @param value The value of 'SPT_E3_CAT_ID'.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.SPORTS.apache.nifi.LNDCDC_NCS_TCS_SPORTS.Builder setSPTE3CATID(java.lang.Long value) {
      validate(fields()[49], value);
      this.SPT_E3_CAT_ID = value;
      fieldSetFlags()[49] = true;
      return this;
    }

    /**
      * Checks whether the 'SPT_E3_CAT_ID' field has been set.
      * @return True if the 'SPT_E3_CAT_ID' field has been set, false otherwise.
      */
    public boolean hasSPTE3CATID() {
      return fieldSetFlags()[49];
    }


    /**
      * Clears the value of the 'SPT_E3_CAT_ID' field.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.SPORTS.apache.nifi.LNDCDC_NCS_TCS_SPORTS.Builder clearSPTE3CATID() {
      SPT_E3_CAT_ID = null;
      fieldSetFlags()[49] = false;
      return this;
    }

    /**
      * Gets the value of the 'SPT_E3A_COF_ID' field.
      * @return The value.
      */
    public java.lang.Long getSPTE3ACOFID() {
      return SPT_E3A_COF_ID;
    }


    /**
      * Sets the value of the 'SPT_E3A_COF_ID' field.
      * @param value The value of 'SPT_E3A_COF_ID'.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.SPORTS.apache.nifi.LNDCDC_NCS_TCS_SPORTS.Builder setSPTE3ACOFID(java.lang.Long value) {
      validate(fields()[50], value);
      this.SPT_E3A_COF_ID = value;
      fieldSetFlags()[50] = true;
      return this;
    }

    /**
      * Checks whether the 'SPT_E3A_COF_ID' field has been set.
      * @return True if the 'SPT_E3A_COF_ID' field has been set, false otherwise.
      */
    public boolean hasSPTE3ACOFID() {
      return fieldSetFlags()[50];
    }


    /**
      * Clears the value of the 'SPT_E3A_COF_ID' field.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.SPORTS.apache.nifi.LNDCDC_NCS_TCS_SPORTS.Builder clearSPTE3ACOFID() {
      SPT_E3A_COF_ID = null;
      fieldSetFlags()[50] = false;
      return this;
    }

    /**
      * Gets the value of the 'E3_KILL_DATE' field.
      * @return The value.
      */
    public java.lang.CharSequence getE3KILLDATE() {
      return E3_KILL_DATE;
    }


    /**
      * Sets the value of the 'E3_KILL_DATE' field.
      * @param value The value of 'E3_KILL_DATE'.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.SPORTS.apache.nifi.LNDCDC_NCS_TCS_SPORTS.Builder setE3KILLDATE(java.lang.CharSequence value) {
      validate(fields()[51], value);
      this.E3_KILL_DATE = value;
      fieldSetFlags()[51] = true;
      return this;
    }

    /**
      * Checks whether the 'E3_KILL_DATE' field has been set.
      * @return True if the 'E3_KILL_DATE' field has been set, false otherwise.
      */
    public boolean hasE3KILLDATE() {
      return fieldSetFlags()[51];
    }


    /**
      * Clears the value of the 'E3_KILL_DATE' field.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.SPORTS.apache.nifi.LNDCDC_NCS_TCS_SPORTS.Builder clearE3KILLDATE() {
      E3_KILL_DATE = null;
      fieldSetFlags()[51] = false;
      return this;
    }

    /**
      * Gets the value of the 'E3_KILL_DAY' field.
      * @return The value.
      */
    public java.lang.Double getE3KILLDAY() {
      return E3_KILL_DAY;
    }


    /**
      * Sets the value of the 'E3_KILL_DAY' field.
      * @param value The value of 'E3_KILL_DAY'.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.SPORTS.apache.nifi.LNDCDC_NCS_TCS_SPORTS.Builder setE3KILLDAY(java.lang.Double value) {
      validate(fields()[52], value);
      this.E3_KILL_DAY = value;
      fieldSetFlags()[52] = true;
      return this;
    }

    /**
      * Checks whether the 'E3_KILL_DAY' field has been set.
      * @return True if the 'E3_KILL_DAY' field has been set, false otherwise.
      */
    public boolean hasE3KILLDAY() {
      return fieldSetFlags()[52];
    }


    /**
      * Clears the value of the 'E3_KILL_DAY' field.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.SPORTS.apache.nifi.LNDCDC_NCS_TCS_SPORTS.Builder clearE3KILLDAY() {
      E3_KILL_DAY = null;
      fieldSetFlags()[52] = false;
      return this;
    }

    /**
      * Gets the value of the 'CDC_KEY' field.
      * @return The value.
      */
    public java.lang.Double getCDCKEY() {
      return CDC_KEY;
    }


    /**
      * Sets the value of the 'CDC_KEY' field.
      * @param value The value of 'CDC_KEY'.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.SPORTS.apache.nifi.LNDCDC_NCS_TCS_SPORTS.Builder setCDCKEY(java.lang.Double value) {
      validate(fields()[53], value);
      this.CDC_KEY = value;
      fieldSetFlags()[53] = true;
      return this;
    }

    /**
      * Checks whether the 'CDC_KEY' field has been set.
      * @return True if the 'CDC_KEY' field has been set, false otherwise.
      */
    public boolean hasCDCKEY() {
      return fieldSetFlags()[53];
    }


    /**
      * Clears the value of the 'CDC_KEY' field.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.SPORTS.apache.nifi.LNDCDC_NCS_TCS_SPORTS.Builder clearCDCKEY() {
      CDC_KEY = null;
      fieldSetFlags()[53] = false;
      return this;
    }

    /**
      * Gets the value of the 'CONVERTED_DT' field.
      * @return The value.
      */
    public java.lang.CharSequence getCONVERTEDDT() {
      return CONVERTED_DT;
    }


    /**
      * Sets the value of the 'CONVERTED_DT' field.
      * @param value The value of 'CONVERTED_DT'.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.SPORTS.apache.nifi.LNDCDC_NCS_TCS_SPORTS.Builder setCONVERTEDDT(java.lang.CharSequence value) {
      validate(fields()[54], value);
      this.CONVERTED_DT = value;
      fieldSetFlags()[54] = true;
      return this;
    }

    /**
      * Checks whether the 'CONVERTED_DT' field has been set.
      * @return True if the 'CONVERTED_DT' field has been set, false otherwise.
      */
    public boolean hasCONVERTEDDT() {
      return fieldSetFlags()[54];
    }


    /**
      * Clears the value of the 'CONVERTED_DT' field.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.SPORTS.apache.nifi.LNDCDC_NCS_TCS_SPORTS.Builder clearCONVERTEDDT() {
      CONVERTED_DT = null;
      fieldSetFlags()[54] = false;
      return this;
    }

    /**
      * Gets the value of the 'JIPPED_IND' field.
      * @return The value.
      */
    public java.lang.CharSequence getJIPPEDIND() {
      return JIPPED_IND;
    }


    /**
      * Sets the value of the 'JIPPED_IND' field.
      * @param value The value of 'JIPPED_IND'.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.SPORTS.apache.nifi.LNDCDC_NCS_TCS_SPORTS.Builder setJIPPEDIND(java.lang.CharSequence value) {
      validate(fields()[55], value);
      this.JIPPED_IND = value;
      fieldSetFlags()[55] = true;
      return this;
    }

    /**
      * Checks whether the 'JIPPED_IND' field has been set.
      * @return True if the 'JIPPED_IND' field has been set, false otherwise.
      */
    public boolean hasJIPPEDIND() {
      return fieldSetFlags()[55];
    }


    /**
      * Clears the value of the 'JIPPED_IND' field.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.SPORTS.apache.nifi.LNDCDC_NCS_TCS_SPORTS.Builder clearJIPPEDIND() {
      JIPPED_IND = null;
      fieldSetFlags()[55] = false;
      return this;
    }

    /**
      * Gets the value of the 'SPT_RADIO_BLOCK_DURA' field.
      * @return The value.
      */
    public java.lang.Long getSPTRADIOBLOCKDURA() {
      return SPT_RADIO_BLOCK_DURA;
    }


    /**
      * Sets the value of the 'SPT_RADIO_BLOCK_DURA' field.
      * @param value The value of 'SPT_RADIO_BLOCK_DURA'.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.SPORTS.apache.nifi.LNDCDC_NCS_TCS_SPORTS.Builder setSPTRADIOBLOCKDURA(java.lang.Long value) {
      validate(fields()[56], value);
      this.SPT_RADIO_BLOCK_DURA = value;
      fieldSetFlags()[56] = true;
      return this;
    }

    /**
      * Checks whether the 'SPT_RADIO_BLOCK_DURA' field has been set.
      * @return True if the 'SPT_RADIO_BLOCK_DURA' field has been set, false otherwise.
      */
    public boolean hasSPTRADIOBLOCKDURA() {
      return fieldSetFlags()[56];
    }


    /**
      * Clears the value of the 'SPT_RADIO_BLOCK_DURA' field.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.SPORTS.apache.nifi.LNDCDC_NCS_TCS_SPORTS.Builder clearSPTRADIOBLOCKDURA() {
      SPT_RADIO_BLOCK_DURA = null;
      fieldSetFlags()[56] = false;
      return this;
    }

    /**
      * Gets the value of the 'E3_LIVE_REPLAY' field.
      * @return The value.
      */
    public java.lang.CharSequence getE3LIVEREPLAY() {
      return E3_LIVE_REPLAY;
    }


    /**
      * Sets the value of the 'E3_LIVE_REPLAY' field.
      * @param value The value of 'E3_LIVE_REPLAY'.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.SPORTS.apache.nifi.LNDCDC_NCS_TCS_SPORTS.Builder setE3LIVEREPLAY(java.lang.CharSequence value) {
      validate(fields()[57], value);
      this.E3_LIVE_REPLAY = value;
      fieldSetFlags()[57] = true;
      return this;
    }

    /**
      * Checks whether the 'E3_LIVE_REPLAY' field has been set.
      * @return True if the 'E3_LIVE_REPLAY' field has been set, false otherwise.
      */
    public boolean hasE3LIVEREPLAY() {
      return fieldSetFlags()[57];
    }


    /**
      * Clears the value of the 'E3_LIVE_REPLAY' field.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.SPORTS.apache.nifi.LNDCDC_NCS_TCS_SPORTS.Builder clearE3LIVEREPLAY() {
      E3_LIVE_REPLAY = null;
      fieldSetFlags()[57] = false;
      return this;
    }

    /**
      * Gets the value of the 'SRC_KEY_VAL' field.
      * @return The value.
      */
    public java.lang.CharSequence getSRCKEYVAL() {
      return SRC_KEY_VAL;
    }


    /**
      * Sets the value of the 'SRC_KEY_VAL' field.
      * @param value The value of 'SRC_KEY_VAL'.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.SPORTS.apache.nifi.LNDCDC_NCS_TCS_SPORTS.Builder setSRCKEYVAL(java.lang.CharSequence value) {
      validate(fields()[58], value);
      this.SRC_KEY_VAL = value;
      fieldSetFlags()[58] = true;
      return this;
    }

    /**
      * Checks whether the 'SRC_KEY_VAL' field has been set.
      * @return True if the 'SRC_KEY_VAL' field has been set, false otherwise.
      */
    public boolean hasSRCKEYVAL() {
      return fieldSetFlags()[58];
    }


    /**
      * Clears the value of the 'SRC_KEY_VAL' field.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.SPORTS.apache.nifi.LNDCDC_NCS_TCS_SPORTS.Builder clearSRCKEYVAL() {
      SRC_KEY_VAL = null;
      fieldSetFlags()[58] = false;
      return this;
    }

    /**
      * Gets the value of the 'SRC_CDC_OPER_NM' field.
      * @return The value.
      */
    public java.lang.CharSequence getSRCCDCOPERNM() {
      return SRC_CDC_OPER_NM;
    }


    /**
      * Sets the value of the 'SRC_CDC_OPER_NM' field.
      * @param value The value of 'SRC_CDC_OPER_NM'.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.SPORTS.apache.nifi.LNDCDC_NCS_TCS_SPORTS.Builder setSRCCDCOPERNM(java.lang.CharSequence value) {
      validate(fields()[59], value);
      this.SRC_CDC_OPER_NM = value;
      fieldSetFlags()[59] = true;
      return this;
    }

    /**
      * Checks whether the 'SRC_CDC_OPER_NM' field has been set.
      * @return True if the 'SRC_CDC_OPER_NM' field has been set, false otherwise.
      */
    public boolean hasSRCCDCOPERNM() {
      return fieldSetFlags()[59];
    }


    /**
      * Clears the value of the 'SRC_CDC_OPER_NM' field.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.SPORTS.apache.nifi.LNDCDC_NCS_TCS_SPORTS.Builder clearSRCCDCOPERNM() {
      SRC_CDC_OPER_NM = null;
      fieldSetFlags()[59] = false;
      return this;
    }

    /**
      * Gets the value of the 'SRC_COMMIT_DT_UTC' field.
      * @return The value.
      */
    public java.lang.CharSequence getSRCCOMMITDTUTC() {
      return SRC_COMMIT_DT_UTC;
    }


    /**
      * Sets the value of the 'SRC_COMMIT_DT_UTC' field.
      * @param value The value of 'SRC_COMMIT_DT_UTC'.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.SPORTS.apache.nifi.LNDCDC_NCS_TCS_SPORTS.Builder setSRCCOMMITDTUTC(java.lang.CharSequence value) {
      validate(fields()[60], value);
      this.SRC_COMMIT_DT_UTC = value;
      fieldSetFlags()[60] = true;
      return this;
    }

    /**
      * Checks whether the 'SRC_COMMIT_DT_UTC' field has been set.
      * @return True if the 'SRC_COMMIT_DT_UTC' field has been set, false otherwise.
      */
    public boolean hasSRCCOMMITDTUTC() {
      return fieldSetFlags()[60];
    }


    /**
      * Clears the value of the 'SRC_COMMIT_DT_UTC' field.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.SPORTS.apache.nifi.LNDCDC_NCS_TCS_SPORTS.Builder clearSRCCOMMITDTUTC() {
      SRC_COMMIT_DT_UTC = null;
      fieldSetFlags()[60] = false;
      return this;
    }

    /**
      * Gets the value of the 'TRG_CRT_DT_PART_UTC' field.
      * @return The value.
      */
    public java.lang.CharSequence getTRGCRTDTPARTUTC() {
      return TRG_CRT_DT_PART_UTC;
    }


    /**
      * Sets the value of the 'TRG_CRT_DT_PART_UTC' field.
      * @param value The value of 'TRG_CRT_DT_PART_UTC'.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.SPORTS.apache.nifi.LNDCDC_NCS_TCS_SPORTS.Builder setTRGCRTDTPARTUTC(java.lang.CharSequence value) {
      validate(fields()[61], value);
      this.TRG_CRT_DT_PART_UTC = value;
      fieldSetFlags()[61] = true;
      return this;
    }

    /**
      * Checks whether the 'TRG_CRT_DT_PART_UTC' field has been set.
      * @return True if the 'TRG_CRT_DT_PART_UTC' field has been set, false otherwise.
      */
    public boolean hasTRGCRTDTPARTUTC() {
      return fieldSetFlags()[61];
    }


    /**
      * Clears the value of the 'TRG_CRT_DT_PART_UTC' field.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.SPORTS.apache.nifi.LNDCDC_NCS_TCS_SPORTS.Builder clearTRGCRTDTPARTUTC() {
      TRG_CRT_DT_PART_UTC = null;
      fieldSetFlags()[61] = false;
      return this;
    }

    /**
      * Gets the value of the 'SRC_SCHEMA_NM' field.
      * @return The value.
      */
    public java.lang.CharSequence getSRCSCHEMANM() {
      return SRC_SCHEMA_NM;
    }


    /**
      * Sets the value of the 'SRC_SCHEMA_NM' field.
      * @param value The value of 'SRC_SCHEMA_NM'.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.SPORTS.apache.nifi.LNDCDC_NCS_TCS_SPORTS.Builder setSRCSCHEMANM(java.lang.CharSequence value) {
      validate(fields()[62], value);
      this.SRC_SCHEMA_NM = value;
      fieldSetFlags()[62] = true;
      return this;
    }

    /**
      * Checks whether the 'SRC_SCHEMA_NM' field has been set.
      * @return True if the 'SRC_SCHEMA_NM' field has been set, false otherwise.
      */
    public boolean hasSRCSCHEMANM() {
      return fieldSetFlags()[62];
    }


    /**
      * Clears the value of the 'SRC_SCHEMA_NM' field.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.SPORTS.apache.nifi.LNDCDC_NCS_TCS_SPORTS.Builder clearSRCSCHEMANM() {
      SRC_SCHEMA_NM = null;
      fieldSetFlags()[62] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public LNDCDC_NCS_TCS_SPORTS build() {
      try {
        LNDCDC_NCS_TCS_SPORTS record = new LNDCDC_NCS_TCS_SPORTS();
        record.SPT_SPCA_CAT = fieldSetFlags()[0] ? this.SPT_SPCA_CAT : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.SPT_PGM_CODE = fieldSetFlags()[1] ? this.SPT_PGM_CODE : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.SPT_28_58_IND = fieldSetFlags()[2] ? this.SPT_28_58_IND : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.SPT_TEAM_SPORT_IND = fieldSetFlags()[3] ? this.SPT_TEAM_SPORT_IND : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.SPT_CLOSE_CAPTION_IND = fieldSetFlags()[4] ? this.SPT_CLOSE_CAPTION_IND : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.SPT_SHOW_IND = fieldSetFlags()[5] ? this.SPT_SHOW_IND : (java.lang.CharSequence) defaultValue(fields()[5]);
        record.SPT_ROS_IND = fieldSetFlags()[6] ? this.SPT_ROS_IND : (java.lang.CharSequence) defaultValue(fields()[6]);
        record.SPT_PGM_NAME = fieldSetFlags()[7] ? this.SPT_PGM_NAME : (java.lang.CharSequence) defaultValue(fields()[7]);
        record.SPT_ROS_START_DT = fieldSetFlags()[8] ? this.SPT_ROS_START_DT : (java.lang.CharSequence) defaultValue(fields()[8]);
        record.SPT_NUM_EXCLUDED_28_58 = fieldSetFlags()[9] ? this.SPT_NUM_EXCLUDED_28_58 : (java.lang.Long) defaultValue(fields()[9]);
        record.SPT_DEFLT_EXPIR_TAPE = fieldSetFlags()[10] ? this.SPT_DEFLT_EXPIR_TAPE : (java.lang.Long) defaultValue(fields()[10]);
        record.SPT_NIEL_CAT = fieldSetFlags()[11] ? this.SPT_NIEL_CAT : (java.lang.CharSequence) defaultValue(fields()[11]);
        record.SPT_NIEL_SHORT_NAME = fieldSetFlags()[12] ? this.SPT_NIEL_SHORT_NAME : (java.lang.CharSequence) defaultValue(fields()[12]);
        record.SPT_ROS_END_DT = fieldSetFlags()[13] ? this.SPT_ROS_END_DT : (java.lang.CharSequence) defaultValue(fields()[13]);
        record.SPT_DEFLT_EXPIR_SDT = fieldSetFlags()[14] ? this.SPT_DEFLT_EXPIR_SDT : (java.lang.Long) defaultValue(fields()[14]);
        record.SPT_GENDER = fieldSetFlags()[15] ? this.SPT_GENDER : (java.lang.CharSequence) defaultValue(fields()[15]);
        record.SPT_DEFLT_EXPIR_LIVE = fieldSetFlags()[16] ? this.SPT_DEFLT_EXPIR_LIVE : (java.lang.Long) defaultValue(fields()[16]);
        record.SPT_LVL = fieldSetFlags()[17] ? this.SPT_LVL : (java.lang.CharSequence) defaultValue(fields()[17]);
        record.SPT_NIEL_QTRLY_NAME = fieldSetFlags()[18] ? this.SPT_NIEL_QTRLY_NAME : (java.lang.CharSequence) defaultValue(fields()[18]);
        record.SPT_SEASON_END = fieldSetFlags()[19] ? this.SPT_SEASON_END : (java.lang.Double) defaultValue(fields()[19]);
        record.SPT_SEASON_START = fieldSetFlags()[20] ? this.SPT_SEASON_START : (java.lang.Double) defaultValue(fields()[20]);
        record.SPT_SEASON_YEAR_IND = fieldSetFlags()[21] ? this.SPT_SEASON_YEAR_IND : (java.lang.CharSequence) defaultValue(fields()[21]);
        record.SPT_APF_IND = fieldSetFlags()[22] ? this.SPT_APF_IND : (java.lang.CharSequence) defaultValue(fields()[22]);
        record.SPT_28_58_NET_REF = fieldSetFlags()[23] ? this.SPT_28_58_NET_REF : (java.lang.CharSequence) defaultValue(fields()[23]);
        record.SPT_CREATE_REMARKS = fieldSetFlags()[24] ? this.SPT_CREATE_REMARKS : (java.lang.CharSequence) defaultValue(fields()[24]);
        record.SPT_NIEL_LATIN_NAME = fieldSetFlags()[25] ? this.SPT_NIEL_LATIN_NAME : (java.lang.CharSequence) defaultValue(fields()[25]);
        record.SPT_DFLT_STADIUM_ID = fieldSetFlags()[26] ? this.SPT_DFLT_STADIUM_ID : (java.lang.Long) defaultValue(fields()[26]);
        record.LANGUAGE_IND = fieldSetFlags()[27] ? this.LANGUAGE_IND : (java.lang.CharSequence) defaultValue(fields()[27]);
        record.SPT_LST_NAME = fieldSetFlags()[28] ? this.SPT_LST_NAME : (java.lang.CharSequence) defaultValue(fields()[28]);
        record.SPT_GENERIC_IND = fieldSetFlags()[29] ? this.SPT_GENERIC_IND : (java.lang.CharSequence) defaultValue(fields()[29]);
        record.SPT_NLSN_SPCA_CAT = fieldSetFlags()[30] ? this.SPT_NLSN_SPCA_CAT : (java.lang.CharSequence) defaultValue(fields()[30]);
        record.SPT_NLSN_SPT_PGM_CODE = fieldSetFlags()[31] ? this.SPT_NLSN_SPT_PGM_CODE : (java.lang.CharSequence) defaultValue(fields()[31]);
        record.SPT_RUNSHEET_UPDATE_IND = fieldSetFlags()[32] ? this.SPT_RUNSHEET_UPDATE_IND : (java.lang.CharSequence) defaultValue(fields()[32]);
        record.SPT_COMMENTS = fieldSetFlags()[33] ? this.SPT_COMMENTS : (java.lang.CharSequence) defaultValue(fields()[33]);
        record.SPT_BACKGROUND = fieldSetFlags()[34] ? this.SPT_BACKGROUND : (java.lang.CharSequence) defaultValue(fields()[34]);
        record.SPT_FOREGROUND = fieldSetFlags()[35] ? this.SPT_FOREGROUND : (java.lang.CharSequence) defaultValue(fields()[35]);
        record.SPT_ARCHIVE_IND = fieldSetFlags()[36] ? this.SPT_ARCHIVE_IND : (java.lang.CharSequence) defaultValue(fields()[36]);
        record.STUDIO_SHOW_IND = fieldSetFlags()[37] ? this.STUDIO_SHOW_IND : (java.lang.CharSequence) defaultValue(fields()[37]);
        record.COVENANT_IND = fieldSetFlags()[38] ? this.COVENANT_IND : (java.lang.CharSequence) defaultValue(fields()[38]);
        record.COVENANT_CODE = fieldSetFlags()[39] ? this.COVENANT_CODE : (java.lang.Long) defaultValue(fields()[39]);
        record.COVENANT_STUDIO_IND = fieldSetFlags()[40] ? this.COVENANT_STUDIO_IND : (java.lang.CharSequence) defaultValue(fields()[40]);
        record.SOURCE = fieldSetFlags()[41] ? this.SOURCE : (java.lang.CharSequence) defaultValue(fields()[41]);
        record.NON_ESPN_IND = fieldSetFlags()[42] ? this.NON_ESPN_IND : (java.lang.CharSequence) defaultValue(fields()[42]);
        record.SPT_COPYRIGHT_IND = fieldSetFlags()[43] ? this.SPT_COPYRIGHT_IND : (java.lang.CharSequence) defaultValue(fields()[43]);
        record.SPT_PROD_RESP_IND = fieldSetFlags()[44] ? this.SPT_PROD_RESP_IND : (java.lang.CharSequence) defaultValue(fields()[44]);
        record.SPT_US_SITE_IND = fieldSetFlags()[45] ? this.SPT_US_SITE_IND : (java.lang.CharSequence) defaultValue(fields()[45]);
        record.EXCEPTION_LISTINGS = fieldSetFlags()[46] ? this.EXCEPTION_LISTINGS : (java.lang.CharSequence) defaultValue(fields()[46]);
        record.SPT_PROGRAM_ID = fieldSetFlags()[47] ? this.SPT_PROGRAM_ID : (java.lang.Long) defaultValue(fields()[47]);
        record.SPT_LEAGUE_CODE = fieldSetFlags()[48] ? this.SPT_LEAGUE_CODE : (java.lang.Double) defaultValue(fields()[48]);
        record.SPT_E3_CAT_ID = fieldSetFlags()[49] ? this.SPT_E3_CAT_ID : (java.lang.Long) defaultValue(fields()[49]);
        record.SPT_E3A_COF_ID = fieldSetFlags()[50] ? this.SPT_E3A_COF_ID : (java.lang.Long) defaultValue(fields()[50]);
        record.E3_KILL_DATE = fieldSetFlags()[51] ? this.E3_KILL_DATE : (java.lang.CharSequence) defaultValue(fields()[51]);
        record.E3_KILL_DAY = fieldSetFlags()[52] ? this.E3_KILL_DAY : (java.lang.Double) defaultValue(fields()[52]);
        record.CDC_KEY = fieldSetFlags()[53] ? this.CDC_KEY : (java.lang.Double) defaultValue(fields()[53]);
        record.CONVERTED_DT = fieldSetFlags()[54] ? this.CONVERTED_DT : (java.lang.CharSequence) defaultValue(fields()[54]);
        record.JIPPED_IND = fieldSetFlags()[55] ? this.JIPPED_IND : (java.lang.CharSequence) defaultValue(fields()[55]);
        record.SPT_RADIO_BLOCK_DURA = fieldSetFlags()[56] ? this.SPT_RADIO_BLOCK_DURA : (java.lang.Long) defaultValue(fields()[56]);
        record.E3_LIVE_REPLAY = fieldSetFlags()[57] ? this.E3_LIVE_REPLAY : (java.lang.CharSequence) defaultValue(fields()[57]);
        record.SRC_KEY_VAL = fieldSetFlags()[58] ? this.SRC_KEY_VAL : (java.lang.CharSequence) defaultValue(fields()[58]);
        record.SRC_CDC_OPER_NM = fieldSetFlags()[59] ? this.SRC_CDC_OPER_NM : (java.lang.CharSequence) defaultValue(fields()[59]);
        record.SRC_COMMIT_DT_UTC = fieldSetFlags()[60] ? this.SRC_COMMIT_DT_UTC : (java.lang.CharSequence) defaultValue(fields()[60]);
        record.TRG_CRT_DT_PART_UTC = fieldSetFlags()[61] ? this.TRG_CRT_DT_PART_UTC : (java.lang.CharSequence) defaultValue(fields()[61]);
        record.SRC_SCHEMA_NM = fieldSetFlags()[62] ? this.SRC_SCHEMA_NM : (java.lang.CharSequence) defaultValue(fields()[62]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<LNDCDC_NCS_TCS_SPORTS>
    WRITER$ = (org.apache.avro.io.DatumWriter<LNDCDC_NCS_TCS_SPORTS>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<LNDCDC_NCS_TCS_SPORTS>
    READER$ = (org.apache.avro.io.DatumReader<LNDCDC_NCS_TCS_SPORTS>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    if (this.SPT_SPCA_CAT == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.SPT_SPCA_CAT);
    }

    if (this.SPT_PGM_CODE == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.SPT_PGM_CODE);
    }

    if (this.SPT_28_58_IND == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.SPT_28_58_IND);
    }

    if (this.SPT_TEAM_SPORT_IND == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.SPT_TEAM_SPORT_IND);
    }

    if (this.SPT_CLOSE_CAPTION_IND == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.SPT_CLOSE_CAPTION_IND);
    }

    if (this.SPT_SHOW_IND == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.SPT_SHOW_IND);
    }

    if (this.SPT_ROS_IND == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.SPT_ROS_IND);
    }

    if (this.SPT_PGM_NAME == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.SPT_PGM_NAME);
    }

    if (this.SPT_ROS_START_DT == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.SPT_ROS_START_DT);
    }

    if (this.SPT_NUM_EXCLUDED_28_58 == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeLong(this.SPT_NUM_EXCLUDED_28_58);
    }

    if (this.SPT_DEFLT_EXPIR_TAPE == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeLong(this.SPT_DEFLT_EXPIR_TAPE);
    }

    if (this.SPT_NIEL_CAT == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.SPT_NIEL_CAT);
    }

    if (this.SPT_NIEL_SHORT_NAME == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.SPT_NIEL_SHORT_NAME);
    }

    if (this.SPT_ROS_END_DT == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.SPT_ROS_END_DT);
    }

    if (this.SPT_DEFLT_EXPIR_SDT == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeLong(this.SPT_DEFLT_EXPIR_SDT);
    }

    if (this.SPT_GENDER == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.SPT_GENDER);
    }

    if (this.SPT_DEFLT_EXPIR_LIVE == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeLong(this.SPT_DEFLT_EXPIR_LIVE);
    }

    if (this.SPT_LVL == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.SPT_LVL);
    }

    if (this.SPT_NIEL_QTRLY_NAME == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.SPT_NIEL_QTRLY_NAME);
    }

    if (this.SPT_SEASON_END == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeDouble(this.SPT_SEASON_END);
    }

    if (this.SPT_SEASON_START == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeDouble(this.SPT_SEASON_START);
    }

    if (this.SPT_SEASON_YEAR_IND == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.SPT_SEASON_YEAR_IND);
    }

    if (this.SPT_APF_IND == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.SPT_APF_IND);
    }

    if (this.SPT_28_58_NET_REF == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.SPT_28_58_NET_REF);
    }

    if (this.SPT_CREATE_REMARKS == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.SPT_CREATE_REMARKS);
    }

    if (this.SPT_NIEL_LATIN_NAME == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.SPT_NIEL_LATIN_NAME);
    }

    if (this.SPT_DFLT_STADIUM_ID == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeLong(this.SPT_DFLT_STADIUM_ID);
    }

    if (this.LANGUAGE_IND == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.LANGUAGE_IND);
    }

    if (this.SPT_LST_NAME == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.SPT_LST_NAME);
    }

    if (this.SPT_GENERIC_IND == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.SPT_GENERIC_IND);
    }

    if (this.SPT_NLSN_SPCA_CAT == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.SPT_NLSN_SPCA_CAT);
    }

    if (this.SPT_NLSN_SPT_PGM_CODE == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.SPT_NLSN_SPT_PGM_CODE);
    }

    if (this.SPT_RUNSHEET_UPDATE_IND == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.SPT_RUNSHEET_UPDATE_IND);
    }

    if (this.SPT_COMMENTS == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.SPT_COMMENTS);
    }

    if (this.SPT_BACKGROUND == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.SPT_BACKGROUND);
    }

    if (this.SPT_FOREGROUND == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.SPT_FOREGROUND);
    }

    if (this.SPT_ARCHIVE_IND == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.SPT_ARCHIVE_IND);
    }

    if (this.STUDIO_SHOW_IND == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.STUDIO_SHOW_IND);
    }

    if (this.COVENANT_IND == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.COVENANT_IND);
    }

    if (this.COVENANT_CODE == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeLong(this.COVENANT_CODE);
    }

    if (this.COVENANT_STUDIO_IND == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.COVENANT_STUDIO_IND);
    }

    if (this.SOURCE == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.SOURCE);
    }

    if (this.NON_ESPN_IND == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.NON_ESPN_IND);
    }

    if (this.SPT_COPYRIGHT_IND == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.SPT_COPYRIGHT_IND);
    }

    if (this.SPT_PROD_RESP_IND == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.SPT_PROD_RESP_IND);
    }

    if (this.SPT_US_SITE_IND == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.SPT_US_SITE_IND);
    }

    if (this.EXCEPTION_LISTINGS == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.EXCEPTION_LISTINGS);
    }

    if (this.SPT_PROGRAM_ID == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeLong(this.SPT_PROGRAM_ID);
    }

    if (this.SPT_LEAGUE_CODE == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeDouble(this.SPT_LEAGUE_CODE);
    }

    if (this.SPT_E3_CAT_ID == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeLong(this.SPT_E3_CAT_ID);
    }

    if (this.SPT_E3A_COF_ID == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeLong(this.SPT_E3A_COF_ID);
    }

    if (this.E3_KILL_DATE == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.E3_KILL_DATE);
    }

    if (this.E3_KILL_DAY == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeDouble(this.E3_KILL_DAY);
    }

    if (this.CDC_KEY == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeDouble(this.CDC_KEY);
    }

    if (this.CONVERTED_DT == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.CONVERTED_DT);
    }

    if (this.JIPPED_IND == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.JIPPED_IND);
    }

    if (this.SPT_RADIO_BLOCK_DURA == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeLong(this.SPT_RADIO_BLOCK_DURA);
    }

    if (this.E3_LIVE_REPLAY == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.E3_LIVE_REPLAY);
    }

    out.writeString(this.SRC_KEY_VAL);

    out.writeString(this.SRC_CDC_OPER_NM);

    out.writeString(this.SRC_COMMIT_DT_UTC);

    out.writeString(this.TRG_CRT_DT_PART_UTC);

    out.writeString(this.SRC_SCHEMA_NM);

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      if (in.readIndex() != 1) {
        in.readNull();
        this.SPT_SPCA_CAT = null;
      } else {
        this.SPT_SPCA_CAT = in.readString(this.SPT_SPCA_CAT instanceof Utf8 ? (Utf8)this.SPT_SPCA_CAT : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.SPT_PGM_CODE = null;
      } else {
        this.SPT_PGM_CODE = in.readString(this.SPT_PGM_CODE instanceof Utf8 ? (Utf8)this.SPT_PGM_CODE : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.SPT_28_58_IND = null;
      } else {
        this.SPT_28_58_IND = in.readString(this.SPT_28_58_IND instanceof Utf8 ? (Utf8)this.SPT_28_58_IND : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.SPT_TEAM_SPORT_IND = null;
      } else {
        this.SPT_TEAM_SPORT_IND = in.readString(this.SPT_TEAM_SPORT_IND instanceof Utf8 ? (Utf8)this.SPT_TEAM_SPORT_IND : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.SPT_CLOSE_CAPTION_IND = null;
      } else {
        this.SPT_CLOSE_CAPTION_IND = in.readString(this.SPT_CLOSE_CAPTION_IND instanceof Utf8 ? (Utf8)this.SPT_CLOSE_CAPTION_IND : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.SPT_SHOW_IND = null;
      } else {
        this.SPT_SHOW_IND = in.readString(this.SPT_SHOW_IND instanceof Utf8 ? (Utf8)this.SPT_SHOW_IND : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.SPT_ROS_IND = null;
      } else {
        this.SPT_ROS_IND = in.readString(this.SPT_ROS_IND instanceof Utf8 ? (Utf8)this.SPT_ROS_IND : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.SPT_PGM_NAME = null;
      } else {
        this.SPT_PGM_NAME = in.readString(this.SPT_PGM_NAME instanceof Utf8 ? (Utf8)this.SPT_PGM_NAME : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.SPT_ROS_START_DT = null;
      } else {
        this.SPT_ROS_START_DT = in.readString(this.SPT_ROS_START_DT instanceof Utf8 ? (Utf8)this.SPT_ROS_START_DT : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.SPT_NUM_EXCLUDED_28_58 = null;
      } else {
        this.SPT_NUM_EXCLUDED_28_58 = in.readLong();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.SPT_DEFLT_EXPIR_TAPE = null;
      } else {
        this.SPT_DEFLT_EXPIR_TAPE = in.readLong();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.SPT_NIEL_CAT = null;
      } else {
        this.SPT_NIEL_CAT = in.readString(this.SPT_NIEL_CAT instanceof Utf8 ? (Utf8)this.SPT_NIEL_CAT : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.SPT_NIEL_SHORT_NAME = null;
      } else {
        this.SPT_NIEL_SHORT_NAME = in.readString(this.SPT_NIEL_SHORT_NAME instanceof Utf8 ? (Utf8)this.SPT_NIEL_SHORT_NAME : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.SPT_ROS_END_DT = null;
      } else {
        this.SPT_ROS_END_DT = in.readString(this.SPT_ROS_END_DT instanceof Utf8 ? (Utf8)this.SPT_ROS_END_DT : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.SPT_DEFLT_EXPIR_SDT = null;
      } else {
        this.SPT_DEFLT_EXPIR_SDT = in.readLong();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.SPT_GENDER = null;
      } else {
        this.SPT_GENDER = in.readString(this.SPT_GENDER instanceof Utf8 ? (Utf8)this.SPT_GENDER : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.SPT_DEFLT_EXPIR_LIVE = null;
      } else {
        this.SPT_DEFLT_EXPIR_LIVE = in.readLong();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.SPT_LVL = null;
      } else {
        this.SPT_LVL = in.readString(this.SPT_LVL instanceof Utf8 ? (Utf8)this.SPT_LVL : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.SPT_NIEL_QTRLY_NAME = null;
      } else {
        this.SPT_NIEL_QTRLY_NAME = in.readString(this.SPT_NIEL_QTRLY_NAME instanceof Utf8 ? (Utf8)this.SPT_NIEL_QTRLY_NAME : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.SPT_SEASON_END = null;
      } else {
        this.SPT_SEASON_END = in.readDouble();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.SPT_SEASON_START = null;
      } else {
        this.SPT_SEASON_START = in.readDouble();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.SPT_SEASON_YEAR_IND = null;
      } else {
        this.SPT_SEASON_YEAR_IND = in.readString(this.SPT_SEASON_YEAR_IND instanceof Utf8 ? (Utf8)this.SPT_SEASON_YEAR_IND : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.SPT_APF_IND = null;
      } else {
        this.SPT_APF_IND = in.readString(this.SPT_APF_IND instanceof Utf8 ? (Utf8)this.SPT_APF_IND : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.SPT_28_58_NET_REF = null;
      } else {
        this.SPT_28_58_NET_REF = in.readString(this.SPT_28_58_NET_REF instanceof Utf8 ? (Utf8)this.SPT_28_58_NET_REF : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.SPT_CREATE_REMARKS = null;
      } else {
        this.SPT_CREATE_REMARKS = in.readString(this.SPT_CREATE_REMARKS instanceof Utf8 ? (Utf8)this.SPT_CREATE_REMARKS : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.SPT_NIEL_LATIN_NAME = null;
      } else {
        this.SPT_NIEL_LATIN_NAME = in.readString(this.SPT_NIEL_LATIN_NAME instanceof Utf8 ? (Utf8)this.SPT_NIEL_LATIN_NAME : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.SPT_DFLT_STADIUM_ID = null;
      } else {
        this.SPT_DFLT_STADIUM_ID = in.readLong();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.LANGUAGE_IND = null;
      } else {
        this.LANGUAGE_IND = in.readString(this.LANGUAGE_IND instanceof Utf8 ? (Utf8)this.LANGUAGE_IND : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.SPT_LST_NAME = null;
      } else {
        this.SPT_LST_NAME = in.readString(this.SPT_LST_NAME instanceof Utf8 ? (Utf8)this.SPT_LST_NAME : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.SPT_GENERIC_IND = null;
      } else {
        this.SPT_GENERIC_IND = in.readString(this.SPT_GENERIC_IND instanceof Utf8 ? (Utf8)this.SPT_GENERIC_IND : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.SPT_NLSN_SPCA_CAT = null;
      } else {
        this.SPT_NLSN_SPCA_CAT = in.readString(this.SPT_NLSN_SPCA_CAT instanceof Utf8 ? (Utf8)this.SPT_NLSN_SPCA_CAT : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.SPT_NLSN_SPT_PGM_CODE = null;
      } else {
        this.SPT_NLSN_SPT_PGM_CODE = in.readString(this.SPT_NLSN_SPT_PGM_CODE instanceof Utf8 ? (Utf8)this.SPT_NLSN_SPT_PGM_CODE : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.SPT_RUNSHEET_UPDATE_IND = null;
      } else {
        this.SPT_RUNSHEET_UPDATE_IND = in.readString(this.SPT_RUNSHEET_UPDATE_IND instanceof Utf8 ? (Utf8)this.SPT_RUNSHEET_UPDATE_IND : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.SPT_COMMENTS = null;
      } else {
        this.SPT_COMMENTS = in.readString(this.SPT_COMMENTS instanceof Utf8 ? (Utf8)this.SPT_COMMENTS : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.SPT_BACKGROUND = null;
      } else {
        this.SPT_BACKGROUND = in.readString(this.SPT_BACKGROUND instanceof Utf8 ? (Utf8)this.SPT_BACKGROUND : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.SPT_FOREGROUND = null;
      } else {
        this.SPT_FOREGROUND = in.readString(this.SPT_FOREGROUND instanceof Utf8 ? (Utf8)this.SPT_FOREGROUND : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.SPT_ARCHIVE_IND = null;
      } else {
        this.SPT_ARCHIVE_IND = in.readString(this.SPT_ARCHIVE_IND instanceof Utf8 ? (Utf8)this.SPT_ARCHIVE_IND : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.STUDIO_SHOW_IND = null;
      } else {
        this.STUDIO_SHOW_IND = in.readString(this.STUDIO_SHOW_IND instanceof Utf8 ? (Utf8)this.STUDIO_SHOW_IND : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.COVENANT_IND = null;
      } else {
        this.COVENANT_IND = in.readString(this.COVENANT_IND instanceof Utf8 ? (Utf8)this.COVENANT_IND : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.COVENANT_CODE = null;
      } else {
        this.COVENANT_CODE = in.readLong();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.COVENANT_STUDIO_IND = null;
      } else {
        this.COVENANT_STUDIO_IND = in.readString(this.COVENANT_STUDIO_IND instanceof Utf8 ? (Utf8)this.COVENANT_STUDIO_IND : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.SOURCE = null;
      } else {
        this.SOURCE = in.readString(this.SOURCE instanceof Utf8 ? (Utf8)this.SOURCE : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.NON_ESPN_IND = null;
      } else {
        this.NON_ESPN_IND = in.readString(this.NON_ESPN_IND instanceof Utf8 ? (Utf8)this.NON_ESPN_IND : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.SPT_COPYRIGHT_IND = null;
      } else {
        this.SPT_COPYRIGHT_IND = in.readString(this.SPT_COPYRIGHT_IND instanceof Utf8 ? (Utf8)this.SPT_COPYRIGHT_IND : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.SPT_PROD_RESP_IND = null;
      } else {
        this.SPT_PROD_RESP_IND = in.readString(this.SPT_PROD_RESP_IND instanceof Utf8 ? (Utf8)this.SPT_PROD_RESP_IND : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.SPT_US_SITE_IND = null;
      } else {
        this.SPT_US_SITE_IND = in.readString(this.SPT_US_SITE_IND instanceof Utf8 ? (Utf8)this.SPT_US_SITE_IND : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.EXCEPTION_LISTINGS = null;
      } else {
        this.EXCEPTION_LISTINGS = in.readString(this.EXCEPTION_LISTINGS instanceof Utf8 ? (Utf8)this.EXCEPTION_LISTINGS : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.SPT_PROGRAM_ID = null;
      } else {
        this.SPT_PROGRAM_ID = in.readLong();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.SPT_LEAGUE_CODE = null;
      } else {
        this.SPT_LEAGUE_CODE = in.readDouble();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.SPT_E3_CAT_ID = null;
      } else {
        this.SPT_E3_CAT_ID = in.readLong();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.SPT_E3A_COF_ID = null;
      } else {
        this.SPT_E3A_COF_ID = in.readLong();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.E3_KILL_DATE = null;
      } else {
        this.E3_KILL_DATE = in.readString(this.E3_KILL_DATE instanceof Utf8 ? (Utf8)this.E3_KILL_DATE : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.E3_KILL_DAY = null;
      } else {
        this.E3_KILL_DAY = in.readDouble();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.CDC_KEY = null;
      } else {
        this.CDC_KEY = in.readDouble();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.CONVERTED_DT = null;
      } else {
        this.CONVERTED_DT = in.readString(this.CONVERTED_DT instanceof Utf8 ? (Utf8)this.CONVERTED_DT : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.JIPPED_IND = null;
      } else {
        this.JIPPED_IND = in.readString(this.JIPPED_IND instanceof Utf8 ? (Utf8)this.JIPPED_IND : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.SPT_RADIO_BLOCK_DURA = null;
      } else {
        this.SPT_RADIO_BLOCK_DURA = in.readLong();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.E3_LIVE_REPLAY = null;
      } else {
        this.E3_LIVE_REPLAY = in.readString(this.E3_LIVE_REPLAY instanceof Utf8 ? (Utf8)this.E3_LIVE_REPLAY : null);
      }

      this.SRC_KEY_VAL = in.readString(this.SRC_KEY_VAL instanceof Utf8 ? (Utf8)this.SRC_KEY_VAL : null);

      this.SRC_CDC_OPER_NM = in.readString(this.SRC_CDC_OPER_NM instanceof Utf8 ? (Utf8)this.SRC_CDC_OPER_NM : null);

      this.SRC_COMMIT_DT_UTC = in.readString(this.SRC_COMMIT_DT_UTC instanceof Utf8 ? (Utf8)this.SRC_COMMIT_DT_UTC : null);

      this.TRG_CRT_DT_PART_UTC = in.readString(this.TRG_CRT_DT_PART_UTC instanceof Utf8 ? (Utf8)this.TRG_CRT_DT_PART_UTC : null);

      this.SRC_SCHEMA_NM = in.readString(this.SRC_SCHEMA_NM instanceof Utf8 ? (Utf8)this.SRC_SCHEMA_NM : null);

    } else {
      for (int i = 0; i < 63; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          if (in.readIndex() != 1) {
            in.readNull();
            this.SPT_SPCA_CAT = null;
          } else {
            this.SPT_SPCA_CAT = in.readString(this.SPT_SPCA_CAT instanceof Utf8 ? (Utf8)this.SPT_SPCA_CAT : null);
          }
          break;

        case 1:
          if (in.readIndex() != 1) {
            in.readNull();
            this.SPT_PGM_CODE = null;
          } else {
            this.SPT_PGM_CODE = in.readString(this.SPT_PGM_CODE instanceof Utf8 ? (Utf8)this.SPT_PGM_CODE : null);
          }
          break;

        case 2:
          if (in.readIndex() != 1) {
            in.readNull();
            this.SPT_28_58_IND = null;
          } else {
            this.SPT_28_58_IND = in.readString(this.SPT_28_58_IND instanceof Utf8 ? (Utf8)this.SPT_28_58_IND : null);
          }
          break;

        case 3:
          if (in.readIndex() != 1) {
            in.readNull();
            this.SPT_TEAM_SPORT_IND = null;
          } else {
            this.SPT_TEAM_SPORT_IND = in.readString(this.SPT_TEAM_SPORT_IND instanceof Utf8 ? (Utf8)this.SPT_TEAM_SPORT_IND : null);
          }
          break;

        case 4:
          if (in.readIndex() != 1) {
            in.readNull();
            this.SPT_CLOSE_CAPTION_IND = null;
          } else {
            this.SPT_CLOSE_CAPTION_IND = in.readString(this.SPT_CLOSE_CAPTION_IND instanceof Utf8 ? (Utf8)this.SPT_CLOSE_CAPTION_IND : null);
          }
          break;

        case 5:
          if (in.readIndex() != 1) {
            in.readNull();
            this.SPT_SHOW_IND = null;
          } else {
            this.SPT_SHOW_IND = in.readString(this.SPT_SHOW_IND instanceof Utf8 ? (Utf8)this.SPT_SHOW_IND : null);
          }
          break;

        case 6:
          if (in.readIndex() != 1) {
            in.readNull();
            this.SPT_ROS_IND = null;
          } else {
            this.SPT_ROS_IND = in.readString(this.SPT_ROS_IND instanceof Utf8 ? (Utf8)this.SPT_ROS_IND : null);
          }
          break;

        case 7:
          if (in.readIndex() != 1) {
            in.readNull();
            this.SPT_PGM_NAME = null;
          } else {
            this.SPT_PGM_NAME = in.readString(this.SPT_PGM_NAME instanceof Utf8 ? (Utf8)this.SPT_PGM_NAME : null);
          }
          break;

        case 8:
          if (in.readIndex() != 1) {
            in.readNull();
            this.SPT_ROS_START_DT = null;
          } else {
            this.SPT_ROS_START_DT = in.readString(this.SPT_ROS_START_DT instanceof Utf8 ? (Utf8)this.SPT_ROS_START_DT : null);
          }
          break;

        case 9:
          if (in.readIndex() != 1) {
            in.readNull();
            this.SPT_NUM_EXCLUDED_28_58 = null;
          } else {
            this.SPT_NUM_EXCLUDED_28_58 = in.readLong();
          }
          break;

        case 10:
          if (in.readIndex() != 1) {
            in.readNull();
            this.SPT_DEFLT_EXPIR_TAPE = null;
          } else {
            this.SPT_DEFLT_EXPIR_TAPE = in.readLong();
          }
          break;

        case 11:
          if (in.readIndex() != 1) {
            in.readNull();
            this.SPT_NIEL_CAT = null;
          } else {
            this.SPT_NIEL_CAT = in.readString(this.SPT_NIEL_CAT instanceof Utf8 ? (Utf8)this.SPT_NIEL_CAT : null);
          }
          break;

        case 12:
          if (in.readIndex() != 1) {
            in.readNull();
            this.SPT_NIEL_SHORT_NAME = null;
          } else {
            this.SPT_NIEL_SHORT_NAME = in.readString(this.SPT_NIEL_SHORT_NAME instanceof Utf8 ? (Utf8)this.SPT_NIEL_SHORT_NAME : null);
          }
          break;

        case 13:
          if (in.readIndex() != 1) {
            in.readNull();
            this.SPT_ROS_END_DT = null;
          } else {
            this.SPT_ROS_END_DT = in.readString(this.SPT_ROS_END_DT instanceof Utf8 ? (Utf8)this.SPT_ROS_END_DT : null);
          }
          break;

        case 14:
          if (in.readIndex() != 1) {
            in.readNull();
            this.SPT_DEFLT_EXPIR_SDT = null;
          } else {
            this.SPT_DEFLT_EXPIR_SDT = in.readLong();
          }
          break;

        case 15:
          if (in.readIndex() != 1) {
            in.readNull();
            this.SPT_GENDER = null;
          } else {
            this.SPT_GENDER = in.readString(this.SPT_GENDER instanceof Utf8 ? (Utf8)this.SPT_GENDER : null);
          }
          break;

        case 16:
          if (in.readIndex() != 1) {
            in.readNull();
            this.SPT_DEFLT_EXPIR_LIVE = null;
          } else {
            this.SPT_DEFLT_EXPIR_LIVE = in.readLong();
          }
          break;

        case 17:
          if (in.readIndex() != 1) {
            in.readNull();
            this.SPT_LVL = null;
          } else {
            this.SPT_LVL = in.readString(this.SPT_LVL instanceof Utf8 ? (Utf8)this.SPT_LVL : null);
          }
          break;

        case 18:
          if (in.readIndex() != 1) {
            in.readNull();
            this.SPT_NIEL_QTRLY_NAME = null;
          } else {
            this.SPT_NIEL_QTRLY_NAME = in.readString(this.SPT_NIEL_QTRLY_NAME instanceof Utf8 ? (Utf8)this.SPT_NIEL_QTRLY_NAME : null);
          }
          break;

        case 19:
          if (in.readIndex() != 1) {
            in.readNull();
            this.SPT_SEASON_END = null;
          } else {
            this.SPT_SEASON_END = in.readDouble();
          }
          break;

        case 20:
          if (in.readIndex() != 1) {
            in.readNull();
            this.SPT_SEASON_START = null;
          } else {
            this.SPT_SEASON_START = in.readDouble();
          }
          break;

        case 21:
          if (in.readIndex() != 1) {
            in.readNull();
            this.SPT_SEASON_YEAR_IND = null;
          } else {
            this.SPT_SEASON_YEAR_IND = in.readString(this.SPT_SEASON_YEAR_IND instanceof Utf8 ? (Utf8)this.SPT_SEASON_YEAR_IND : null);
          }
          break;

        case 22:
          if (in.readIndex() != 1) {
            in.readNull();
            this.SPT_APF_IND = null;
          } else {
            this.SPT_APF_IND = in.readString(this.SPT_APF_IND instanceof Utf8 ? (Utf8)this.SPT_APF_IND : null);
          }
          break;

        case 23:
          if (in.readIndex() != 1) {
            in.readNull();
            this.SPT_28_58_NET_REF = null;
          } else {
            this.SPT_28_58_NET_REF = in.readString(this.SPT_28_58_NET_REF instanceof Utf8 ? (Utf8)this.SPT_28_58_NET_REF : null);
          }
          break;

        case 24:
          if (in.readIndex() != 1) {
            in.readNull();
            this.SPT_CREATE_REMARKS = null;
          } else {
            this.SPT_CREATE_REMARKS = in.readString(this.SPT_CREATE_REMARKS instanceof Utf8 ? (Utf8)this.SPT_CREATE_REMARKS : null);
          }
          break;

        case 25:
          if (in.readIndex() != 1) {
            in.readNull();
            this.SPT_NIEL_LATIN_NAME = null;
          } else {
            this.SPT_NIEL_LATIN_NAME = in.readString(this.SPT_NIEL_LATIN_NAME instanceof Utf8 ? (Utf8)this.SPT_NIEL_LATIN_NAME : null);
          }
          break;

        case 26:
          if (in.readIndex() != 1) {
            in.readNull();
            this.SPT_DFLT_STADIUM_ID = null;
          } else {
            this.SPT_DFLT_STADIUM_ID = in.readLong();
          }
          break;

        case 27:
          if (in.readIndex() != 1) {
            in.readNull();
            this.LANGUAGE_IND = null;
          } else {
            this.LANGUAGE_IND = in.readString(this.LANGUAGE_IND instanceof Utf8 ? (Utf8)this.LANGUAGE_IND : null);
          }
          break;

        case 28:
          if (in.readIndex() != 1) {
            in.readNull();
            this.SPT_LST_NAME = null;
          } else {
            this.SPT_LST_NAME = in.readString(this.SPT_LST_NAME instanceof Utf8 ? (Utf8)this.SPT_LST_NAME : null);
          }
          break;

        case 29:
          if (in.readIndex() != 1) {
            in.readNull();
            this.SPT_GENERIC_IND = null;
          } else {
            this.SPT_GENERIC_IND = in.readString(this.SPT_GENERIC_IND instanceof Utf8 ? (Utf8)this.SPT_GENERIC_IND : null);
          }
          break;

        case 30:
          if (in.readIndex() != 1) {
            in.readNull();
            this.SPT_NLSN_SPCA_CAT = null;
          } else {
            this.SPT_NLSN_SPCA_CAT = in.readString(this.SPT_NLSN_SPCA_CAT instanceof Utf8 ? (Utf8)this.SPT_NLSN_SPCA_CAT : null);
          }
          break;

        case 31:
          if (in.readIndex() != 1) {
            in.readNull();
            this.SPT_NLSN_SPT_PGM_CODE = null;
          } else {
            this.SPT_NLSN_SPT_PGM_CODE = in.readString(this.SPT_NLSN_SPT_PGM_CODE instanceof Utf8 ? (Utf8)this.SPT_NLSN_SPT_PGM_CODE : null);
          }
          break;

        case 32:
          if (in.readIndex() != 1) {
            in.readNull();
            this.SPT_RUNSHEET_UPDATE_IND = null;
          } else {
            this.SPT_RUNSHEET_UPDATE_IND = in.readString(this.SPT_RUNSHEET_UPDATE_IND instanceof Utf8 ? (Utf8)this.SPT_RUNSHEET_UPDATE_IND : null);
          }
          break;

        case 33:
          if (in.readIndex() != 1) {
            in.readNull();
            this.SPT_COMMENTS = null;
          } else {
            this.SPT_COMMENTS = in.readString(this.SPT_COMMENTS instanceof Utf8 ? (Utf8)this.SPT_COMMENTS : null);
          }
          break;

        case 34:
          if (in.readIndex() != 1) {
            in.readNull();
            this.SPT_BACKGROUND = null;
          } else {
            this.SPT_BACKGROUND = in.readString(this.SPT_BACKGROUND instanceof Utf8 ? (Utf8)this.SPT_BACKGROUND : null);
          }
          break;

        case 35:
          if (in.readIndex() != 1) {
            in.readNull();
            this.SPT_FOREGROUND = null;
          } else {
            this.SPT_FOREGROUND = in.readString(this.SPT_FOREGROUND instanceof Utf8 ? (Utf8)this.SPT_FOREGROUND : null);
          }
          break;

        case 36:
          if (in.readIndex() != 1) {
            in.readNull();
            this.SPT_ARCHIVE_IND = null;
          } else {
            this.SPT_ARCHIVE_IND = in.readString(this.SPT_ARCHIVE_IND instanceof Utf8 ? (Utf8)this.SPT_ARCHIVE_IND : null);
          }
          break;

        case 37:
          if (in.readIndex() != 1) {
            in.readNull();
            this.STUDIO_SHOW_IND = null;
          } else {
            this.STUDIO_SHOW_IND = in.readString(this.STUDIO_SHOW_IND instanceof Utf8 ? (Utf8)this.STUDIO_SHOW_IND : null);
          }
          break;

        case 38:
          if (in.readIndex() != 1) {
            in.readNull();
            this.COVENANT_IND = null;
          } else {
            this.COVENANT_IND = in.readString(this.COVENANT_IND instanceof Utf8 ? (Utf8)this.COVENANT_IND : null);
          }
          break;

        case 39:
          if (in.readIndex() != 1) {
            in.readNull();
            this.COVENANT_CODE = null;
          } else {
            this.COVENANT_CODE = in.readLong();
          }
          break;

        case 40:
          if (in.readIndex() != 1) {
            in.readNull();
            this.COVENANT_STUDIO_IND = null;
          } else {
            this.COVENANT_STUDIO_IND = in.readString(this.COVENANT_STUDIO_IND instanceof Utf8 ? (Utf8)this.COVENANT_STUDIO_IND : null);
          }
          break;

        case 41:
          if (in.readIndex() != 1) {
            in.readNull();
            this.SOURCE = null;
          } else {
            this.SOURCE = in.readString(this.SOURCE instanceof Utf8 ? (Utf8)this.SOURCE : null);
          }
          break;

        case 42:
          if (in.readIndex() != 1) {
            in.readNull();
            this.NON_ESPN_IND = null;
          } else {
            this.NON_ESPN_IND = in.readString(this.NON_ESPN_IND instanceof Utf8 ? (Utf8)this.NON_ESPN_IND : null);
          }
          break;

        case 43:
          if (in.readIndex() != 1) {
            in.readNull();
            this.SPT_COPYRIGHT_IND = null;
          } else {
            this.SPT_COPYRIGHT_IND = in.readString(this.SPT_COPYRIGHT_IND instanceof Utf8 ? (Utf8)this.SPT_COPYRIGHT_IND : null);
          }
          break;

        case 44:
          if (in.readIndex() != 1) {
            in.readNull();
            this.SPT_PROD_RESP_IND = null;
          } else {
            this.SPT_PROD_RESP_IND = in.readString(this.SPT_PROD_RESP_IND instanceof Utf8 ? (Utf8)this.SPT_PROD_RESP_IND : null);
          }
          break;

        case 45:
          if (in.readIndex() != 1) {
            in.readNull();
            this.SPT_US_SITE_IND = null;
          } else {
            this.SPT_US_SITE_IND = in.readString(this.SPT_US_SITE_IND instanceof Utf8 ? (Utf8)this.SPT_US_SITE_IND : null);
          }
          break;

        case 46:
          if (in.readIndex() != 1) {
            in.readNull();
            this.EXCEPTION_LISTINGS = null;
          } else {
            this.EXCEPTION_LISTINGS = in.readString(this.EXCEPTION_LISTINGS instanceof Utf8 ? (Utf8)this.EXCEPTION_LISTINGS : null);
          }
          break;

        case 47:
          if (in.readIndex() != 1) {
            in.readNull();
            this.SPT_PROGRAM_ID = null;
          } else {
            this.SPT_PROGRAM_ID = in.readLong();
          }
          break;

        case 48:
          if (in.readIndex() != 1) {
            in.readNull();
            this.SPT_LEAGUE_CODE = null;
          } else {
            this.SPT_LEAGUE_CODE = in.readDouble();
          }
          break;

        case 49:
          if (in.readIndex() != 1) {
            in.readNull();
            this.SPT_E3_CAT_ID = null;
          } else {
            this.SPT_E3_CAT_ID = in.readLong();
          }
          break;

        case 50:
          if (in.readIndex() != 1) {
            in.readNull();
            this.SPT_E3A_COF_ID = null;
          } else {
            this.SPT_E3A_COF_ID = in.readLong();
          }
          break;

        case 51:
          if (in.readIndex() != 1) {
            in.readNull();
            this.E3_KILL_DATE = null;
          } else {
            this.E3_KILL_DATE = in.readString(this.E3_KILL_DATE instanceof Utf8 ? (Utf8)this.E3_KILL_DATE : null);
          }
          break;

        case 52:
          if (in.readIndex() != 1) {
            in.readNull();
            this.E3_KILL_DAY = null;
          } else {
            this.E3_KILL_DAY = in.readDouble();
          }
          break;

        case 53:
          if (in.readIndex() != 1) {
            in.readNull();
            this.CDC_KEY = null;
          } else {
            this.CDC_KEY = in.readDouble();
          }
          break;

        case 54:
          if (in.readIndex() != 1) {
            in.readNull();
            this.CONVERTED_DT = null;
          } else {
            this.CONVERTED_DT = in.readString(this.CONVERTED_DT instanceof Utf8 ? (Utf8)this.CONVERTED_DT : null);
          }
          break;

        case 55:
          if (in.readIndex() != 1) {
            in.readNull();
            this.JIPPED_IND = null;
          } else {
            this.JIPPED_IND = in.readString(this.JIPPED_IND instanceof Utf8 ? (Utf8)this.JIPPED_IND : null);
          }
          break;

        case 56:
          if (in.readIndex() != 1) {
            in.readNull();
            this.SPT_RADIO_BLOCK_DURA = null;
          } else {
            this.SPT_RADIO_BLOCK_DURA = in.readLong();
          }
          break;

        case 57:
          if (in.readIndex() != 1) {
            in.readNull();
            this.E3_LIVE_REPLAY = null;
          } else {
            this.E3_LIVE_REPLAY = in.readString(this.E3_LIVE_REPLAY instanceof Utf8 ? (Utf8)this.E3_LIVE_REPLAY : null);
          }
          break;

        case 58:
          this.SRC_KEY_VAL = in.readString(this.SRC_KEY_VAL instanceof Utf8 ? (Utf8)this.SRC_KEY_VAL : null);
          break;

        case 59:
          this.SRC_CDC_OPER_NM = in.readString(this.SRC_CDC_OPER_NM instanceof Utf8 ? (Utf8)this.SRC_CDC_OPER_NM : null);
          break;

        case 60:
          this.SRC_COMMIT_DT_UTC = in.readString(this.SRC_COMMIT_DT_UTC instanceof Utf8 ? (Utf8)this.SRC_COMMIT_DT_UTC : null);
          break;

        case 61:
          this.TRG_CRT_DT_PART_UTC = in.readString(this.TRG_CRT_DT_PART_UTC instanceof Utf8 ? (Utf8)this.TRG_CRT_DT_PART_UTC : null);
          break;

        case 62:
          this.SRC_SCHEMA_NM = in.readString(this.SRC_SCHEMA_NM instanceof Utf8 ? (Utf8)this.SRC_SCHEMA_NM : null);
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










