/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package org.LNDCDC_NCS_TCS.COMPETITOR_SPORTS.apache.nifi;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class LNDCDC_NCS_TCS_COMPETITOR_SPORTS extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 1226091021698226391L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"LNDCDC_NCS_TCS_COMPETITOR_SPORTS\",\"namespace\":\"org.LNDCDC_NCS_TCS.COMPETITOR_SPORTS.apache.nifi\",\"fields\":[{\"name\":\"CMPS_SPT_PGM_CODE\",\"type\":[\"null\",\"string\"]},{\"name\":\"CMPS_SPCA_CAT\",\"type\":[\"null\",\"string\"]},{\"name\":\"CMPS_SPT_NAME\",\"type\":[\"null\",\"string\"]},{\"name\":\"CMPS_NIEL_CAT\",\"type\":[\"null\",\"string\"]},{\"name\":\"CMPS_STANDARD_IND\",\"type\":[\"null\",\"string\"]},{\"name\":\"CMPS_NLSN_SUM_CODE\",\"type\":[\"null\",\"string\"]},{\"name\":\"CDC_KEY\",\"type\":[\"null\",\"double\"]},{\"name\":\"SRC_KEY_VAL\",\"type\":\"string\"},{\"name\":\"SRC_CDC_OPER_NM\",\"type\":\"string\"},{\"name\":\"SRC_COMMIT_DT_UTC\",\"type\":\"string\"},{\"name\":\"TRG_CRT_DT_PART_UTC\",\"type\":\"string\"},{\"name\":\"SRC_SCHEMA_NM\",\"type\":\"string\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<LNDCDC_NCS_TCS_COMPETITOR_SPORTS> ENCODER =
      new BinaryMessageEncoder<LNDCDC_NCS_TCS_COMPETITOR_SPORTS>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<LNDCDC_NCS_TCS_COMPETITOR_SPORTS> DECODER =
      new BinaryMessageDecoder<LNDCDC_NCS_TCS_COMPETITOR_SPORTS>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<LNDCDC_NCS_TCS_COMPETITOR_SPORTS> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<LNDCDC_NCS_TCS_COMPETITOR_SPORTS> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<LNDCDC_NCS_TCS_COMPETITOR_SPORTS> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<LNDCDC_NCS_TCS_COMPETITOR_SPORTS>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this LNDCDC_NCS_TCS_COMPETITOR_SPORTS to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a LNDCDC_NCS_TCS_COMPETITOR_SPORTS from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a LNDCDC_NCS_TCS_COMPETITOR_SPORTS instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static LNDCDC_NCS_TCS_COMPETITOR_SPORTS fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

   private java.lang.CharSequence CMPS_SPT_PGM_CODE;
   private java.lang.CharSequence CMPS_SPCA_CAT;
   private java.lang.CharSequence CMPS_SPT_NAME;
   private java.lang.CharSequence CMPS_NIEL_CAT;
   private java.lang.CharSequence CMPS_STANDARD_IND;
   private java.lang.CharSequence CMPS_NLSN_SUM_CODE;
   private java.lang.Double CDC_KEY;
   private java.lang.CharSequence SRC_KEY_VAL;
   private java.lang.CharSequence SRC_CDC_OPER_NM;
   private java.lang.CharSequence SRC_COMMIT_DT_UTC;
   private java.lang.CharSequence TRG_CRT_DT_PART_UTC;
   private java.lang.CharSequence SRC_SCHEMA_NM;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public LNDCDC_NCS_TCS_COMPETITOR_SPORTS() {}

  /**
   * All-args constructor.
   * @param CMPS_SPT_PGM_CODE The new value for CMPS_SPT_PGM_CODE
   * @param CMPS_SPCA_CAT The new value for CMPS_SPCA_CAT
   * @param CMPS_SPT_NAME The new value for CMPS_SPT_NAME
   * @param CMPS_NIEL_CAT The new value for CMPS_NIEL_CAT
   * @param CMPS_STANDARD_IND The new value for CMPS_STANDARD_IND
   * @param CMPS_NLSN_SUM_CODE The new value for CMPS_NLSN_SUM_CODE
   * @param CDC_KEY The new value for CDC_KEY
   * @param SRC_KEY_VAL The new value for SRC_KEY_VAL
   * @param SRC_CDC_OPER_NM The new value for SRC_CDC_OPER_NM
   * @param SRC_COMMIT_DT_UTC The new value for SRC_COMMIT_DT_UTC
   * @param TRG_CRT_DT_PART_UTC The new value for TRG_CRT_DT_PART_UTC
   * @param SRC_SCHEMA_NM The new value for SRC_SCHEMA_NM
   */
  public LNDCDC_NCS_TCS_COMPETITOR_SPORTS(java.lang.CharSequence CMPS_SPT_PGM_CODE, java.lang.CharSequence CMPS_SPCA_CAT, java.lang.CharSequence CMPS_SPT_NAME, java.lang.CharSequence CMPS_NIEL_CAT, java.lang.CharSequence CMPS_STANDARD_IND, java.lang.CharSequence CMPS_NLSN_SUM_CODE, java.lang.Double CDC_KEY, java.lang.CharSequence SRC_KEY_VAL, java.lang.CharSequence SRC_CDC_OPER_NM, java.lang.CharSequence SRC_COMMIT_DT_UTC, java.lang.CharSequence TRG_CRT_DT_PART_UTC, java.lang.CharSequence SRC_SCHEMA_NM) {
    this.CMPS_SPT_PGM_CODE = CMPS_SPT_PGM_CODE;
    this.CMPS_SPCA_CAT = CMPS_SPCA_CAT;
    this.CMPS_SPT_NAME = CMPS_SPT_NAME;
    this.CMPS_NIEL_CAT = CMPS_NIEL_CAT;
    this.CMPS_STANDARD_IND = CMPS_STANDARD_IND;
    this.CMPS_NLSN_SUM_CODE = CMPS_NLSN_SUM_CODE;
    this.CDC_KEY = CDC_KEY;
    this.SRC_KEY_VAL = SRC_KEY_VAL;
    this.SRC_CDC_OPER_NM = SRC_CDC_OPER_NM;
    this.SRC_COMMIT_DT_UTC = SRC_COMMIT_DT_UTC;
    this.TRG_CRT_DT_PART_UTC = TRG_CRT_DT_PART_UTC;
    this.SRC_SCHEMA_NM = SRC_SCHEMA_NM;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return CMPS_SPT_PGM_CODE;
    case 1: return CMPS_SPCA_CAT;
    case 2: return CMPS_SPT_NAME;
    case 3: return CMPS_NIEL_CAT;
    case 4: return CMPS_STANDARD_IND;
    case 5: return CMPS_NLSN_SUM_CODE;
    case 6: return CDC_KEY;
    case 7: return SRC_KEY_VAL;
    case 8: return SRC_CDC_OPER_NM;
    case 9: return SRC_COMMIT_DT_UTC;
    case 10: return TRG_CRT_DT_PART_UTC;
    case 11: return SRC_SCHEMA_NM;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: CMPS_SPT_PGM_CODE = (java.lang.CharSequence)value$; break;
    case 1: CMPS_SPCA_CAT = (java.lang.CharSequence)value$; break;
    case 2: CMPS_SPT_NAME = (java.lang.CharSequence)value$; break;
    case 3: CMPS_NIEL_CAT = (java.lang.CharSequence)value$; break;
    case 4: CMPS_STANDARD_IND = (java.lang.CharSequence)value$; break;
    case 5: CMPS_NLSN_SUM_CODE = (java.lang.CharSequence)value$; break;
    case 6: CDC_KEY = (java.lang.Double)value$; break;
    case 7: SRC_KEY_VAL = (java.lang.CharSequence)value$; break;
    case 8: SRC_CDC_OPER_NM = (java.lang.CharSequence)value$; break;
    case 9: SRC_COMMIT_DT_UTC = (java.lang.CharSequence)value$; break;
    case 10: TRG_CRT_DT_PART_UTC = (java.lang.CharSequence)value$; break;
    case 11: SRC_SCHEMA_NM = (java.lang.CharSequence)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'CMPS_SPT_PGM_CODE' field.
   * @return The value of the 'CMPS_SPT_PGM_CODE' field.
   */
  public java.lang.CharSequence getCMPSSPTPGMCODE() {
    return CMPS_SPT_PGM_CODE;
  }


  /**
   * Sets the value of the 'CMPS_SPT_PGM_CODE' field.
   * @param value the value to set.
   */
  public void setCMPSSPTPGMCODE(java.lang.CharSequence value) {
    this.CMPS_SPT_PGM_CODE = value;
  }

  /**
   * Gets the value of the 'CMPS_SPCA_CAT' field.
   * @return The value of the 'CMPS_SPCA_CAT' field.
   */
  public java.lang.CharSequence getCMPSSPCACAT() {
    return CMPS_SPCA_CAT;
  }


  /**
   * Sets the value of the 'CMPS_SPCA_CAT' field.
   * @param value the value to set.
   */
  public void setCMPSSPCACAT(java.lang.CharSequence value) {
    this.CMPS_SPCA_CAT = value;
  }

  /**
   * Gets the value of the 'CMPS_SPT_NAME' field.
   * @return The value of the 'CMPS_SPT_NAME' field.
   */
  public java.lang.CharSequence getCMPSSPTNAME() {
    return CMPS_SPT_NAME;
  }


  /**
   * Sets the value of the 'CMPS_SPT_NAME' field.
   * @param value the value to set.
   */
  public void setCMPSSPTNAME(java.lang.CharSequence value) {
    this.CMPS_SPT_NAME = value;
  }

  /**
   * Gets the value of the 'CMPS_NIEL_CAT' field.
   * @return The value of the 'CMPS_NIEL_CAT' field.
   */
  public java.lang.CharSequence getCMPSNIELCAT() {
    return CMPS_NIEL_CAT;
  }


  /**
   * Sets the value of the 'CMPS_NIEL_CAT' field.
   * @param value the value to set.
   */
  public void setCMPSNIELCAT(java.lang.CharSequence value) {
    this.CMPS_NIEL_CAT = value;
  }

  /**
   * Gets the value of the 'CMPS_STANDARD_IND' field.
   * @return The value of the 'CMPS_STANDARD_IND' field.
   */
  public java.lang.CharSequence getCMPSSTANDARDIND() {
    return CMPS_STANDARD_IND;
  }


  /**
   * Sets the value of the 'CMPS_STANDARD_IND' field.
   * @param value the value to set.
   */
  public void setCMPSSTANDARDIND(java.lang.CharSequence value) {
    this.CMPS_STANDARD_IND = value;
  }

  /**
   * Gets the value of the 'CMPS_NLSN_SUM_CODE' field.
   * @return The value of the 'CMPS_NLSN_SUM_CODE' field.
   */
  public java.lang.CharSequence getCMPSNLSNSUMCODE() {
    return CMPS_NLSN_SUM_CODE;
  }


  /**
   * Sets the value of the 'CMPS_NLSN_SUM_CODE' field.
   * @param value the value to set.
   */
  public void setCMPSNLSNSUMCODE(java.lang.CharSequence value) {
    this.CMPS_NLSN_SUM_CODE = value;
  }

  /**
   * Gets the value of the 'CDC_KEY' field.
   * @return The value of the 'CDC_KEY' field.
   */
  public java.lang.Double getCDCKEY() {
    return CDC_KEY;
  }


  /**
   * Sets the value of the 'CDC_KEY' field.
   * @param value the value to set.
   */
  public void setCDCKEY(java.lang.Double value) {
    this.CDC_KEY = value;
  }

  /**
   * Gets the value of the 'SRC_KEY_VAL' field.
   * @return The value of the 'SRC_KEY_VAL' field.
   */
  public java.lang.CharSequence getSRCKEYVAL() {
    return SRC_KEY_VAL;
  }


  /**
   * Sets the value of the 'SRC_KEY_VAL' field.
   * @param value the value to set.
   */
  public void setSRCKEYVAL(java.lang.CharSequence value) {
    this.SRC_KEY_VAL = value;
  }

  /**
   * Gets the value of the 'SRC_CDC_OPER_NM' field.
   * @return The value of the 'SRC_CDC_OPER_NM' field.
   */
  public java.lang.CharSequence getSRCCDCOPERNM() {
    return SRC_CDC_OPER_NM;
  }


  /**
   * Sets the value of the 'SRC_CDC_OPER_NM' field.
   * @param value the value to set.
   */
  public void setSRCCDCOPERNM(java.lang.CharSequence value) {
    this.SRC_CDC_OPER_NM = value;
  }

  /**
   * Gets the value of the 'SRC_COMMIT_DT_UTC' field.
   * @return The value of the 'SRC_COMMIT_DT_UTC' field.
   */
  public java.lang.CharSequence getSRCCOMMITDTUTC() {
    return SRC_COMMIT_DT_UTC;
  }


  /**
   * Sets the value of the 'SRC_COMMIT_DT_UTC' field.
   * @param value the value to set.
   */
  public void setSRCCOMMITDTUTC(java.lang.CharSequence value) {
    this.SRC_COMMIT_DT_UTC = value;
  }

  /**
   * Gets the value of the 'TRG_CRT_DT_PART_UTC' field.
   * @return The value of the 'TRG_CRT_DT_PART_UTC' field.
   */
  public java.lang.CharSequence getTRGCRTDTPARTUTC() {
    return TRG_CRT_DT_PART_UTC;
  }


  /**
   * Sets the value of the 'TRG_CRT_DT_PART_UTC' field.
   * @param value the value to set.
   */
  public void setTRGCRTDTPARTUTC(java.lang.CharSequence value) {
    this.TRG_CRT_DT_PART_UTC = value;
  }

  /**
   * Gets the value of the 'SRC_SCHEMA_NM' field.
   * @return The value of the 'SRC_SCHEMA_NM' field.
   */
  public java.lang.CharSequence getSRCSCHEMANM() {
    return SRC_SCHEMA_NM;
  }


  /**
   * Sets the value of the 'SRC_SCHEMA_NM' field.
   * @param value the value to set.
   */
  public void setSRCSCHEMANM(java.lang.CharSequence value) {
    this.SRC_SCHEMA_NM = value;
  }

  /**
   * Creates a new LNDCDC_NCS_TCS_COMPETITOR_SPORTS RecordBuilder.
   * @return A new LNDCDC_NCS_TCS_COMPETITOR_SPORTS RecordBuilder
   */
  public static org.LNDCDC_NCS_TCS.COMPETITOR_SPORTS.apache.nifi.LNDCDC_NCS_TCS_COMPETITOR_SPORTS.Builder newBuilder() {
    return new org.LNDCDC_NCS_TCS.COMPETITOR_SPORTS.apache.nifi.LNDCDC_NCS_TCS_COMPETITOR_SPORTS.Builder();
  }

  /**
   * Creates a new LNDCDC_NCS_TCS_COMPETITOR_SPORTS RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new LNDCDC_NCS_TCS_COMPETITOR_SPORTS RecordBuilder
   */
  public static org.LNDCDC_NCS_TCS.COMPETITOR_SPORTS.apache.nifi.LNDCDC_NCS_TCS_COMPETITOR_SPORTS.Builder newBuilder(org.LNDCDC_NCS_TCS.COMPETITOR_SPORTS.apache.nifi.LNDCDC_NCS_TCS_COMPETITOR_SPORTS.Builder other) {
    if (other == null) {
      return new org.LNDCDC_NCS_TCS.COMPETITOR_SPORTS.apache.nifi.LNDCDC_NCS_TCS_COMPETITOR_SPORTS.Builder();
    } else {
      return new org.LNDCDC_NCS_TCS.COMPETITOR_SPORTS.apache.nifi.LNDCDC_NCS_TCS_COMPETITOR_SPORTS.Builder(other);
    }
  }

  /**
   * Creates a new LNDCDC_NCS_TCS_COMPETITOR_SPORTS RecordBuilder by copying an existing LNDCDC_NCS_TCS_COMPETITOR_SPORTS instance.
   * @param other The existing instance to copy.
   * @return A new LNDCDC_NCS_TCS_COMPETITOR_SPORTS RecordBuilder
   */
  public static org.LNDCDC_NCS_TCS.COMPETITOR_SPORTS.apache.nifi.LNDCDC_NCS_TCS_COMPETITOR_SPORTS.Builder newBuilder(org.LNDCDC_NCS_TCS.COMPETITOR_SPORTS.apache.nifi.LNDCDC_NCS_TCS_COMPETITOR_SPORTS other) {
    if (other == null) {
      return new org.LNDCDC_NCS_TCS.COMPETITOR_SPORTS.apache.nifi.LNDCDC_NCS_TCS_COMPETITOR_SPORTS.Builder();
    } else {
      return new org.LNDCDC_NCS_TCS.COMPETITOR_SPORTS.apache.nifi.LNDCDC_NCS_TCS_COMPETITOR_SPORTS.Builder(other);
    }
  }

  /**
   * RecordBuilder for LNDCDC_NCS_TCS_COMPETITOR_SPORTS instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<LNDCDC_NCS_TCS_COMPETITOR_SPORTS>
    implements org.apache.avro.data.RecordBuilder<LNDCDC_NCS_TCS_COMPETITOR_SPORTS> {

    private java.lang.CharSequence CMPS_SPT_PGM_CODE;
    private java.lang.CharSequence CMPS_SPCA_CAT;
    private java.lang.CharSequence CMPS_SPT_NAME;
    private java.lang.CharSequence CMPS_NIEL_CAT;
    private java.lang.CharSequence CMPS_STANDARD_IND;
    private java.lang.CharSequence CMPS_NLSN_SUM_CODE;
    private java.lang.Double CDC_KEY;
    private java.lang.CharSequence SRC_KEY_VAL;
    private java.lang.CharSequence SRC_CDC_OPER_NM;
    private java.lang.CharSequence SRC_COMMIT_DT_UTC;
    private java.lang.CharSequence TRG_CRT_DT_PART_UTC;
    private java.lang.CharSequence SRC_SCHEMA_NM;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(org.LNDCDC_NCS_TCS.COMPETITOR_SPORTS.apache.nifi.LNDCDC_NCS_TCS_COMPETITOR_SPORTS.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.CMPS_SPT_PGM_CODE)) {
        this.CMPS_SPT_PGM_CODE = data().deepCopy(fields()[0].schema(), other.CMPS_SPT_PGM_CODE);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.CMPS_SPCA_CAT)) {
        this.CMPS_SPCA_CAT = data().deepCopy(fields()[1].schema(), other.CMPS_SPCA_CAT);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.CMPS_SPT_NAME)) {
        this.CMPS_SPT_NAME = data().deepCopy(fields()[2].schema(), other.CMPS_SPT_NAME);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.CMPS_NIEL_CAT)) {
        this.CMPS_NIEL_CAT = data().deepCopy(fields()[3].schema(), other.CMPS_NIEL_CAT);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.CMPS_STANDARD_IND)) {
        this.CMPS_STANDARD_IND = data().deepCopy(fields()[4].schema(), other.CMPS_STANDARD_IND);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.CMPS_NLSN_SUM_CODE)) {
        this.CMPS_NLSN_SUM_CODE = data().deepCopy(fields()[5].schema(), other.CMPS_NLSN_SUM_CODE);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.CDC_KEY)) {
        this.CDC_KEY = data().deepCopy(fields()[6].schema(), other.CDC_KEY);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.SRC_KEY_VAL)) {
        this.SRC_KEY_VAL = data().deepCopy(fields()[7].schema(), other.SRC_KEY_VAL);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.SRC_CDC_OPER_NM)) {
        this.SRC_CDC_OPER_NM = data().deepCopy(fields()[8].schema(), other.SRC_CDC_OPER_NM);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
      if (isValidValue(fields()[9], other.SRC_COMMIT_DT_UTC)) {
        this.SRC_COMMIT_DT_UTC = data().deepCopy(fields()[9].schema(), other.SRC_COMMIT_DT_UTC);
        fieldSetFlags()[9] = other.fieldSetFlags()[9];
      }
      if (isValidValue(fields()[10], other.TRG_CRT_DT_PART_UTC)) {
        this.TRG_CRT_DT_PART_UTC = data().deepCopy(fields()[10].schema(), other.TRG_CRT_DT_PART_UTC);
        fieldSetFlags()[10] = other.fieldSetFlags()[10];
      }
      if (isValidValue(fields()[11], other.SRC_SCHEMA_NM)) {
        this.SRC_SCHEMA_NM = data().deepCopy(fields()[11].schema(), other.SRC_SCHEMA_NM);
        fieldSetFlags()[11] = other.fieldSetFlags()[11];
      }
    }

    /**
     * Creates a Builder by copying an existing LNDCDC_NCS_TCS_COMPETITOR_SPORTS instance
     * @param other The existing instance to copy.
     */
    private Builder(org.LNDCDC_NCS_TCS.COMPETITOR_SPORTS.apache.nifi.LNDCDC_NCS_TCS_COMPETITOR_SPORTS other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.CMPS_SPT_PGM_CODE)) {
        this.CMPS_SPT_PGM_CODE = data().deepCopy(fields()[0].schema(), other.CMPS_SPT_PGM_CODE);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.CMPS_SPCA_CAT)) {
        this.CMPS_SPCA_CAT = data().deepCopy(fields()[1].schema(), other.CMPS_SPCA_CAT);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.CMPS_SPT_NAME)) {
        this.CMPS_SPT_NAME = data().deepCopy(fields()[2].schema(), other.CMPS_SPT_NAME);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.CMPS_NIEL_CAT)) {
        this.CMPS_NIEL_CAT = data().deepCopy(fields()[3].schema(), other.CMPS_NIEL_CAT);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.CMPS_STANDARD_IND)) {
        this.CMPS_STANDARD_IND = data().deepCopy(fields()[4].schema(), other.CMPS_STANDARD_IND);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.CMPS_NLSN_SUM_CODE)) {
        this.CMPS_NLSN_SUM_CODE = data().deepCopy(fields()[5].schema(), other.CMPS_NLSN_SUM_CODE);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.CDC_KEY)) {
        this.CDC_KEY = data().deepCopy(fields()[6].schema(), other.CDC_KEY);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.SRC_KEY_VAL)) {
        this.SRC_KEY_VAL = data().deepCopy(fields()[7].schema(), other.SRC_KEY_VAL);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.SRC_CDC_OPER_NM)) {
        this.SRC_CDC_OPER_NM = data().deepCopy(fields()[8].schema(), other.SRC_CDC_OPER_NM);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.SRC_COMMIT_DT_UTC)) {
        this.SRC_COMMIT_DT_UTC = data().deepCopy(fields()[9].schema(), other.SRC_COMMIT_DT_UTC);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.TRG_CRT_DT_PART_UTC)) {
        this.TRG_CRT_DT_PART_UTC = data().deepCopy(fields()[10].schema(), other.TRG_CRT_DT_PART_UTC);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.SRC_SCHEMA_NM)) {
        this.SRC_SCHEMA_NM = data().deepCopy(fields()[11].schema(), other.SRC_SCHEMA_NM);
        fieldSetFlags()[11] = true;
      }
    }

    /**
      * Gets the value of the 'CMPS_SPT_PGM_CODE' field.
      * @return The value.
      */
    public java.lang.CharSequence getCMPSSPTPGMCODE() {
      return CMPS_SPT_PGM_CODE;
    }


    /**
      * Sets the value of the 'CMPS_SPT_PGM_CODE' field.
      * @param value The value of 'CMPS_SPT_PGM_CODE'.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.COMPETITOR_SPORTS.apache.nifi.LNDCDC_NCS_TCS_COMPETITOR_SPORTS.Builder setCMPSSPTPGMCODE(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.CMPS_SPT_PGM_CODE = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'CMPS_SPT_PGM_CODE' field has been set.
      * @return True if the 'CMPS_SPT_PGM_CODE' field has been set, false otherwise.
      */
    public boolean hasCMPSSPTPGMCODE() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'CMPS_SPT_PGM_CODE' field.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.COMPETITOR_SPORTS.apache.nifi.LNDCDC_NCS_TCS_COMPETITOR_SPORTS.Builder clearCMPSSPTPGMCODE() {
      CMPS_SPT_PGM_CODE = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'CMPS_SPCA_CAT' field.
      * @return The value.
      */
    public java.lang.CharSequence getCMPSSPCACAT() {
      return CMPS_SPCA_CAT;
    }


    /**
      * Sets the value of the 'CMPS_SPCA_CAT' field.
      * @param value The value of 'CMPS_SPCA_CAT'.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.COMPETITOR_SPORTS.apache.nifi.LNDCDC_NCS_TCS_COMPETITOR_SPORTS.Builder setCMPSSPCACAT(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.CMPS_SPCA_CAT = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'CMPS_SPCA_CAT' field has been set.
      * @return True if the 'CMPS_SPCA_CAT' field has been set, false otherwise.
      */
    public boolean hasCMPSSPCACAT() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'CMPS_SPCA_CAT' field.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.COMPETITOR_SPORTS.apache.nifi.LNDCDC_NCS_TCS_COMPETITOR_SPORTS.Builder clearCMPSSPCACAT() {
      CMPS_SPCA_CAT = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'CMPS_SPT_NAME' field.
      * @return The value.
      */
    public java.lang.CharSequence getCMPSSPTNAME() {
      return CMPS_SPT_NAME;
    }


    /**
      * Sets the value of the 'CMPS_SPT_NAME' field.
      * @param value The value of 'CMPS_SPT_NAME'.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.COMPETITOR_SPORTS.apache.nifi.LNDCDC_NCS_TCS_COMPETITOR_SPORTS.Builder setCMPSSPTNAME(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.CMPS_SPT_NAME = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'CMPS_SPT_NAME' field has been set.
      * @return True if the 'CMPS_SPT_NAME' field has been set, false otherwise.
      */
    public boolean hasCMPSSPTNAME() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'CMPS_SPT_NAME' field.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.COMPETITOR_SPORTS.apache.nifi.LNDCDC_NCS_TCS_COMPETITOR_SPORTS.Builder clearCMPSSPTNAME() {
      CMPS_SPT_NAME = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'CMPS_NIEL_CAT' field.
      * @return The value.
      */
    public java.lang.CharSequence getCMPSNIELCAT() {
      return CMPS_NIEL_CAT;
    }


    /**
      * Sets the value of the 'CMPS_NIEL_CAT' field.
      * @param value The value of 'CMPS_NIEL_CAT'.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.COMPETITOR_SPORTS.apache.nifi.LNDCDC_NCS_TCS_COMPETITOR_SPORTS.Builder setCMPSNIELCAT(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.CMPS_NIEL_CAT = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'CMPS_NIEL_CAT' field has been set.
      * @return True if the 'CMPS_NIEL_CAT' field has been set, false otherwise.
      */
    public boolean hasCMPSNIELCAT() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'CMPS_NIEL_CAT' field.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.COMPETITOR_SPORTS.apache.nifi.LNDCDC_NCS_TCS_COMPETITOR_SPORTS.Builder clearCMPSNIELCAT() {
      CMPS_NIEL_CAT = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'CMPS_STANDARD_IND' field.
      * @return The value.
      */
    public java.lang.CharSequence getCMPSSTANDARDIND() {
      return CMPS_STANDARD_IND;
    }


    /**
      * Sets the value of the 'CMPS_STANDARD_IND' field.
      * @param value The value of 'CMPS_STANDARD_IND'.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.COMPETITOR_SPORTS.apache.nifi.LNDCDC_NCS_TCS_COMPETITOR_SPORTS.Builder setCMPSSTANDARDIND(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.CMPS_STANDARD_IND = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'CMPS_STANDARD_IND' field has been set.
      * @return True if the 'CMPS_STANDARD_IND' field has been set, false otherwise.
      */
    public boolean hasCMPSSTANDARDIND() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'CMPS_STANDARD_IND' field.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.COMPETITOR_SPORTS.apache.nifi.LNDCDC_NCS_TCS_COMPETITOR_SPORTS.Builder clearCMPSSTANDARDIND() {
      CMPS_STANDARD_IND = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'CMPS_NLSN_SUM_CODE' field.
      * @return The value.
      */
    public java.lang.CharSequence getCMPSNLSNSUMCODE() {
      return CMPS_NLSN_SUM_CODE;
    }


    /**
      * Sets the value of the 'CMPS_NLSN_SUM_CODE' field.
      * @param value The value of 'CMPS_NLSN_SUM_CODE'.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.COMPETITOR_SPORTS.apache.nifi.LNDCDC_NCS_TCS_COMPETITOR_SPORTS.Builder setCMPSNLSNSUMCODE(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.CMPS_NLSN_SUM_CODE = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'CMPS_NLSN_SUM_CODE' field has been set.
      * @return True if the 'CMPS_NLSN_SUM_CODE' field has been set, false otherwise.
      */
    public boolean hasCMPSNLSNSUMCODE() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'CMPS_NLSN_SUM_CODE' field.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.COMPETITOR_SPORTS.apache.nifi.LNDCDC_NCS_TCS_COMPETITOR_SPORTS.Builder clearCMPSNLSNSUMCODE() {
      CMPS_NLSN_SUM_CODE = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'CDC_KEY' field.
      * @return The value.
      */
    public java.lang.Double getCDCKEY() {
      return CDC_KEY;
    }


    /**
      * Sets the value of the 'CDC_KEY' field.
      * @param value The value of 'CDC_KEY'.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.COMPETITOR_SPORTS.apache.nifi.LNDCDC_NCS_TCS_COMPETITOR_SPORTS.Builder setCDCKEY(java.lang.Double value) {
      validate(fields()[6], value);
      this.CDC_KEY = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'CDC_KEY' field has been set.
      * @return True if the 'CDC_KEY' field has been set, false otherwise.
      */
    public boolean hasCDCKEY() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'CDC_KEY' field.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.COMPETITOR_SPORTS.apache.nifi.LNDCDC_NCS_TCS_COMPETITOR_SPORTS.Builder clearCDCKEY() {
      CDC_KEY = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'SRC_KEY_VAL' field.
      * @return The value.
      */
    public java.lang.CharSequence getSRCKEYVAL() {
      return SRC_KEY_VAL;
    }


    /**
      * Sets the value of the 'SRC_KEY_VAL' field.
      * @param value The value of 'SRC_KEY_VAL'.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.COMPETITOR_SPORTS.apache.nifi.LNDCDC_NCS_TCS_COMPETITOR_SPORTS.Builder setSRCKEYVAL(java.lang.CharSequence value) {
      validate(fields()[7], value);
      this.SRC_KEY_VAL = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'SRC_KEY_VAL' field has been set.
      * @return True if the 'SRC_KEY_VAL' field has been set, false otherwise.
      */
    public boolean hasSRCKEYVAL() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'SRC_KEY_VAL' field.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.COMPETITOR_SPORTS.apache.nifi.LNDCDC_NCS_TCS_COMPETITOR_SPORTS.Builder clearSRCKEYVAL() {
      SRC_KEY_VAL = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'SRC_CDC_OPER_NM' field.
      * @return The value.
      */
    public java.lang.CharSequence getSRCCDCOPERNM() {
      return SRC_CDC_OPER_NM;
    }


    /**
      * Sets the value of the 'SRC_CDC_OPER_NM' field.
      * @param value The value of 'SRC_CDC_OPER_NM'.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.COMPETITOR_SPORTS.apache.nifi.LNDCDC_NCS_TCS_COMPETITOR_SPORTS.Builder setSRCCDCOPERNM(java.lang.CharSequence value) {
      validate(fields()[8], value);
      this.SRC_CDC_OPER_NM = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'SRC_CDC_OPER_NM' field has been set.
      * @return True if the 'SRC_CDC_OPER_NM' field has been set, false otherwise.
      */
    public boolean hasSRCCDCOPERNM() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'SRC_CDC_OPER_NM' field.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.COMPETITOR_SPORTS.apache.nifi.LNDCDC_NCS_TCS_COMPETITOR_SPORTS.Builder clearSRCCDCOPERNM() {
      SRC_CDC_OPER_NM = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'SRC_COMMIT_DT_UTC' field.
      * @return The value.
      */
    public java.lang.CharSequence getSRCCOMMITDTUTC() {
      return SRC_COMMIT_DT_UTC;
    }


    /**
      * Sets the value of the 'SRC_COMMIT_DT_UTC' field.
      * @param value The value of 'SRC_COMMIT_DT_UTC'.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.COMPETITOR_SPORTS.apache.nifi.LNDCDC_NCS_TCS_COMPETITOR_SPORTS.Builder setSRCCOMMITDTUTC(java.lang.CharSequence value) {
      validate(fields()[9], value);
      this.SRC_COMMIT_DT_UTC = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'SRC_COMMIT_DT_UTC' field has been set.
      * @return True if the 'SRC_COMMIT_DT_UTC' field has been set, false otherwise.
      */
    public boolean hasSRCCOMMITDTUTC() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'SRC_COMMIT_DT_UTC' field.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.COMPETITOR_SPORTS.apache.nifi.LNDCDC_NCS_TCS_COMPETITOR_SPORTS.Builder clearSRCCOMMITDTUTC() {
      SRC_COMMIT_DT_UTC = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'TRG_CRT_DT_PART_UTC' field.
      * @return The value.
      */
    public java.lang.CharSequence getTRGCRTDTPARTUTC() {
      return TRG_CRT_DT_PART_UTC;
    }


    /**
      * Sets the value of the 'TRG_CRT_DT_PART_UTC' field.
      * @param value The value of 'TRG_CRT_DT_PART_UTC'.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.COMPETITOR_SPORTS.apache.nifi.LNDCDC_NCS_TCS_COMPETITOR_SPORTS.Builder setTRGCRTDTPARTUTC(java.lang.CharSequence value) {
      validate(fields()[10], value);
      this.TRG_CRT_DT_PART_UTC = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'TRG_CRT_DT_PART_UTC' field has been set.
      * @return True if the 'TRG_CRT_DT_PART_UTC' field has been set, false otherwise.
      */
    public boolean hasTRGCRTDTPARTUTC() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'TRG_CRT_DT_PART_UTC' field.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.COMPETITOR_SPORTS.apache.nifi.LNDCDC_NCS_TCS_COMPETITOR_SPORTS.Builder clearTRGCRTDTPARTUTC() {
      TRG_CRT_DT_PART_UTC = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'SRC_SCHEMA_NM' field.
      * @return The value.
      */
    public java.lang.CharSequence getSRCSCHEMANM() {
      return SRC_SCHEMA_NM;
    }


    /**
      * Sets the value of the 'SRC_SCHEMA_NM' field.
      * @param value The value of 'SRC_SCHEMA_NM'.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.COMPETITOR_SPORTS.apache.nifi.LNDCDC_NCS_TCS_COMPETITOR_SPORTS.Builder setSRCSCHEMANM(java.lang.CharSequence value) {
      validate(fields()[11], value);
      this.SRC_SCHEMA_NM = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'SRC_SCHEMA_NM' field has been set.
      * @return True if the 'SRC_SCHEMA_NM' field has been set, false otherwise.
      */
    public boolean hasSRCSCHEMANM() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'SRC_SCHEMA_NM' field.
      * @return This builder.
      */
    public org.LNDCDC_NCS_TCS.COMPETITOR_SPORTS.apache.nifi.LNDCDC_NCS_TCS_COMPETITOR_SPORTS.Builder clearSRCSCHEMANM() {
      SRC_SCHEMA_NM = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public LNDCDC_NCS_TCS_COMPETITOR_SPORTS build() {
      try {
        LNDCDC_NCS_TCS_COMPETITOR_SPORTS record = new LNDCDC_NCS_TCS_COMPETITOR_SPORTS();
        record.CMPS_SPT_PGM_CODE = fieldSetFlags()[0] ? this.CMPS_SPT_PGM_CODE : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.CMPS_SPCA_CAT = fieldSetFlags()[1] ? this.CMPS_SPCA_CAT : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.CMPS_SPT_NAME = fieldSetFlags()[2] ? this.CMPS_SPT_NAME : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.CMPS_NIEL_CAT = fieldSetFlags()[3] ? this.CMPS_NIEL_CAT : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.CMPS_STANDARD_IND = fieldSetFlags()[4] ? this.CMPS_STANDARD_IND : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.CMPS_NLSN_SUM_CODE = fieldSetFlags()[5] ? this.CMPS_NLSN_SUM_CODE : (java.lang.CharSequence) defaultValue(fields()[5]);
        record.CDC_KEY = fieldSetFlags()[6] ? this.CDC_KEY : (java.lang.Double) defaultValue(fields()[6]);
        record.SRC_KEY_VAL = fieldSetFlags()[7] ? this.SRC_KEY_VAL : (java.lang.CharSequence) defaultValue(fields()[7]);
        record.SRC_CDC_OPER_NM = fieldSetFlags()[8] ? this.SRC_CDC_OPER_NM : (java.lang.CharSequence) defaultValue(fields()[8]);
        record.SRC_COMMIT_DT_UTC = fieldSetFlags()[9] ? this.SRC_COMMIT_DT_UTC : (java.lang.CharSequence) defaultValue(fields()[9]);
        record.TRG_CRT_DT_PART_UTC = fieldSetFlags()[10] ? this.TRG_CRT_DT_PART_UTC : (java.lang.CharSequence) defaultValue(fields()[10]);
        record.SRC_SCHEMA_NM = fieldSetFlags()[11] ? this.SRC_SCHEMA_NM : (java.lang.CharSequence) defaultValue(fields()[11]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<LNDCDC_NCS_TCS_COMPETITOR_SPORTS>
    WRITER$ = (org.apache.avro.io.DatumWriter<LNDCDC_NCS_TCS_COMPETITOR_SPORTS>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<LNDCDC_NCS_TCS_COMPETITOR_SPORTS>
    READER$ = (org.apache.avro.io.DatumReader<LNDCDC_NCS_TCS_COMPETITOR_SPORTS>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    if (this.CMPS_SPT_PGM_CODE == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.CMPS_SPT_PGM_CODE);
    }

    if (this.CMPS_SPCA_CAT == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.CMPS_SPCA_CAT);
    }

    if (this.CMPS_SPT_NAME == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.CMPS_SPT_NAME);
    }

    if (this.CMPS_NIEL_CAT == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.CMPS_NIEL_CAT);
    }

    if (this.CMPS_STANDARD_IND == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.CMPS_STANDARD_IND);
    }

    if (this.CMPS_NLSN_SUM_CODE == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.CMPS_NLSN_SUM_CODE);
    }

    if (this.CDC_KEY == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeDouble(this.CDC_KEY);
    }

    out.writeString(this.SRC_KEY_VAL);

    out.writeString(this.SRC_CDC_OPER_NM);

    out.writeString(this.SRC_COMMIT_DT_UTC);

    out.writeString(this.TRG_CRT_DT_PART_UTC);

    out.writeString(this.SRC_SCHEMA_NM);

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      if (in.readIndex() != 1) {
        in.readNull();
        this.CMPS_SPT_PGM_CODE = null;
      } else {
        this.CMPS_SPT_PGM_CODE = in.readString(this.CMPS_SPT_PGM_CODE instanceof Utf8 ? (Utf8)this.CMPS_SPT_PGM_CODE : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.CMPS_SPCA_CAT = null;
      } else {
        this.CMPS_SPCA_CAT = in.readString(this.CMPS_SPCA_CAT instanceof Utf8 ? (Utf8)this.CMPS_SPCA_CAT : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.CMPS_SPT_NAME = null;
      } else {
        this.CMPS_SPT_NAME = in.readString(this.CMPS_SPT_NAME instanceof Utf8 ? (Utf8)this.CMPS_SPT_NAME : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.CMPS_NIEL_CAT = null;
      } else {
        this.CMPS_NIEL_CAT = in.readString(this.CMPS_NIEL_CAT instanceof Utf8 ? (Utf8)this.CMPS_NIEL_CAT : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.CMPS_STANDARD_IND = null;
      } else {
        this.CMPS_STANDARD_IND = in.readString(this.CMPS_STANDARD_IND instanceof Utf8 ? (Utf8)this.CMPS_STANDARD_IND : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.CMPS_NLSN_SUM_CODE = null;
      } else {
        this.CMPS_NLSN_SUM_CODE = in.readString(this.CMPS_NLSN_SUM_CODE instanceof Utf8 ? (Utf8)this.CMPS_NLSN_SUM_CODE : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.CDC_KEY = null;
      } else {
        this.CDC_KEY = in.readDouble();
      }

      this.SRC_KEY_VAL = in.readString(this.SRC_KEY_VAL instanceof Utf8 ? (Utf8)this.SRC_KEY_VAL : null);

      this.SRC_CDC_OPER_NM = in.readString(this.SRC_CDC_OPER_NM instanceof Utf8 ? (Utf8)this.SRC_CDC_OPER_NM : null);

      this.SRC_COMMIT_DT_UTC = in.readString(this.SRC_COMMIT_DT_UTC instanceof Utf8 ? (Utf8)this.SRC_COMMIT_DT_UTC : null);

      this.TRG_CRT_DT_PART_UTC = in.readString(this.TRG_CRT_DT_PART_UTC instanceof Utf8 ? (Utf8)this.TRG_CRT_DT_PART_UTC : null);

      this.SRC_SCHEMA_NM = in.readString(this.SRC_SCHEMA_NM instanceof Utf8 ? (Utf8)this.SRC_SCHEMA_NM : null);

    } else {
      for (int i = 0; i < 12; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          if (in.readIndex() != 1) {
            in.readNull();
            this.CMPS_SPT_PGM_CODE = null;
          } else {
            this.CMPS_SPT_PGM_CODE = in.readString(this.CMPS_SPT_PGM_CODE instanceof Utf8 ? (Utf8)this.CMPS_SPT_PGM_CODE : null);
          }
          break;

        case 1:
          if (in.readIndex() != 1) {
            in.readNull();
            this.CMPS_SPCA_CAT = null;
          } else {
            this.CMPS_SPCA_CAT = in.readString(this.CMPS_SPCA_CAT instanceof Utf8 ? (Utf8)this.CMPS_SPCA_CAT : null);
          }
          break;

        case 2:
          if (in.readIndex() != 1) {
            in.readNull();
            this.CMPS_SPT_NAME = null;
          } else {
            this.CMPS_SPT_NAME = in.readString(this.CMPS_SPT_NAME instanceof Utf8 ? (Utf8)this.CMPS_SPT_NAME : null);
          }
          break;

        case 3:
          if (in.readIndex() != 1) {
            in.readNull();
            this.CMPS_NIEL_CAT = null;
          } else {
            this.CMPS_NIEL_CAT = in.readString(this.CMPS_NIEL_CAT instanceof Utf8 ? (Utf8)this.CMPS_NIEL_CAT : null);
          }
          break;

        case 4:
          if (in.readIndex() != 1) {
            in.readNull();
            this.CMPS_STANDARD_IND = null;
          } else {
            this.CMPS_STANDARD_IND = in.readString(this.CMPS_STANDARD_IND instanceof Utf8 ? (Utf8)this.CMPS_STANDARD_IND : null);
          }
          break;

        case 5:
          if (in.readIndex() != 1) {
            in.readNull();
            this.CMPS_NLSN_SUM_CODE = null;
          } else {
            this.CMPS_NLSN_SUM_CODE = in.readString(this.CMPS_NLSN_SUM_CODE instanceof Utf8 ? (Utf8)this.CMPS_NLSN_SUM_CODE : null);
          }
          break;

        case 6:
          if (in.readIndex() != 1) {
            in.readNull();
            this.CDC_KEY = null;
          } else {
            this.CDC_KEY = in.readDouble();
          }
          break;

        case 7:
          this.SRC_KEY_VAL = in.readString(this.SRC_KEY_VAL instanceof Utf8 ? (Utf8)this.SRC_KEY_VAL : null);
          break;

        case 8:
          this.SRC_CDC_OPER_NM = in.readString(this.SRC_CDC_OPER_NM instanceof Utf8 ? (Utf8)this.SRC_CDC_OPER_NM : null);
          break;

        case 9:
          this.SRC_COMMIT_DT_UTC = in.readString(this.SRC_COMMIT_DT_UTC instanceof Utf8 ? (Utf8)this.SRC_COMMIT_DT_UTC : null);
          break;

        case 10:
          this.TRG_CRT_DT_PART_UTC = in.readString(this.TRG_CRT_DT_PART_UTC instanceof Utf8 ? (Utf8)this.TRG_CRT_DT_PART_UTC : null);
          break;

        case 11:
          this.SRC_SCHEMA_NM = in.readString(this.SRC_SCHEMA_NM instanceof Utf8 ? (Utf8)this.SRC_SCHEMA_NM : null);
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










